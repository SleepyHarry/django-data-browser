{"version":3,"sources":["Util.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","useData","useState","data","setData","useEffect","updates","prev","Cookies","body","JSON","stringify","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","doPost","to","Delete","state","setState","Overlay","message","Object","prototype","hasOwnProperty","Spacer","spaces","Array","map","_","key","HeadCell","query","field","modelField","getField","pathStr","getType","removeField","moveField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","toggleSort","dsc","priority","asc","null","sort","DataCell","React","memo","formattedValue","span","value","formatHint","dangerouslySetInnerHTML","__html","highCutOff","lowCutOff","toExponential","significantFigures","toFixed","decimalPlaces","parts","toString","split","replace","join","String","colSpan","VTableHeadRow","fields","classNameFirst","i","VTableBodyRow","row","formatHints","HTableRow","col","Results","cols","rows","overlay","colFields","rowFields","length","resFields","rowIndex","table","empty","filterErrors","getPartsForQuery","model","f","filters","lookup","limit","getRelUrlForQuery","media","query_str","getUrlForQuery","baseUrl","relUrl","origin","Query","config","setQuery","this","path","slice","allModelFields","types","lookup_type","lookups","choices","defaultValue","findIndex","newFields","filter","priorities","newPriority","Math","max","push","left","index","_getFieldIndex","newIndex","splice","concat","newSort","newFilters","getDefaultLookupValue","Number","defaultFilters","defaultRowLimit","FilterValue","onChange","onChangeEvent","weekday","month","step","option","label","Filter","errorMessage","removeFilter","addField","defaultSort","setFilterLookup","sortedLookups","lookupName","val","setFilterValue","Filters","Field","toggled","setToggled","prettyName","AllFields","modelFields","getModelFields","sortedFields","fieldName","ModelSelector","sortedModels","setModel","Logo","QueryPage","results","setLimit","min","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","createdTime","description","checked","public","publicLink","googleSheetsFormula","SavedViewList","savedViews","HomePage","QueryApp","fieldStr","setStatus","queryStr","useLocation","search","handleError","Sentry","fetchResults","popstate","reqState","history","replaceState","addEventListener","removeEventListener","queryObj","queryChange","newState","request","pushState","sortBy","req","deepStrictEqual","App","basename","id","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d05b4a85.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"Link \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"sLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nfunction is(x: any, y: any) {\n    return (\n        (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n    );\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n    if (is(objA, objB)) {\n        return true;\n    }\n\n    if (\n        typeof objA !== \"object\" ||\n        objA === null ||\n        typeof objB !== \"object\" ||\n        objB === null\n    ) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        console.log(\"different keys\", keysA, keysB);\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (\n            !hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])\n        ) {\n            console.log(\n                \"different key\",\n                keysA[i],\n                objA[keysA[i]],\n                objB[keysA[i]]\n            );\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n    shallowEqual,\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay } from \"./Util\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.pathStr);\n  const type = query.getType(modelField);\n  return (\n    <th {...{ className }}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      <SLink onClick={() => query.moveField(field, true)}>chevron_left</SLink>\n      <SLink onClick={() => query.moveField(field, false)}>chevron_right</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.pathStr)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {field.pathStr} {/* TODO should be pretty path */}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + field.pathStr /* TODO should be pretty path */\n      )}\n    </th>\n  );\n}\n\nconst DataCell = React.memo((props) => {\n  const { modelField, className, span, value, formatHint } = props;\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (value === null) {\n    formattedValue = null;\n  } else if (modelField.type === \"html\" && value) {\n    formattedValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else if (modelField.type === \"number\") {\n    if (\n      value > formatHint.highCutOff ||\n      value < -formatHint.highCutOff ||\n      (value && value < formatHint.lowCutOff && value > -formatHint.lowCutOff)\n    ) {\n      formattedValue = value.toExponential(formatHint.significantFigures - 1);\n    } else {\n      formattedValue = value.toFixed(formatHint.decimalPlaces);\n      var parts = value.toFixed(formatHint.decimalPlaces).toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      formattedValue = parts.join(\".\");\n    }\n  } else {\n    formattedValue = String(value);\n  }\n  return (\n    <td className={modelField.type + \" \" + className || \"\"} colSpan={span || 1}>\n      {formattedValue}\n    </td>\n  );\n});\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const { fields, query, classNameFirst, className, row, formatHints } = props;\n  return fields.map((field, i) => {\n    if (row)\n      return (\n        <DataCell\n          key={field.pathStr}\n          value={row[field.pathStr]}\n          className={`${i ? \"\" : classNameFirst} ${className}`}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n        />\n      );\n    else\n      return (\n        <td\n          key={field.pathStr}\n          className={`${i ? \"\" : classNameFirst} Empty`}\n        ></td>\n      );\n  });\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span, className, formatHints } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, span, className }}\n          value={col[field.pathStr]}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay, formatHints } = props;\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* pivoted data */}\n            {query.colFields().map((field) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={query.rowFields().length - 1} />\n                  <HTableRow\n                    {...{ query, field, formatHints }}\n                    span={query.resFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* column headers */}\n            <tr>\n              <Spacer spaces={1 - query.rowFields().length} />\n              <VTableHeadRow\n                {...{ query }}\n                fields={query.rowFields()}\n                className=\"Freeze\"\n              />\n              {cols.map((_, key) => (\n                <VTableHeadRow\n                  {...{ key, query }}\n                  fields={query.resFields()}\n                  classNameFirst=\"LeftBorder\"\n                  className=\"Freeze\"\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {rows.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                <Spacer spaces={1 - query.rowFields().length} />\n                <VTableBodyRow\n                  {...{ query, row, formatHints }}\n                  fields={query.rowFields()}\n                />\n                {body.map((table, key) => (\n                  <VTableBodyRow\n                    {...{ key, query, formatHints }}\n                    fields={query.resFields()}\n                    row={table[rowIndex]}\n                    classNameFirst=\"LeftBorder\"\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n  formatHints: {},\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.pathStr +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.pathStr}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getRelUrlForQuery(query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  return `query/${model}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const relUrl = getRelUrlForQuery(query, media);\n  return `${window.location.origin}${baseUrl}${relUrl}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(pathStr) {\n    const path = pathStr.split(\"__\");\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[path.slice(-1)];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(field, type, lookup) {\n    const lookup_type = type.lookups[lookup].type;\n    if (lookup_type === \"numberchoice\" || lookup_type === \"stringchoice\")\n      return String(field.choices[0][0]);\n    else return String(this.config.types[lookup_type].defaultValue);\n  }\n\n  _getFieldIndex(field, fields) {\n    return fields.findIndex((f) => f.pathStr === field.pathStr);\n  }\n\n  addField(pathStr, sort) {\n    const newFields = this.query.fields.filter((f) => f.pathStr !== pathStr);\n    const priorities = newFields\n      .map((f) => f.priority)\n      .filter((f) => f !== null);\n    const newPriority = priorities.length ? Math.max(...priorities) + 1 : 0;\n    newFields.push({\n      pathStr: pathStr,\n      sort: sort,\n      priority: sort ? newPriority : null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    const modelField = this.getField(field.pathStr);\n    this.setQuery(\n      {\n        fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n      },\n      modelField.canPivot\n    );\n  }\n\n  moveField(field, left) {\n    const modelField = this.getField(field.pathStr);\n\n    // get the fields in their sections\n    const colFields = this.colFields().slice();\n    const rowFields = this.rowFields().slice();\n    const resFields = this.resFields().slice();\n\n    // pick the section our field is in\n    let fields = null;\n    if (field.pivoted) fields = colFields;\n    else if (modelField.canPivot || !colFields.length) fields = rowFields;\n    else fields = resFields;\n\n    // work out it's old and new index\n    const index = this._getFieldIndex(field, fields);\n    const newIndex = index + (left ? -1 : 1);\n\n    // if anything changed then update our section and then\n    // rebuild all the fields from the sections\n    if (0 <= newIndex && newIndex < fields.length) {\n      fields.splice(index, 1);\n      fields.splice(newIndex, 0, field);\n      this.setQuery(\n        { fields: [].concat(rowFields, colFields, resFields) },\n        false\n      );\n    }\n  }\n\n  toggleSort(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(pathStr) {\n    const field = this.getField(pathStr);\n    const type = this.getType(field);\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      pathStr: pathStr,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(field, type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const field = this.getField(newFilters[index].pathStr);\n    const type = this.getType(field);\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(field, type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: this.config.allModelFields[model].defaultFilters,\n      limit: this.config.defaultRowLimit,\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.pathStr).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !this.getField(f.pathStr).canPivot\n      );\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { Query, getPartsForQuery, getRelUrlForQuery, getUrlForQuery, empty };\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery, getRelUrlForQuery } from \"./Query\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookup, onChange, value, field } = props;\n  const onChangeEvent = (e) => onChange(e.target.value);\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (lookup.type === \"weekday\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ].map((weekday) => (\n          <option value={weekday}>{weekday}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"month\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {[\n          \"January\",\n          \"Febuary\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ].map((month) => (\n          <option value={month}>{month}</option>\n        ))}\n      </select>\n    );\n  else if (\n    field.choices.length &&\n    (lookup.type === \"numberchoice\" || lookup.type === \"stringchoice\")\n  )\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {field.choices.map(([option, label]) => (\n          <option value={option}>{label}</option>\n        ))}\n      </select>\n    );\n  else if (\n    lookup.type === \"number\" ||\n    lookup.type === \"numberchoice\" ||\n    lookup.type === \"year\"\n  )\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  else if (lookup.type === \"jsonfield\") {\n    const parts = value.split(/\\|(.*)/);\n    return (\n      <>\n        <input\n          value={parts[0]}\n          onChange={(e) => onChange(`${e.target.value}|${parts[1]}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n        <input\n          value={parts[1]}\n          onChange={(e) => onChange(`${parts[0]}|${e.target.value}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n      </>\n    );\n  } else\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"text\"\n      />\n    );\n}\n\nfunction Filter(props) {\n  const { pathStr, index, lookup, query, value, errorMessage } = props;\n  const field = query.getField(pathStr);\n  const type = query.getType(field);\n  return (\n    <tr>\n      <td>\n        <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n        <TLink onClick={() => query.addField(pathStr, type.defaultSort)}>\n          {pathStr} {/* TODO should be pretty path */}\n        </TLink>{\" \"}\n      </td>\n      <td>\n        <select\n          className=\"Lookup\"\n          value={lookup}\n          onChange={(e) => query.setFilterLookup(index, e.target.value)}\n        >\n          {type.sortedLookups.map((lookupName) => (\n            <option key={lookupName} value={lookupName}>\n              {lookupName.replace(/_/g, \" \")}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td>=</td>\n      <td>\n        <FilterValue\n          {...{ value, field }}\n          onChange={(val) => query.setFilterValue(index, val)}\n          lookup={type.lookups[lookup]}\n        />\n        {errorMessage && <p className=\"Error\">{errorMessage}</p>}\n      </td>\n    </tr>\n  );\n}\n\nfunction Filters(props) {\n  const { query, filterErrors } = props;\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nfunction Field(props) {\n  const { query, path, modelField } = props;\n  const type = query.getType(modelField);\n  const [toggled, setToggled] = useState(false);\n  return (\n    <>\n      <tr>\n        <td>\n          {modelField.concrete && type.defaultLookup && (\n            <SLink onClick={() => query.addFilter(path.join(\"__\"))}>\n              filter_alt\n            </SLink>\n          )}\n        </td>\n        <td>\n          {modelField.model && (\n            <SLink\n              className=\"ToggleLink\"\n              onClick={() => setToggled((toggled) => !toggled)}\n            >\n              {toggled ? \"remove\" : \"add\"}\n            </SLink>\n          )}\n        </td>\n        <td>\n          {modelField.type ? (\n            <TLink\n              onClick={() => query.addField(path.join(\"__\"), type.defaultSort)}\n            >\n              {modelField.prettyName}\n            </TLink>\n          ) : (\n            modelField.prettyName\n          )}\n        </td>\n      </tr>\n      {toggled && (\n        <tr>\n          <td></td>\n          <td colSpan=\"2\">\n            <AllFields {...{ query, path }} model={modelField.model} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\nfunction AllFields(props) {\n  const { query, model, path } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  const { query, sortedModels, model } = props;\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => query.setModel(e.target.value)}\n      value={model}\n    >\n      {sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    baseUrl,\n    overlay,\n    formatHints,\n  } = props;\n\n  let results;\n  if (query.rowFields().length || query.colFields().length)\n    results = (\n      <Results {...{ query, rows, cols, body, overlay, formatHints }} />\n    );\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <>\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors }} />\n      <p>\n        <span className={length >= query.query.limit ? \"Error\" : \"\"}>\n          Limit:{\" \"}\n          <input\n            className=\"RowLimit\"\n            type=\"number\"\n            value={query.query.limit}\n            onChange={(event) => {\n              query.setLimit(event.target.value);\n            }}\n            min=\"1\"\n          />{\" \"}\n          - Showing {length} results -{\" \"}\n        </span>\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields {...{ query, model }} path={[]} />\n        </div>\n        {results}\n        <div />\n      </div>\n    </>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div className=\"SavedViewActions\">\n        <span className=\"SavedViewTitle\">Saved View</span>\n        <Link to={view.link}>Open</Link>\n      </div>\n      <form>\n        <input\n          type=\"text\"\n          value={view.name}\n          onChange={(event) => {\n            setView({ name: event.target.value });\n          }}\n          className=\"SavedViewName\"\n          placeholder=\"enter a name\"\n        />\n        <table>\n          <tbody>\n            <tr>\n              <th>Model:</th>\n              <td>{view.model}</td>\n            </tr>\n            <tr>\n              <th>Fields:</th>\n              <td>{view.fields.replace(/,/g, \"\\u200b,\")}</td>\n            </tr>\n            <tr>\n              <th>Filters:</th>\n              <td>{view.query.replace(/&/g, \"\\u200b&\")}</td>\n            </tr>\n            <tr>\n              <th>Limit:</th>\n              <td className=\"SavedViewLimit\">\n                <input\n                  className=\"RowLimit\"\n                  type=\"number\"\n                  value={view.limit}\n                  onChange={(event) => {\n                    setView({ limit: event.target.value });\n                  }}\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>Created Time:</th>\n              <td>{view.createdTime}</td>\n            </tr>\n          </tbody>\n        </table>\n        <textarea\n          value={view.description}\n          onChange={(event) => {\n            setView({ description: event.target.value });\n          }}\n          placeholder=\"enter a description\"\n        />\n        {canMakePublic && (\n          <table>\n            <tbody>\n              <tr>\n                <th>Is Public:</th>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={view.public}\n                    onChange={(event) => {\n                      setView({ public: event.target.checked });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Public link:</th>\n                <td>{view.public && <CopyText text={view.publicLink} />}</td>\n              </tr>\n              <tr>\n                <th>Google Sheets:</th>\n                <td>\n                  {view.public && <CopyText text={view.googleSheetsFormula} />}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        )}\n      </form>\n      <div className=\"SavedViewActions\">\n        <Delete apiUrl={url} redirectUrl=\"/\" />\n        <Link to=\"/\">Done</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div>\n      <h1>Saved Views</h1>\n      <div>\n        {savedViews.map((view, index) => (\n          <div key={index}>\n            <p>\n              <Link className=\"Link\" to={view.link}>\n                {view.name} - {view.model}\n              </Link>{\" \"}\n              (<Link to={`/views/${view.pk}.html`}>edit</Link>)\n            </p>\n            <p>{view.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl, defaultRowLimit, allModelFields } = props;\n  return (\n    <div className=\"Index\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <Link\n                to={getRelUrlForQuery(\n                  {\n                    model: model,\n                    fields: [],\n                    filters: allModelFields[model].defaultFilters,\n                    limit: defaultRowLimit,\n                  },\n                  \"html\"\n                )}\n                className=\"Link\"\n              >\n                {model}\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React, { useState, useEffect } from \"react\";\nimport { sortBy } from \"lodash\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nconst BOOTING = \"Booting...\";\nconst LOADING = \"Loading...\";\nconst ERROR = \"Error\";\n\nfunction QueryApp(props) {\n  const { config } = props;\n  const { model, fieldStr } = useParams();\n  const [status, setStatus] = useState(BOOTING);\n  const [query, setQuery] = useState({\n    model: \"\",\n    fields: [],\n    filters: [],\n    limit: config.defaultRowLimit,\n    ...empty,\n  });\n  const queryStr = useLocation().search;\n\n  const handleError = (e) => {\n    if (e.name !== \"AbortError\") {\n      setStatus(ERROR);\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  };\n\n  const fetchResults = (state) => {\n    setStatus(LOADING);\n    const url = getUrlForQuery(config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      setQuery((query) => ({\n        ...query,\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        formatHints: response.formatHints,\n        filterErrors: response.filterErrors,\n      }));\n      setStatus(fetchInProgress ? LOADING : undefined);\n      return response;\n    });\n  };\n\n  useEffect(() => {\n    const popstate = (e) => {\n      setQuery(e.state);\n      fetchResults(e.state).catch(handleError);\n    };\n\n    const url = `${config.baseUrl}query/${model}/${\n      fieldStr || \"\"\n    }.query${queryStr}`;\n\n    doGet(url).then((response) => {\n      const reqState = {\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      setQuery(reqState);\n      setStatus(LOADING);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", popstate);\n      fetchResults(reqState).catch(handleError);\n    });\n\n    return () => {\n      window.removeEventListener(\"popstate\", popstate);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const handleQueryChange = (queryChange, reload = true) => {\n    const newState = { ...query, ...queryChange };\n\n    setQuery(newState);\n\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(config.baseUrl, newState, \"html\")\n    );\n\n    if (!reload) return;\n\n    fetchResults(newState)\n      .then((response) => {\n        const res = { ...response, ...empty };\n        res.filters = sortBy(res.filters, [\"pathStr\"]);\n        const req = { ...request };\n        req.filters = sortBy(req.filters, [\"pathStr\"]);\n        assert.deepStrictEqual(res, req);\n      })\n      .catch(handleError);\n  };\n\n  if (status === BOOTING) return \"\";\n  const queryObj = new Query(config, query, handleQueryChange);\n  return (\n    <QueryPage\n      overlay={status}\n      query={queryObj}\n      sortedModels={config.sortedModels}\n      baseUrl={config.baseUrl}\n      {...query}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <Logo />\n      <div id=\"body\">\n        <Switch>\n          <Route path=\"/query/:model/:fieldStr?.html\">\n            <QueryApp config={props} />\n          </Route>\n          <Route path=\"/views/:pk.html\">\n            <EditSavedView {...{ baseUrl, canMakePublic }} />\n          </Route>\n          <Route path=\"/\">\n            <HomePage {...props} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}