{"version":3,"sources":["Util.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","useData","useState","data","setData","useEffect","updates","prev","Cookies","body","JSON","stringify","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","doPost","to","Delete","state","setState","Overlay","message","Object","prototype","hasOwnProperty","Spacer","spaces","Array","map","_","key","HeadCell","query","field","modelField","getField","path","getType","removeField","moveField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","prettyPath","toggleSort","join","dsc","priority","asc","null","sort","DataCell","React","memo","formattedValue","span","value","formatHint","dangerouslySetInnerHTML","__html","highCutOff","lowCutOff","toExponential","significantFigures","toFixed","decimalPlaces","parts","toString","split","replace","String","colSpan","VTableHeadRow","fields","classNameFirst","i","pathStr","VTableBodyRow","row","formatHints","class","HTableRow","col","Results","cols","rows","overlay","colFields","rowFields","length","resFields","rowIndex","table","empty","filterErrors","getPartsForQuery","model","f","filters","lookup","limit","getUrlForQuery","baseUrl","media","query_str","basePath","origin","Query","config","setQuery","this","slice","allModelFields","types","lookup_type","lookups","choices","defaultValue","findIndex","newFields","filter","priorities","newPriority","Math","max","push","left","index","_getFieldIndex","newIndex","splice","newSort","newFilters","getDefaultLookupValue","Number","FilterValue","onChange","onChangeEvent","weekday","month","step","option","label","Filter","errorMessage","removeFilter","addField","defaultSort","setFilterLookup","sortedLookups","lookupName","val","setFilterValue","Component","Filters","Field","toggled","toggle","bind","prettyName","AllFields","modelFields","getModelFields","sortedFields","fieldName","concat","ModelSelector","sortedModels","history","useHistory","defaultFilters","Logo","QueryPage","results","loading","error","setLimit","min","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","createdTime","description","checked","public","publicLink","googleSheetsFormula","SavedViewList","savedViews","HomePage","QueryApp","popstate","booting","defaultRowLimit","Sentry","fetchResults","handleError","fieldStr","queryStr","reqState","replaceState","addEventListener","removeEventListener","queryChange","newState","request","pushState","sortBy","req","deepStrictEqual","handleQueryChange","Bob","useLocation","search","App","basename","id","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e47f953.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"Link \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"sLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nfunction is(x: any, y: any) {\n    return (\n        (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n    );\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n    if (is(objA, objB)) {\n        return true;\n    }\n\n    if (\n        typeof objA !== \"object\" ||\n        objA === null ||\n        typeof objB !== \"object\" ||\n        objB === null\n    ) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        console.log(\"different keys\", keysA, keysB);\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (\n            !hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])\n        ) {\n            console.log(\n                \"different key\",\n                keysA[i],\n                objA[keysA[i]],\n                objB[keysA[i]]\n            );\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n    shallowEqual,\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay } from \"./Util\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.path);\n  const type = query.getType(modelField);\n  return (\n    <th {...{ className }}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      <SLink onClick={() => query.moveField(field, true)}>chevron_left</SLink>\n      <SLink onClick={() => query.moveField(field, false)}>chevron_right</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.path, field.prettyPath)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {field.prettyPath.join(\" \")}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + field.prettyPath.join(\" \")\n      )}\n    </th>\n  );\n}\n\nconst DataCell = React.memo((props) => {\n  const { modelField, className, span, value, formatHint } = props;\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (value === null) {\n    formattedValue = null;\n  } else if (modelField.type === \"html\" && value) {\n    formattedValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else if (modelField.type === \"number\") {\n    if (\n      value > formatHint.highCutOff ||\n      value < -formatHint.highCutOff ||\n      (value && value < formatHint.lowCutOff && value > -formatHint.lowCutOff)\n    ) {\n      formattedValue = value.toExponential(formatHint.significantFigures - 1);\n    } else {\n      formattedValue = value.toFixed(formatHint.decimalPlaces);\n      var parts = value.toFixed(formatHint.decimalPlaces).toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      formattedValue = parts.join(\".\");\n    }\n  } else {\n    formattedValue = String(value);\n  }\n  return (\n    <td className={modelField.type + \" \" + className || \"\"} colSpan={span || 1}>\n      {formattedValue}\n    </td>\n  );\n});\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const { fields, query, classNameFirst, className, row, formatHints } = props;\n  return fields.map((field, i) => {\n    if (row)\n      return (\n        <DataCell\n          key={field.pathStr}\n          value={row[field.pathStr]}\n          className={`${i ? \"\" : classNameFirst} ${className}`}\n          modelField={query.getField(field.path)}\n          formatHint={formatHints[field.pathStr]}\n        />\n      );\n    else\n      return (\n        <td key={field.pathStr} class={`${i ? \"\" : classNameFirst} Empty`}></td>\n      );\n  });\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span, className, formatHints } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, span, className }}\n          value={col[field.pathStr]}\n          modelField={query.getField(field.path)}\n          formatHint={formatHints[field.pathStr]}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay, formatHints } = props;\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* pivoted data */}\n            {query.colFields().map((field) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={query.rowFields().length - 1} />\n                  <HTableRow\n                    {...{ query, field, formatHints }}\n                    span={query.resFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* column headers */}\n            <tr>\n              <Spacer spaces={1 - query.rowFields().length} />\n              <VTableHeadRow\n                {...{ query }}\n                fields={query.rowFields()}\n                className=\"Freeze\"\n              />\n              {cols.map((_, key) => (\n                <VTableHeadRow\n                  {...{ key, query }}\n                  fields={query.resFields()}\n                  classNameFirst=\"LeftBorder\"\n                  className=\"Freeze\"\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {rows.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                <Spacer spaces={1 - query.rowFields().length} />\n                <VTableBodyRow\n                  {...{ query, row, formatHints }}\n                  fields={query.rowFields()}\n                />\n                {body.map((table, key) => (\n                  <VTableBodyRow\n                    {...{ key, query, formatHints }}\n                    fields={query.resFields()}\n                    row={table[rowIndex]}\n                    classNameFirst=\"LeftBorder\"\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n  formatHints: {},\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.path.join(\"__\") +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.path.join(\"__\")}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  const basePath = `${baseUrl}query/${model}`;\n  return `${window.location.origin}${basePath}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(path) {\n    const field = path.slice(-1);\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[field];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(field, type, lookup) {\n    const lookup_type = type.lookups[lookup].type;\n    if (lookup_type === \"numberchoice\" || lookup_type === \"stringchoice\")\n      return String(field.choices[0][0]);\n    else return String(this.config.types[lookup_type].defaultValue);\n  }\n\n  _getFieldIndex(field, fields) {\n    return fields.findIndex((f) => f.pathStr === field.pathStr);\n  }\n\n  addField(path, prettyPath, sort) {\n    const newFields = this.query.fields.filter(\n      (f) => f.pathStr !== path.join(\"__\")\n    );\n    const priorities = newFields\n      .map((f) => f.priority)\n      .filter((f) => f !== null);\n    const newPriority = priorities.length ? Math.max(...priorities) + 1 : 0;\n    newFields.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      sort: sort,\n      priority: sort ? newPriority : null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    const modelField = this.getField(field.path);\n    this.setQuery(\n      {\n        fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n      },\n      modelField.canPivot\n    );\n  }\n\n  moveField(field, left) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newIndex = index + (left ? -1 : 1);\n    console.log(index, newIndex);\n    if (newIndex >= 0) {\n      let newFields = this.query.fields.slice();\n      newFields.splice(index, 1);\n      newFields.splice(newIndex, 0, field);\n      this.setQuery({ fields: newFields }, false);\n    }\n  }\n\n  toggleSort(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path, prettyPath) {\n    const field = this.getField(path);\n    const type = this.getType(field);\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      path: path,\n      pathStr: path.join(\"__\"),\n      prettyPath: prettyPath,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(field, type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const field = this.getField(newFilters[index].path);\n    const type = this.getType(field);\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(field, type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.path).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter((f) => !this.getField(f.path).canPivot);\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { Query, getPartsForQuery, getUrlForQuery, empty };\n","import React from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery } from \"./Query\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookup, onChange, value, field } = props;\n  const onChangeEvent = (e) => onChange(e.target.value);\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (lookup.type === \"weekday\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {[\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ].map((weekday) => (\n          <option value={weekday}>{weekday}</option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"month\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {[\n          \"January\",\n          \"Febuary\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ].map((month) => (\n          <option value={month}>{month}</option>\n        ))}\n      </select>\n    );\n  else if (\n    field.choices.length &&\n    (lookup.type === \"numberchoice\" || lookup.type === \"stringchoice\")\n  )\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {field.choices.map(([option, label]) => (\n          <option value={option}>{label}</option>\n        ))}\n      </select>\n    );\n  else if (\n    lookup.type === \"number\" ||\n    lookup.type === \"numberchoice\" ||\n    lookup.type === \"year\"\n  )\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  else if (lookup.type === \"jsonfield\") {\n    const parts = value.split(/\\|(.*)/);\n    return (\n      <>\n        <input\n          value={parts[0]}\n          onChange={(e) => onChange(`${e.target.value}|${parts[1]}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n        <input\n          value={parts[1]}\n          onChange={(e) => onChange(`${parts[0]}|${e.target.value}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n      </>\n    );\n  } else\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"text\"\n      />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const {\n      path,\n      prettyPath,\n      index,\n      lookup,\n      query,\n      value,\n      errorMessage,\n    } = this.props;\n    const field = query.getField(path);\n    const type = query.getType(field);\n    return (\n      <tr>\n        <td>\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          <TLink\n            onClick={() => query.addField(path, prettyPath, type.defaultSort)}\n          >\n            {prettyPath.join(\" \")}\n          </TLink>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {type.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(/_/g, \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            {...{ value, field }}\n            onChange={(val) => query.setFilterValue(index, val)}\n            lookup={type.lookups[lookup]}\n          />\n          {errorMessage && <p className=\"Error\">{errorMessage}</p>}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  const { query, filterErrors } = props;\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { toggled: false };\n  }\n\n  toggle() {\n    this.setState((state) => ({\n      toggled: !state.toggled,\n    }));\n  }\n\n  render() {\n    const { query, path, prettyPath, modelField } = this.props;\n    const type = query.getType(modelField);\n    return (\n      <>\n        <tr>\n          <td>\n            {modelField.concrete && type.defaultLookup && (\n              <SLink onClick={() => query.addFilter(path, prettyPath)}>\n                filter_alt\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.model && (\n              <SLink className=\"ToggleLink\" onClick={this.toggle.bind(this)}>\n                {this.state.toggled ? \"remove\" : \"add\"}\n              </SLink>\n            )}\n          </td>\n          <td>\n            {modelField.type ? (\n              <TLink\n                onClick={() =>\n                  query.addField(path, prettyPath, type.defaultSort)\n                }\n              >\n                {modelField.prettyName}\n              </TLink>\n            ) : (\n              modelField.prettyName\n            )}\n          </td>\n        </tr>\n        {this.state.toggled && (\n          <tr>\n            <td></td>\n            <td colSpan=\"2\">\n              <AllFields\n                {...{ query, path, prettyPath }}\n                model={modelField.model}\n              />\n            </td>\n          </tr>\n        )}\n      </>\n    );\n  }\n}\n\nfunction AllFields(props) {\n  const { query, model, path, prettyPath } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n              prettyPath={prettyPath.concat([modelField.prettyName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  const { sortedModels, allModelFields, model } = props;\n  const history = useHistory();\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => {\n        history.push(\n          `/query/${e.target.value}/.html?${\n            allModelFields[e.target.value].defaultFilters\n          }`\n        );\n        window.location.reload(true);\n      }}\n      value={model}\n    >\n      {sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    allModelFields,\n    model,\n    filters,\n    filterErrors,\n    baseUrl,\n    loading,\n    error,\n    formatHints,\n  } = props;\n\n  let overlay;\n  if (loading) overlay = \"Loading...\";\n  else if (error) overlay = \"Error\";\n\n  let results;\n  if (query.rowFields().length || query.colFields().length)\n    results = (\n      <Results {...{ query, rows, cols, body, overlay, formatHints }} />\n    );\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <>\n      <ModelSelector {...{ query, sortedModels, allModelFields, model }} />\n      <Filters {...{ query, filters, filterErrors }} />\n      <p>\n        <span className={length >= query.query.limit ? \"Error\" : \"\"}>\n          Limit:{\" \"}\n          <input\n            className=\"RowLimit\"\n            type=\"number\"\n            value={query.query.limit}\n            onChange={(event) => {\n              query.setLimit(event.target.value);\n            }}\n            min=\"1\"\n          />{\" \"}\n          - Showing {length} results -{\" \"}\n        </span>\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields {...{ query, model }} path={[]} prettyPath={[]} />\n        </div>\n        {results}\n        <div />\n      </div>\n    </>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div className=\"SavedViewActions\">\n        <span className=\"SavedViewTitle\">Saved View</span>\n        <Link to={view.link}>Open</Link>\n      </div>\n      <form>\n        <input\n          type=\"text\"\n          value={view.name}\n          onChange={(event) => {\n            setView({ name: event.target.value });\n          }}\n          className=\"SavedViewName\"\n          placeholder=\"enter a name\"\n        />\n        <table>\n          <tbody>\n            <tr>\n              <th>Model:</th>\n              <td>{view.model}</td>\n            </tr>\n            <tr>\n              <th>Fields:</th>\n              <td>{view.fields.replace(/,/g, \"\\u200b,\")}</td>\n            </tr>\n            <tr>\n              <th>Filters:</th>\n              <td>{view.query.replace(/&/g, \"\\u200b&\")}</td>\n            </tr>\n            <tr>\n              <th>Limit:</th>\n              <td className=\"SavedViewLimit\">\n                <input\n                  className=\"RowLimit\"\n                  type=\"number\"\n                  value={view.limit}\n                  onChange={(event) => {\n                    setView({ limit: event.target.value });\n                  }}\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>Created Time:</th>\n              <td>{view.createdTime}</td>\n            </tr>\n          </tbody>\n        </table>\n        <textarea\n          value={view.description}\n          onChange={(event) => {\n            setView({ description: event.target.value });\n          }}\n          placeholder=\"enter a description\"\n        />\n        {canMakePublic && (\n          <table>\n            <tbody>\n              <tr>\n                <th>Is Public:</th>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={view.public}\n                    onChange={(event) => {\n                      setView({ public: event.target.checked });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Public link:</th>\n                <td>{view.public && <CopyText text={view.publicLink} />}</td>\n              </tr>\n              <tr>\n                <th>Google Sheets:</th>\n                <td>\n                  {view.public && <CopyText text={view.googleSheetsFormula} />}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        )}\n      </form>\n      <div className=\"SavedViewActions\">\n        <Delete apiUrl={url} redirectUrl=\"/\" />\n        <Link to=\"/\">Done</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div>\n      <h1>Saved Views</h1>\n      <div>\n        {savedViews.map((view, index) => (\n          <div key={index}>\n            <p>\n              <Link className=\"Link\" to={view.link}>\n                {view.name} - {view.model}\n              </Link>{\" \"}\n              (<Link to={`/views/${view.pk}.html`}>edit</Link>)\n            </p>\n            <p>{view.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, allModelFields, baseUrl } = props;\n  return (\n    <div className=\"Index\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <Link\n                to={`/query/${model}/.html?${allModelFields[model].defaultFilters}`}\n                className=\"Link\"\n              >\n                {model}\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React from \"react\";\nimport { sortBy } from \"lodash\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nclass QueryApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      booting: true,\n      loading: false,\n      error: undefined,\n      model: \"\",\n      fields: [],\n      filters: [],\n      limit: props.config.defaultRowLimit,\n      ...empty,\n    };\n  }\n\n  handleError(e) {\n    if (e.name !== \"AbortError\") {\n      this.setState({ error: true, loading: false });\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  }\n\n  fetchResults(state) {\n    this.setState({ loading: true });\n    const url = getUrlForQuery(this.props.config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      this.setState({\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        formatHints: response.formatHints,\n        filterErrors: response.filterErrors,\n        loading: fetchInProgress,\n        error: undefined,\n      });\n      return response;\n    });\n  }\n\n  popstate(e) {\n    this.setState(e.state);\n    this.fetchResults(e.state).catch(this.handleError.bind(this));\n  }\n  popstate = this.popstate.bind(this);\n\n  componentDidMount() {\n    const { model, fieldStr, queryStr, config } = this.props;\n    const url = `${config.baseUrl}query/${model}/${fieldStr}.query${queryStr}`;\n    doGet(url).then((response) => {\n      const reqState = {\n        booting: false,\n        loading: true,\n        error: undefined,\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      this.setState(reqState);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(this.props.config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", this.popstate);\n      this.fetchResults(this.state).catch(this.handleError.bind(this));\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"popstate\", this.popstate);\n  }\n\n  handleQueryChange(queryChange, reload = true) {\n    this.setState(queryChange);\n    if (!reload) return;\n\n    const newState = { ...this.state, ...queryChange };\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, newState, \"html\")\n    );\n    this.fetchResults(newState)\n      .then((response) => {\n        const res = { ...response, ...empty };\n        res.filters = sortBy(res.filters, [\"pathStr\"]);\n        const req = { ...request };\n        req.filters = sortBy(req.filters, [\"pathStr\"]);\n        assert.deepStrictEqual(res, req);\n      })\n      .catch(this.handleError.bind(this));\n  }\n\n  render() {\n    if (this.state.booting) return \"\";\n    const query = new Query(\n      this.props.config,\n      this.state,\n      this.handleQueryChange.bind(this)\n    );\n    return (\n      <QueryPage\n        query={query}\n        sortedModels={this.props.config.sortedModels}\n        allModelFields={this.props.config.allModelFields}\n        baseUrl={this.props.config.baseUrl}\n        {...this.state}\n      />\n    );\n  }\n}\n\nfunction Bob(props) {\n  const { model, fieldStr } = useParams();\n  return (\n    <QueryApp\n      {...props}\n      model={model}\n      fieldStr={fieldStr || \"\"}\n      queryStr={useLocation().search}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, sortedModels, allModelFields, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <Logo />\n      <div id=\"body\">\n        <Switch>\n          <Route path=\"/query/:model/:fieldStr?.html\">\n            <Bob config={props} {...{ sortedModels }} />\n          </Route>\n          <Route path=\"/views/:pk.html\">\n            <EditSavedView {...{ baseUrl, canMakePublic }} />\n          </Route>\n          <Route path=\"/\">\n            <HomePage {...{ sortedModels, allModelFields, baseUrl }} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}