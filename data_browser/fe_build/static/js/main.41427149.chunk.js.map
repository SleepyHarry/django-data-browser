{"version":3,"sources":["Util.js","ContextMenu.js","Tooltip.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","useData","useState","data","setData","useEffect","updates","prev","Cookies","body","JSON","stringify","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","doPost","to","Delete","state","setState","Overlay","message","Object","prototype","hasOwnProperty","ShowContextMenu","React","createContext","ContextMenu","node","handleClick","contains","addEventListener","removeEventListener","divStyle","left","x","top","y","Provider","value","entries","filter","length","clientX","clientY","preventDefault","style","map","entry","key","fn","ShowTooltip","HideTooltip","Tooltip","messages","getBoundingClientRect","right","m","Spacer","spaces","Array","_","HeadCell","query","field","modelField","getField","pathStr","getType","showContextMenu","useContext","onContextMenu","actions","action","prettyName","form","createElement","csrfmiddlewaretoken","hiddenField","appendChild","submit","syncPost","removeField","moveField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","toggleSort","prettyPathStr","dsc","priority","asc","null","sort","DataCell","formattedValue","displayValue","span","formatHint","fullRow","highCutOff","lowCutOff","toExponential","significantFigures","toLocaleString","String","dangerouslySetInnerHTML","__html","colSpan","navigator","clipboard","writeText","filterForValue","addExactFilter","drillDown","VTableHeadRow","fields","classNameFirst","i","VTableBodyRow","row","formatHints","HTableRow","col","Results","cols","rows","overlay","colFields","rowFields","resFields","rowIndex","table","empty","filterErrors","parsedFilterValues","getPartsForQuery","model","f","join","filters","lookup","encodeURIComponent","limit","getRelUrlForQuery","media","query_str","getUrlForQuery","baseUrl","relUrl","origin","Query","config","setQuery","this","path","split","slice","allModelFields","types","lookup_type","lookups","endsWith","choices","defaultValue","findIndex","newFields","priorities","newPriority","Math","max","push","index","_getFieldIndex","newIndex","splice","concat","newSort","newFilters","getDefaultLookupValue","values","Number","defaultFilters","defaultRowLimit","prettyPath","part","FilterValue","lookupType","onChange","onChangeEvent","showTooltip","hideTooltip","helpText","date","datetime","option","step","parts","onMouseEnter","onMouseLeave","Filter","errorMessage","parsed","removeFilter","addField","defaultSort","setFilterLookup","sortedLookups","lookupName","val","setFilterValue","Filters","Field","toggled","setToggled","AllFields","modelFields","getModelFields","sortedFields","fieldName","ModelSelector","sortedModels","setModel","Logo","QueryPage","results","setLimit","min","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","replace","createdTime","description","checked","public","publicLink","googleSheetsFormula","SavedViewList","savedViews","HomePage","QueryApp","fieldStr","setStatus","queryStr","useLocation","search","handleError","Sentry","fetchResults","popstate","reqState","history","replaceState","queryObj","queryChange","newState","request","pushState","req","deepStrictEqual","App","basename","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.41427149.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"TLink \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"SLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction syncPost(url, data) {\n    const form = document.createElement(\"form\");\n    form.method = \"post\";\n    form.action = url;\n    data.csrfmiddlewaretoken = Cookies.get(\"csrftoken\");\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n            const hiddenField = document.createElement(\"input\");\n            hiddenField.type = \"hidden\";\n            hiddenField.name = key;\n            hiddenField.value = data[key];\n\n            form.appendChild(hiddenField);\n        }\n    }\n\n    document.body.appendChild(form);\n    form.submit();\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nfunction is(x: any, y: any) {\n    return (\n        (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n    );\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n    if (is(objA, objB)) {\n        return true;\n    }\n\n    if (\n        typeof objA !== \"object\" ||\n        objA === null ||\n        typeof objB !== \"object\" ||\n        objB === null\n    ) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        console.log(\"different keys\", keysA, keysB);\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (\n            !hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])\n        ) {\n            console.log(\n                \"different key\",\n                keysA[i],\n                objA[keysA[i]],\n                objB[keysA[i]]\n            );\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n    shallowEqual,\n    syncPost,\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { TLink } from \"./Util\";\n\nconst ShowContextMenu = React.createContext();\n\nfunction ContextMenu(props) {\n    const node = useRef();\n    const [state, setState] = useState();\n\n    function handleClick(e) {\n        if (node.current && node.current.contains(e.target)) return;\n        setState(null);\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClick);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const divStyle = state\n        ? {\n              left: state.x,\n              top: state.y,\n          }\n        : {};\n\n    function showContextMenu(event, entries) {\n        entries = entries.filter((x) => x);\n        if (entries.length) {\n            setState({\n                entries: entries,\n                x: event.clientX,\n                y: event.clientY,\n            });\n            event.preventDefault();\n        }\n    }\n\n    return (\n        <ShowContextMenu.Provider value={showContextMenu}>\n            {props.children}\n            {state && (\n                <div ref={node} className=\"ContextMenu\" style={divStyle}>\n                    {state.entries.map((entry) => (\n                        <p key={entry.name}>\n                            <TLink\n                                onClick={() => {\n                                    entry.fn();\n                                    setState();\n                                }}\n                            >\n                                {entry.name}\n                            </TLink>\n                        </p>\n                    ))}\n                </div>\n            )}\n        </ShowContextMenu.Provider>\n    );\n}\n\nexport { ContextMenu, ShowContextMenu };\n","import React, { useState, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst ShowTooltip = React.createContext();\r\nconst HideTooltip = React.createContext();\r\n\r\nfunction Tooltip(props) {\r\n    const node = useRef();\r\n    const [state, setState] = useState();\r\n\r\n    const divStyle = state\r\n        ? {\r\n              left: state.x,\r\n              top: state.y,\r\n          }\r\n        : {};\r\n\r\n    function showTooltip(event, messages) {\r\n        if (messages)\r\n            setState({\r\n                messages: messages,\r\n                x: event.target.getBoundingClientRect().right - 10,\r\n                y: event.target.getBoundingClientRect().top - 10,\r\n            });\r\n        event.preventDefault();\r\n    }\r\n\r\n    function hideTooltip(event) {\r\n        setState(null);\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <ShowTooltip.Provider value={showTooltip}>\r\n            <HideTooltip.Provider value={hideTooltip}>\r\n                {props.children}\r\n                {state && (\r\n                    <div ref={node} className=\"Tooltip\" style={divStyle}>\r\n                        {state.messages.map((m) => (\r\n                            <p>{m}</p>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </HideTooltip.Provider>\r\n        </ShowTooltip.Provider>\r\n    );\r\n}\r\n\r\nexport { Tooltip, ShowTooltip, HideTooltip };\r\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay, syncPost } from \"./Util\";\nimport { ShowContextMenu } from \"./ContextMenu\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.pathStr);\n  const type = query.getType(modelField);\n\n  const showContextMenu = useContext(ShowContextMenu);\n\n  function onContextMenu(e) {\n    showContextMenu(\n      e,\n      modelField.actions.map((action) => {\n        return {\n          name: action.prettyName,\n          fn: () => syncPost(\"\", { action: action.name, field: field.pathStr }),\n        };\n      })\n    );\n  }\n\n  return (\n    <th className={`HeadCell ${className}`} onContextMenu={onContextMenu}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      <SLink onClick={() => query.moveField(field, true)}>chevron_left</SLink>\n      <SLink onClick={() => query.moveField(field, false)}>chevron_right</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.pathStr)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {query.prettyPathStr(field.pathStr)}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + query.prettyPathStr(field.pathStr)\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const {\n    modelField,\n    className,\n    span,\n    value,\n    formatHint,\n    query,\n    pathStr,\n    fullRow,\n  } = props;\n\n  // The value we will use in copy\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (value === null) {\n    formattedValue = \"null\";\n  } else if (modelField.type === \"html\") {\n    formattedValue = value;\n  } else if (modelField.type === \"number\") {\n    if (\n      value > formatHint.highCutOff ||\n      value < -formatHint.highCutOff ||\n      (value && value < formatHint.lowCutOff && value > -formatHint.lowCutOff)\n    ) {\n      formattedValue = value.toExponential(formatHint.significantFigures - 1);\n    } else {\n      formattedValue = value.toLocaleString(undefined, formatHint);\n    }\n  } else {\n    formattedValue = String(value);\n  }\n\n  // Any extra gubbins we need to render it\n  let displayValue;\n  if (value === null) {\n    displayValue = <span className=\"Null\">{formattedValue}</span>;\n  } else if (formattedValue === \"\") {\n    displayValue = \"\\xa0\"; // nbsp\n  } else if (modelField.type === \"html\") {\n    displayValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else {\n    displayValue = formattedValue;\n  }\n\n  const showContextMenu = useContext(ShowContextMenu);\n  function onContextMenu(e) {\n    showContextMenu(e, [\n      navigator.clipboard && {\n        name: \"Copy\",\n        fn: () => navigator.clipboard.writeText(formattedValue),\n      },\n      modelField.concrete &&\n        query.filterForValue(pathStr, value) && {\n          name: \"Filter\",\n          fn: () => query.addExactFilter(pathStr, value),\n        },\n      fullRow && {\n        name: \"Drill down\",\n        fn: () => query.drillDown(fullRow),\n      },\n    ]);\n  }\n\n  return (\n    <td\n      className={`DataCell ${modelField.type + \" \" + className || \"\"}`}\n      colSpan={span || 1}\n      onContextMenu={onContextMenu}\n    >\n      {displayValue}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const {\n    fields,\n    query,\n    classNameFirst,\n    className,\n    row,\n    formatHints,\n    fullRow,\n  } = props;\n  return fields.map((field, i) => {\n    if (row)\n      return (\n        <DataCell\n          {...{ query }}\n          pathStr={field.pathStr}\n          key={field.pathStr}\n          value={row[field.pathStr]}\n          className={`${i ? \"\" : classNameFirst} ${className}`}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={fullRow}\n        />\n      );\n    else\n      return (\n        <td\n          key={field.pathStr}\n          className={`${i ? \"\" : classNameFirst} Empty`}\n        ></td>\n      );\n  });\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span, className, formatHints } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, span, className, query }}\n          value={col[field.pathStr]}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={col}\n          pathStr={field.pathStr}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay, formatHints } = props;\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* pivoted data */}\n            {query.colFields().map((field) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={query.rowFields().length - 1} />\n                  <HTableRow\n                    {...{ query, field, formatHints }}\n                    span={query.resFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* column headers */}\n            <tr>\n              <Spacer spaces={1 - query.rowFields().length} />\n              <VTableHeadRow\n                {...{ query }}\n                fields={query.rowFields()}\n                className=\"Freeze\"\n              />\n              {cols.map((_, key) => (\n                <VTableHeadRow\n                  {...{ key, query }}\n                  fields={query.resFields()}\n                  classNameFirst=\"LeftBorder\"\n                  className=\"Freeze\"\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {rows.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                <Spacer spaces={1 - query.rowFields().length} />\n                <VTableBodyRow\n                  {...{ query, row, formatHints }}\n                  fields={query.rowFields()}\n                  fullRow={row}\n                />\n                {body.map((table, key) => (\n                  <VTableBodyRow\n                    {...{ key, query, formatHints }}\n                    fields={query.resFields()}\n                    row={table[rowIndex]}\n                    fullRow={{ ...row, ...cols[key] }}\n                    classNameFirst=\"LeftBorder\"\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n  parsedFilterValues: [],\n  formatHints: {},\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.pathStr +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.pathStr}__${f.lookup}=${encodeURIComponent(f.value)}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getRelUrlForQuery(query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  return `query/${model}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const relUrl = getRelUrlForQuery(query, media);\n  return `${window.location.origin}${baseUrl}${relUrl}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(pathStr) {\n    const path = pathStr.split(\"__\");\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      const modelField = this.config.allModelFields[model].fields[field];\n      if (modelField === undefined) return null;\n      model = modelField.model;\n    }\n    return this.config.allModelFields[model].fields[path.slice(-1)];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(field, type, lookup) {\n    const lookup_type = type.lookups[lookup].type;\n    if (lookup_type.endsWith(\"choice\")) return String(field.choices[0]);\n    else return String(this.config.types[lookup_type].defaultValue);\n  }\n\n  _getFieldIndex(field, fields) {\n    return fields.findIndex((f) => f.pathStr === field.pathStr);\n  }\n\n  addField(pathStr, sort) {\n    const newFields = this.query.fields.filter((f) => f.pathStr !== pathStr);\n    const priorities = newFields\n      .map((f) => f.priority)\n      .filter((f) => f !== null);\n    const newPriority = priorities.length ? Math.max(...priorities) + 1 : 0;\n    newFields.push({\n      pathStr: pathStr,\n      sort: sort,\n      priority: sort ? newPriority : null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    const modelField = this.getField(field.pathStr);\n    this.setQuery(\n      {\n        fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n      },\n      modelField.canPivot\n    );\n  }\n\n  moveField(field, left) {\n    const modelField = this.getField(field.pathStr);\n\n    // get the fields in their sections\n    const colFields = this.colFields().slice();\n    const rowFields = this.rowFields().slice();\n    const resFields = this.resFields().slice();\n\n    // pick the section our field is in\n    let fields = null;\n    if (field.pivoted) fields = colFields;\n    else if (modelField.canPivot || !colFields.length) fields = rowFields;\n    else fields = resFields;\n\n    // work out it's old and new index\n    const index = this._getFieldIndex(field, fields);\n    const newIndex = index + (left ? -1 : 1);\n\n    // if anything changed then update our section and then\n    // rebuild all the fields from the sections\n    if (0 <= newIndex && newIndex < fields.length) {\n      fields.splice(index, 1);\n      fields.splice(newIndex, 0, field);\n      this.setQuery(\n        { fields: [].concat(rowFields, colFields, resFields) },\n        false\n      );\n    }\n  }\n\n  toggleSort(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(pathStr) {\n    const field = this.getField(pathStr);\n    const type = this.getType(field);\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      pathStr: pathStr,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(field, type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  filterForValue(pathStr, value) {\n    const lookups = this.getType(this.getField(pathStr)).lookups;\n    if (value === null && lookups.hasOwnProperty(\"is_null\"))\n      return {\n        pathStr: pathStr,\n        lookup: \"is_null\",\n        value: \"IsNull\",\n      };\n    else if (lookups.hasOwnProperty(\"equals\"))\n      return {\n        pathStr: pathStr,\n        lookup: \"equals\",\n        value: String(value),\n      };\n    else return null;\n  }\n\n  addExactFilter(pathStr, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters.push(this.filterForValue(pathStr, value));\n    this.setQuery({ filters: newFilters });\n  }\n\n  drillDown(values) {\n    const newFilters = this.query.filters.concat(\n      this.query.fields\n        .filter((field) => this.getField(field.pathStr).canPivot)\n        .filter((field) => values.hasOwnProperty(field.pathStr))\n        .filter((field) => this.getField(field.pathStr).concrete)\n        .map((field) =>\n          this.filterForValue(field.pathStr, values[field.pathStr])\n        )\n        .filter((f) => f !== null)\n    );\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const field = this.getField(newFilters[index].pathStr);\n    const type = this.getType(field);\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(field, type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: this.config.allModelFields[model].defaultFilters,\n      limit: this.config.defaultRowLimit,\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.pathStr).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !this.getField(f.pathStr).canPivot\n      );\n    } else {\n      return [];\n    }\n  }\n\n  prettyPathStr(pathStr) {\n    const path = pathStr.split(\"__\");\n    const prettyPath = [];\n    let model = this.query.model;\n    let field = null;\n    for (const part of path) {\n      field = this.config.allModelFields[model].fields[part];\n      model = field.model;\n      prettyPath.push(field.prettyName);\n    }\n    return prettyPath.join(\" \\u21d2 \");\n  }\n}\n\nexport { Query, getPartsForQuery, getRelUrlForQuery, getUrlForQuery, empty };\n","import React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery, getRelUrlForQuery } from \"./Query\";\nimport { ShowTooltip, HideTooltip } from \"./Tooltip\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookupType, onChange, value, field } = props;\n  const onChangeEvent = (e) => onChange(e.target.value);\n  const showTooltip = useContext(ShowTooltip);\n  const hideTooltip = useContext(HideTooltip);\n  const helpText = {\n    date: [\n      \"Date filter values can be a literal value e.g. '2020-12-21' or 'today' or a series of clauses applied in order from today.\",\n      \"e.g. 'day=1 month+1 tuesday+2' which means move to the 1st of this month, then move forward a month, then move forward to the second Tuesday.\",\n      \"You can use 'year', 'month' or 'day' with '+', '-', or '=' to add remove or replace the given quantity.\",\n      \"Or you can use a weekday name with '+' or '-' to get the n-th next or previous (including today) instance of that day.\",\n      \"Bear in mind that 'day=1 month+1' may produce a different result from 'month+1 day=1', for example on Jan 31st.\",\n    ],\n    datetime: [\n      \"Datetime filter values can be a literal value e.g. '2020-12-21 14:56' or 'now' or a series of clauses applied in order from now.\",\n      \"e.g. 'day=1 month+1 tuesday+2' which means move to the 1st of this month, then move forward a month, then move forward to the second Tuesday.\",\n      \"You can use 'year', 'month', 'day', 'hour', 'minute' or 'second' with '+', '-', or '=' to add remove or replace the given quantity.\",\n      \"Or you can use a weekday name with '+' or '-' to get the n-th next or previous (including today) instance of that day.\",\n      \"Bear in mind that 'day=1 month+1' may produce a different result from 'month+1 day=1', for example on Jan 31st.\",\n    ],\n  };\n\n  if (props.lookupType === \"boolean\") {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  } else if (props.lookupType === \"isnull\") {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={\"IsNull\"}>IsNull</option>\n        <option value={\"NotNull\"}>NotNull</option>\n      </select>\n    );\n  } else if (lookupType.endsWith(\"choice\")) {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {field.choices.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (lookupType === \"number\") {\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  } else if (lookupType === \"jsonfield\") {\n    const parts = value.split(/\\|(.*)/);\n    return (\n      <>\n        <input\n          value={parts[0]}\n          onChange={(e) => onChange(`${e.target.value}|${parts[1]}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n        <input\n          value={parts[1]}\n          onChange={(e) => onChange(`${parts[0]}|${e.target.value}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n      </>\n    );\n  } else {\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"text\"\n        onMouseEnter={(e) => showTooltip(e, helpText[lookupType])}\n        onMouseLeave={(e) => hideTooltip(e)}\n      />\n    );\n  }\n}\n\nfunction Filter(props) {\n  const { pathStr, index, lookup, query, value, errorMessage, parsed } = props;\n  const field = query.getField(pathStr);\n  var type = null;\n  var lookupType = null;\n  if (field !== null) {\n    type = query.getType(field);\n    if (type.lookups.hasOwnProperty(lookup))\n      lookupType = type.lookups[lookup].type;\n  }\n\n  if (lookupType === null)\n    return (\n      <tr className=\"Filter\">\n        <td>\n          {\" \"}\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          {pathStr}\n        </td>\n        <td>{lookup}</td>\n        <td>\n          {value}\n          <p className=\"Error\">{errorMessage}</p>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr className=\"Filter\">\n      <td>\n        <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n        <TLink onClick={() => query.addField(pathStr, field.defaultSort)}>\n          {query.prettyPathStr(pathStr)}\n        </TLink>{\" \"}\n      </td>\n      <td>\n        <select\n          className=\"Lookup\"\n          value={lookup}\n          onChange={(e) => query.setFilterLookup(index, e.target.value)}\n        >\n          {type.sortedLookups.map((lookupName) => (\n            <option key={lookupName} value={lookupName}>\n              {type.lookups[lookupName].prettyName}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td>=</td>\n      <td>\n        <FilterValue\n          {...{ value, field, lookupType }}\n          onChange={(val) => query.setFilterValue(index, val)}\n        />\n        {errorMessage && <p className=\"Error\">{errorMessage}</p>}\n        {parsed !== null &&\n          (lookupType === \"date\" || lookupType === \"datetime\") && (\n            <p className=\"Success\">{parsed}</p>\n          )}\n      </td>\n    </tr>\n  );\n}\n\nfunction Filters(props) {\n  const { query, filterErrors, parsedFilterValues } = props;\n  return (\n    <form className=\"Filters\">\n      <table>\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n              parsed={parsedFilterValues[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nfunction Field(props) {\n  const { query, path, modelField } = props;\n  const type = query.getType(modelField);\n  const [toggled, setToggled] = useState(false);\n  return (\n    <>\n      <tr className=\"Field\">\n        <td>\n          {modelField.concrete && type.defaultLookup && (\n            <SLink onClick={() => query.addFilter(path.join(\"__\"))}>\n              filter_alt\n            </SLink>\n          )}\n        </td>\n        <td>\n          {modelField.model && (\n            <SLink\n              className=\"ToggleLink\"\n              onClick={() => setToggled((toggled) => !toggled)}\n            >\n              {toggled ? \"remove\" : \"add\"}\n            </SLink>\n          )}\n        </td>\n        <td>\n          {modelField.type ? (\n            <TLink\n              onClick={() =>\n                query.addField(path.join(\"__\"), modelField.defaultSort)\n              }\n            >\n              {modelField.prettyName}\n            </TLink>\n          ) : (\n            modelField.prettyName\n          )}\n        </td>\n      </tr>\n      {toggled && (\n        <tr>\n          <td></td>\n          <td colSpan=\"2\">\n            <AllFields {...{ query, path }} model={modelField.model} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\nfunction AllFields(props) {\n  const { query, model, path } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table className=\"AllFields\">\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  const { query, sortedModels, model } = props;\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => query.setModel(e.target.value)}\n      value={model}\n    >\n      {sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    parsedFilterValues,\n    baseUrl,\n    overlay,\n    formatHints,\n  } = props;\n\n  let results;\n  if (query.rowFields().length || query.colFields().length)\n    results = (\n      <Results {...{ query, rows, cols, body, overlay, formatHints }} />\n    );\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <div className=\"QueryPage\">\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors, parsedFilterValues }} />\n      <p>\n        <span className={length >= query.query.limit ? \"Error\" : \"\"}>\n          Limit:{\" \"}\n          <input\n            className=\"RowLimit\"\n            type=\"number\"\n            value={query.query.limit}\n            onChange={(event) => {\n              query.setLimit(event.target.value);\n            }}\n            min=\"1\"\n          />{\" \"}\n          - Showing {length} results -{\" \"}\n        </span>\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"sql\")}>View SQL Query</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <div className=\"Scroller\">\n            <AllFields {...{ query, model }} path={[]} />\n          </div>\n        </div>\n        {results}\n        <div />\n      </div>\n    </div>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div>\n        <div className=\"SavedViewActions\">\n          <span className=\"SavedViewTitle\">Saved View</span>\n          <Link to={view.link}>Open</Link>\n        </div>\n        <form>\n          <input\n            type=\"text\"\n            value={view.name}\n            onChange={(event) => {\n              setView({ name: event.target.value });\n            }}\n            className=\"SavedViewName\"\n            placeholder=\"enter a name\"\n          />\n          <table>\n            <tbody>\n              <tr>\n                <th>Model:</th>\n                <td>{view.model}</td>\n              </tr>\n              <tr>\n                <th>Fields:</th>\n                <td>{view.fields.replace(/,/g, \"\\u200b,\")}</td>\n              </tr>\n              <tr>\n                <th>Filters:</th>\n                <td>{view.query.replace(/&/g, \"\\u200b&\")}</td>\n              </tr>\n              <tr>\n                <th>Limit:</th>\n                <td className=\"SavedViewLimit\">\n                  <input\n                    className=\"RowLimit\"\n                    type=\"number\"\n                    value={view.limit}\n                    onChange={(event) => {\n                      setView({ limit: event.target.value });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Created Time:</th>\n                <td>{view.createdTime}</td>\n              </tr>\n            </tbody>\n          </table>\n          <textarea\n            value={view.description}\n            onChange={(event) => {\n              setView({ description: event.target.value });\n            }}\n            placeholder=\"enter a description\"\n          />\n          {canMakePublic && (\n            <table>\n              <tbody>\n                <tr>\n                  <th>Is Public:</th>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={view.public}\n                      onChange={(event) => {\n                        setView({ public: event.target.checked });\n                      }}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <th>Public link:</th>\n                  <td>{view.public && <CopyText text={view.publicLink} />}</td>\n                </tr>\n                <tr>\n                  <th>Google Sheets:</th>\n                  <td>\n                    {view.public && (\n                      <CopyText text={view.googleSheetsFormula} />\n                    )}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          )}\n        </form>\n        <div className=\"SavedViewActions\">\n          <Delete apiUrl={url} redirectUrl=\"/\" />\n          <Link to=\"/\">Done</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div className=\"SavedViewList\">\n      <h1>Saved Views</h1>\n      {savedViews.map((view, index) => (\n        <div key={index}>\n          <h2>\n            <Link className=\"Link\" to={view.link}>\n              {view.name || \"<unnamed>\"}\n            </Link>\n          </h2>\n          <p>\n            on {view.model} - <Link to={`/views/${view.pk}.html`}>edit</Link>\n          </p>\n          <p>{view.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl, defaultRowLimit, allModelFields } = props;\n  return (\n    <div className=\"HomePage\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <h2>\n                <Link\n                  to={getRelUrlForQuery(\n                    {\n                      model: model,\n                      fields: [],\n                      filters: allModelFields[model].defaultFilters,\n                      limit: defaultRowLimit,\n                    },\n                    \"html\"\n                  )}\n                  className=\"Link\"\n                >\n                  {model}\n                </Link>\n              </h2>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { Tooltip } from \"./Tooltip\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nconst BOOTING = \"Booting...\";\nconst LOADING = \"Loading...\";\nconst ERROR = \"Error\";\n\nfunction QueryApp(props) {\n  const { config } = props;\n  const { model, fieldStr } = useParams();\n  const [status, setStatus] = useState(BOOTING);\n  const [query, setQuery] = useState({\n    model: \"\",\n    fields: [],\n    filters: [],\n    limit: config.defaultRowLimit,\n    ...empty,\n  });\n  const queryStr = useLocation().search;\n\n  const handleError = (e) => {\n    if (e.name !== \"AbortError\") {\n      setStatus(ERROR);\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  };\n\n  const fetchResults = (state) => {\n    setStatus(LOADING);\n    const url = getUrlForQuery(config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      setQuery((query) => ({\n        ...query,\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        formatHints: response.formatHints,\n        filterErrors: response.filterErrors,\n        parsedFilterValues: response.parsedFilterValues,\n      }));\n      setStatus(fetchInProgress ? LOADING : undefined);\n      return response;\n    });\n  };\n\n  useEffect(() => {\n    const popstate = (e) => {\n      setQuery(e.state);\n      fetchResults(e.state).catch(handleError);\n    };\n\n    const url = `${config.baseUrl}query/${model}/${\n      fieldStr || \"\"\n    }.query${queryStr}`;\n\n    doGet(url).then((response) => {\n      const reqState = {\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      setQuery(reqState);\n      setStatus(LOADING);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", popstate);\n      fetchResults(reqState).catch(handleError);\n    });\n\n    return () => {\n      window.removeEventListener(\"popstate\", popstate);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const handleQueryChange = (queryChange, reload = true) => {\n    const newState = { ...query, ...queryChange };\n\n    setQuery(newState);\n\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(config.baseUrl, newState, \"html\")\n    );\n\n    if (!reload) return;\n\n    fetchResults(newState)\n      .then((response) => {\n        const res = { ...response, ...empty };\n        const req = { ...request };\n        assert.deepStrictEqual(res, req);\n      })\n      .catch(handleError);\n  };\n\n  if (status === BOOTING) return \"\";\n  const queryObj = new Query(config, query, handleQueryChange);\n  return (\n    <QueryPage\n      overlay={status}\n      query={queryObj}\n      sortedModels={config.sortedModels}\n      baseUrl={config.baseUrl}\n      {...query}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <ContextMenu>\n        <Tooltip>\n          <Logo />\n          <Switch>\n            <Route path=\"/query/:model/:fieldStr?.html\">\n              <QueryApp config={props} />\n            </Route>\n            <Route path=\"/views/:pk.html\">\n              <EditSavedView {...{ baseUrl, canMakePublic }} />\n            </Route>\n            <Route path=\"/\">\n              <HomePage {...props} />\n            </Route>\n          </Switch>\n        </Tooltip>\n      </ContextMenu>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}