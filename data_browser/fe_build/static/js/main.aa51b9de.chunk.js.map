{"version":3,"sources":["WindowDimensions.js","Tooltip.js","Util.js","ContextMenu.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","ShowTooltip","React","createContext","HideTooltip","Tooltip","props","node","useRef","useState","state","setState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","divStyle","left","x","top","y","Provider","value","event","messages","target","getBoundingClientRect","right","bottom","preventDefault","children","ref","className","style","map","m","assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","text","TLink","onClick","range","createRange","selectNodeContents","current","getSelection","removeAllRanges","addRange","execCommand","blur","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","doPost","data","Cookies","body","JSON","stringify","useData","setData","updates","prev","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","to","Delete","Overlay","message","Object","prototype","hasOwnProperty","HasActionIcon","modelField","showTooltip","useContext","hideTooltip","actions","length","onMouseEnter","onMouseLeave","ShowContextMenu","ContextMenu","handleClick","contains","entries","filter","toString","clientX","clientY","entry","key","fn","Spacer","spaces","Array","_","HeadCell","query","field","leftArrow","rightArrow","verticalArrows","getField","pathStr","getType","fieldClass","getFieldClass","showContextMenu","onContextMenu","action","prettyName","form","createElement","push","hiddenField","appendChild","submit","syncPost","removeField","moveField","canPivot","togglePivot","concrete","defaultLookup","addFilter","toggleSort","prettyPathStr","dsc","priority","asc","null","sort","DataCell","formattedValue","displayValue","span","formatHint","fullRow","href","highCutOff","lowCutOff","toExponential","significantFigures","toLocaleString","String","dangerouslySetInnerHTML","__html","colSpan","navigator","clipboard","writeText","filterForValue","addExactFilter","addExactExclude","drillDown","VTableHeadRow","fields","classNameFirst","i","VTableBodyRow","row","formatHints","HTableRow","col","Results","cols","rows","overlay","colFields","topTitleSpace","rowFields","sideTitleSpace","hasBody","bodyFields","rowIndex","table","empty","filterErrors","parsedFilterValues","getPartsForQuery","model","f","pivoted","join","filters","lookup","encodeURIComponent","limit","getRelUrlForQuery","media","query_str","getUrlForQuery","baseUrl","relUrl","origin","Query","config","setQuery","this","path","split","slice","allModelFields","types","lookup_type","lookups","endsWith","choices","defaultValue","findIndex","newFields","priorities","newPriority","Math","max","index","_getFieldIndex","newIndex","splice","concat","newSort","newFilters","getDefaultLookupValue","negate","values","fieldValues","Set","size","Number","defaultFilters","defaultRowLimit","prettyPath","part","toMany","FilterValue","lookupType","onChange","onChangeEvent","helpText","date","datetime","option","step","parts","Filter","errorMessage","parsed","removeFilter","addField","defaultSort","setFilterLookup","sortedLookups","lookupName","val","setFilterValue","Filters","Field","toggled","setToggled","AllFields","modelFields","getModelFields","sortedFields","fieldName","ModelSelector","sortedModels","setModel","Logo","QueryPage","results","setLimit","min","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","replace","createdTime","description","checked","public","publicLink","googleSheetsFormula","SavedViewList","savedViews","HomePage","QueryApp","fieldStr","setStatus","queryStr","useLocation","search","handleError","Sentry","fetchResults","popstate","reqState","history","replaceState","queryObj","queryChange","newState","request","pushState","req","deepStrictEqual","App","basename","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa51b9de.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport useWindowDimensions from \"./WindowDimensions\";\nconst ShowTooltip = React.createContext();\nconst HideTooltip = React.createContext();\n\nfunction Tooltip(props) {\n    const node = useRef();\n    const [state, setState] = useState();\n    const { height, width } = useWindowDimensions();\n\n    const divStyle = state\n        ? {\n              left: state.x,\n              top: state.y,\n          }\n        : {};\n\n    function showTooltip(event, messages) {\n        if (messages) {\n            var x = event.target.getBoundingClientRect().right;\n            var y = event.target.getBoundingClientRect().top - 10;\n            if (x + 200 > width) {\n                x = width - 200;\n                y = event.target.getBoundingClientRect().bottom;\n            }\n\n            setState({\n                messages: messages,\n                x: x,\n                y: y,\n            });\n        }\n        event.preventDefault();\n    }\n\n    function hideTooltip(event) {\n        setState(null);\n        event.preventDefault();\n    }\n\n    return (\n        <ShowTooltip.Provider value={showTooltip}>\n            <HideTooltip.Provider value={hideTooltip}>\n                {props.children}\n                {state && (\n                    <div ref={node} className=\"Tooltip\" style={divStyle}>\n                        {state.messages.map((m) => (\n                            <p>{m}</p>\n                        ))}\n                    </div>\n                )}\n            </HideTooltip.Provider>\n        </ShowTooltip.Provider>\n    );\n}\n\nexport { Tooltip, ShowTooltip, HideTooltip };\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nimport { ShowTooltip, HideTooltip } from \"./Tooltip\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button {...{ onClick }} type=\"button\" className={`TLink ${className}`}>\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={`SLink material-icons ${className}`}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction syncPost(url, data) {\n    const form = document.createElement(\"form\");\n    form.method = \"post\";\n    form.action = url;\n\n    data.push([\"csrfmiddlewaretoken\", Cookies.get(\"csrftoken\")]);\n\n    for (const [key, value] of data) {\n        const hiddenField = document.createElement(\"input\");\n        hiddenField.type = \"hidden\";\n        hiddenField.name = key;\n        hiddenField.value = value;\n\n        form.appendChild(hiddenField);\n    }\n\n    document.body.appendChild(form);\n    form.submit();\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nfunction is(x: any, y: any) {\n    return (\n        (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n    );\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n    if (is(objA, objB)) {\n        return true;\n    }\n\n    if (\n        typeof objA !== \"object\" ||\n        objA === null ||\n        typeof objB !== \"object\" ||\n        objB === null\n    ) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        console.log(\"different keys\", keysA, keysB);\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (\n            !hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])\n        ) {\n            console.log(\n                \"different key\",\n                keysA[i],\n                objA[keysA[i]],\n                objB[keysA[i]]\n            );\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction HasActionIcon(props) {\n    const { modelField, message } = props;\n    const showTooltip = useContext(ShowTooltip);\n    const hideTooltip = useContext(HideTooltip);\n\n    if (modelField.actions.length) {\n        return (\n            <>\n                <span> </span>\n                <span\n                    className=\"Symbol material-icons-outlined\"\n                    onMouseEnter={(e) => showTooltip(e, [message])}\n                    onMouseLeave={(e) => hideTooltip(e)}\n                >\n                    build_circle\n                </span>\n            </>\n        );\n    } else {\n        return \"\";\n    }\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n    shallowEqual,\n    syncPost,\n    HasActionIcon,\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { TLink } from \"./Util\";\n\nconst ShowContextMenu = React.createContext();\n\nfunction ContextMenu(props) {\n    const node = useRef();\n    const [state, setState] = useState();\n\n    function handleClick(e) {\n        if (node.current && node.current.contains(e.target)) return;\n        setState(null);\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClick);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const divStyle = state\n        ? {\n              left: state.x,\n              top: state.y,\n          }\n        : {};\n\n    function showContextMenu(event, entries) {\n        entries = entries.filter((x) => x);\n        if (entries.length && window.getSelection().toString().length === 0) {\n            setState({\n                entries: entries,\n                x: event.clientX,\n                y: event.clientY,\n            });\n            event.preventDefault();\n        }\n    }\n\n    return (\n        <ShowContextMenu.Provider value={showContextMenu}>\n            {props.children}\n            {state && (\n                <div ref={node} className=\"ContextMenu\" style={divStyle}>\n                    {state.entries.map((entry) => (\n                        <p key={entry.name}>\n                            <TLink\n                                onClick={() => {\n                                    entry.fn();\n                                    setState();\n                                }}\n                            >\n                                {entry.name}\n                            </TLink>\n                        </p>\n                    ))}\n                </div>\n            )}\n        </ShowContextMenu.Provider>\n    );\n}\n\nexport { ContextMenu, ShowContextMenu };\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay, syncPost, doPost, HasActionIcon } from \"./Util\";\nimport { ShowContextMenu } from \"./ContextMenu\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const {\n    query,\n    field,\n    className,\n    leftArrow,\n    rightArrow,\n    verticalArrows,\n  } = props;\n  const modelField = query.getField(field.pathStr);\n  const type = query.getType(modelField);\n  const fieldClass = query.getFieldClass(modelField);\n\n  const showContextMenu = useContext(ShowContextMenu);\n\n  function onContextMenu(e) {\n    showContextMenu(\n      e,\n      modelField.actions.map((action) => {\n        return {\n          name: action.prettyName,\n          fn: () =>\n            doPost(\"\", {\n              action: action.name,\n              field: field.pathStr,\n            }).then((response) => syncPost(response.url, response.data)),\n        };\n      })\n    );\n  }\n\n  return (\n    <th\n      className={`HeadCell ContextCursor ${className} ${fieldClass}`}\n      onContextMenu={onContextMenu}\n    >\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      {leftArrow && (\n        <SLink onClick={() => query.moveField(field, true)}>\n          {verticalArrows ? \"expand_less\" : \"chevron_left\"}\n        </SLink>\n      )}\n      {rightArrow && (\n        <SLink onClick={() => query.moveField(field, false)}>\n          {verticalArrows ? \"expand_more\" : \"chevron_right\"}\n        </SLink>\n      )}\n      {modelField.canPivot && (\n        <SLink onClick={() => query.togglePivot(field)}>\n          pivot_table_chart\n        </SLink>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.pathStr)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {query.prettyPathStr(field.pathStr)}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + query.prettyPathStr(field.pathStr)\n      )}\n      <HasActionIcon\n        modelField={modelField}\n        message=\"Admin actions availble on right click.\"\n      />\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const {\n    modelField,\n    className,\n    span,\n    value,\n    formatHint,\n    query,\n    pathStr,\n    fullRow,\n  } = props;\n\n  // The value we will use in copy\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (value === null) {\n    formattedValue = \"null\";\n  } else if (modelField.type === \"html\") {\n    formattedValue = value;\n  } else if (modelField.type === \"url\") {\n    formattedValue = <a href={value}>{value}</a>;\n  } else if (modelField.type === \"number\") {\n    if (\n      value > formatHint.highCutOff ||\n      value < -formatHint.highCutOff ||\n      (value && value < formatHint.lowCutOff && value > -formatHint.lowCutOff)\n    ) {\n      formattedValue = value.toExponential(formatHint.significantFigures - 1);\n    } else {\n      formattedValue = value.toLocaleString(undefined, formatHint);\n    }\n  } else {\n    formattedValue = String(value);\n  }\n\n  // Any extra gubbins we need to render it\n  let displayValue;\n  if (value === null) {\n    displayValue = <span className=\"Null\">{formattedValue}</span>;\n  } else if (formattedValue === \"\") {\n    displayValue = \"\\xa0\"; // nbsp\n  } else if (modelField.type === \"html\") {\n    displayValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else {\n    displayValue = formattedValue;\n  }\n\n  const showContextMenu = useContext(ShowContextMenu);\n  function onContextMenu(e) {\n    showContextMenu(e, [\n      navigator.clipboard && {\n        name: \"Copy\",\n        fn: () => navigator.clipboard.writeText(formattedValue),\n      },\n      modelField.concrete &&\n        query.filterForValue(pathStr, value) && {\n          name: \"Filter\",\n          fn: () => query.addExactFilter(pathStr, value),\n        },\n      modelField.concrete &&\n        query.filterForValue(pathStr, value) && {\n          name: \"Exclude\",\n          fn: () => query.addExactExclude(pathStr, value),\n        },\n      fullRow && {\n        name: \"Drill down\",\n        fn: () => query.drillDown(fullRow),\n      },\n    ]);\n  }\n\n  return (\n    <td\n      className={`DataCell ContextCursor ${modelField.type} ${className}`}\n      colSpan={span || 1}\n      onContextMenu={onContextMenu}\n    >\n      {displayValue}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n      verticalArrows={false}\n      leftArrow={i !== 0}\n      rightArrow={i !== fields.length - 1}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const {\n    fields,\n    query,\n    classNameFirst,\n    className,\n    row,\n    formatHints,\n    fullRow,\n  } = props;\n  return fields.map((field, i) => {\n    if (row)\n      return (\n        <DataCell\n          {...{ query }}\n          pathStr={field.pathStr}\n          key={field.pathStr}\n          value={row[field.pathStr]}\n          className={`${i ? \"\" : classNameFirst} ${className}`}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={fullRow}\n        />\n      );\n    else\n      return (\n        <td\n          key={field.pathStr}\n          className={`${i ? \"\" : classNameFirst} Empty`}\n        ></td>\n      );\n  });\n}\n\nfunction HTableRow(props) {\n  const {\n    query,\n    field,\n    data,\n    span,\n    className,\n    formatHints,\n    leftArrow,\n    rightArrow,\n  } = props;\n  return (\n    <>\n      <HeadCell\n        {...{ query, field, leftArrow, rightArrow }}\n        verticalArrows={true}\n      />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, span, className, query }}\n          value={col[field.pathStr]}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={col}\n          pathStr={field.pathStr}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay, formatHints } = props;\n  const colFields = query.colFields();\n  const topTitleSpace = query.rowFields().length - 1;\n  const sideTitleSpace = query.colFields().length\n    ? 1 - query.rowFields().length\n    : 0;\n  const hasBody = query.rowFields().length || query.bodyFields().length || null;\n\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* col headers and data aka pivots */}\n            {colFields.map((field, i) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={topTitleSpace} />\n                  <HTableRow\n                    {...{ query, field, formatHints }}\n                    span={query.bodyFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                    leftArrow={i !== 0}\n                    rightArrow={i !== colFields.length - 1}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* body/aggregate headers */}\n            {hasBody && (\n              <tr>\n                <Spacer spaces={sideTitleSpace} />\n                <VTableHeadRow\n                  {...{ query }}\n                  fields={query.rowFields()}\n                  className=\"Freeze\"\n                />\n                {(cols.length ? cols : [null]).map((_, key) => (\n                  <VTableHeadRow\n                    {...{ key, query }}\n                    fields={query.bodyFields()}\n                    classNameFirst=\"LeftBorder\"\n                    className=\"Freeze\"\n                  />\n                ))}\n              </tr>\n            )}\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {hasBody &&\n              rows.map(\n                (row, rowIndex) =>\n                  row && (\n                    <tr key={rowIndex}>\n                      <Spacer spaces={sideTitleSpace} />\n                      <VTableBodyRow\n                        {...{ query, row, formatHints }}\n                        fields={query.rowFields()}\n                        fullRow={row}\n                      />\n                      {body.map((table, key) => (\n                        <VTableBodyRow\n                          {...{ key, query, formatHints }}\n                          fields={query.bodyFields()}\n                          row={table[rowIndex]}\n                          fullRow={{ ...row, ...cols[key] }}\n                          classNameFirst=\"LeftBorder\"\n                        />\n                      ))}\n                    </tr>\n                  )\n              )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n  parsedFilterValues: [],\n  formatHints: {},\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.pathStr +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.pathStr}__${f.lookup}=${encodeURIComponent(f.value)}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getRelUrlForQuery(query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  return `query/${model}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const relUrl = getRelUrlForQuery(query, media);\n  return `${window.location.origin}${baseUrl}${relUrl}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(pathStr) {\n    const path = pathStr.split(\"__\");\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      const modelField = this.config.allModelFields[model].fields[field];\n      if (modelField === undefined) return null;\n      model = modelField.model;\n    }\n    return this.config.allModelFields[model].fields[path.slice(-1)];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(field, type, lookup) {\n    const lookup_type = type.lookups[lookup].type;\n    if (lookup_type.endsWith(\"choice\")) return String(field.choices[0]);\n    else return String(this.config.types[lookup_type].defaultValue);\n  }\n\n  _getFieldIndex(field, fields) {\n    return fields.findIndex((f) => f.pathStr === field.pathStr);\n  }\n\n  addField(pathStr, sort) {\n    const newFields = this.query.fields.filter((f) => f.pathStr !== pathStr);\n    const priorities = newFields\n      .map((f) => f.priority)\n      .filter((f) => f !== null);\n    const newPriority = priorities.length ? Math.max(...priorities) + 1 : 0;\n    newFields.push({\n      pathStr: pathStr,\n      sort: sort,\n      priority: sort ? newPriority : null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    const modelField = this.getField(field.pathStr);\n    this.setQuery(\n      {\n        fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n      },\n      modelField.canPivot\n    );\n  }\n\n  moveField(field, left) {\n    const modelField = this.getField(field.pathStr);\n\n    // get the fields in their sections\n    const colFields = this.colFields().slice();\n    const rowFields = this.rowFields().slice();\n    const bodyFields = this.bodyFields().slice();\n\n    // pick the section our field is in\n    let fields = null;\n    if (field.pivoted) fields = colFields;\n    else if (modelField.canPivot) fields = rowFields;\n    else fields = bodyFields;\n\n    // work out it's old and new index\n    const index = this._getFieldIndex(field, fields);\n    const newIndex = index + (left ? -1 : 1);\n\n    // if anything changed then update our section and then\n    // rebuild all the fields from the sections\n    if (0 <= newIndex && newIndex < fields.length) {\n      fields.splice(index, 1);\n      fields.splice(newIndex, 0, field);\n      this.setQuery(\n        { fields: [].concat(rowFields, colFields, bodyFields) },\n        false\n      );\n    }\n  }\n\n  toggleSort(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(pathStr) {\n    const field = this.getField(pathStr);\n    const type = this.getType(field);\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      pathStr: pathStr,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(field, type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  filterForValue(pathStr, value, negate) {\n    const lookups = this.getType(this.getField(pathStr)).lookups;\n    if (value === null && lookups.hasOwnProperty(\"is_null\"))\n      return {\n        pathStr: pathStr,\n        lookup: \"is_null\",\n        value: negate ? \"NotNull\" : \"IsNull\",\n      };\n    else if (lookups.hasOwnProperty(\"equals\"))\n      return {\n        pathStr: pathStr,\n        lookup: negate ? \"not_equals\" : \"equals\",\n        value: String(value),\n      };\n    else return null;\n  }\n\n  addExactFilter(pathStr, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters.push(this.filterForValue(pathStr, value, false));\n    this.setQuery({ filters: newFilters });\n  }\n\n  addExactExclude(pathStr, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters.push(this.filterForValue(pathStr, value, true));\n    this.setQuery({ filters: newFilters });\n  }\n\n  drillDown(values) {\n    const newFilters = this.query.filters.concat(\n      this.query.fields\n        // limit to filterable\n        .filter((field) => this.getField(field.pathStr).canPivot)\n        .filter((field) => this.getField(field.pathStr).concrete)\n        // values is the contextually filterable stuff, so overlap with above\n        .filter((field) => values.hasOwnProperty(field.pathStr))\n        // and only the filters that will actually do some filtering\n        .filter((field) => {\n          const allValues = field.pivoted ? this.query.cols : this.query.rows;\n          const fieldValues = allValues.map((row) => row[field.pathStr]);\n          const uniqueValues = new Set(fieldValues);\n          return uniqueValues.size > 1;\n        })\n        .map((field) =>\n          this.filterForValue(field.pathStr, values[field.pathStr], false)\n        )\n        .filter((f) => f !== null)\n    );\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const field = this.getField(newFilters[index].pathStr);\n    const type = this.getType(field);\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(field, type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: this.config.allModelFields[model].defaultFilters,\n      limit: this.config.defaultRowLimit,\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    return this.query.fields.filter(\n      (f) => this.getField(f.pathStr).canPivot && !f.pivoted\n    );\n  }\n\n  bodyFields() {\n    return this.query.fields.filter((f) => !this.getField(f.pathStr).canPivot);\n  }\n\n  prettyPathStr(pathStr) {\n    const path = pathStr.split(\"__\");\n    const prettyPath = [];\n    let model = this.query.model;\n    let field = null;\n    for (const part of path) {\n      field = this.config.allModelFields[model].fields[part];\n      model = field.model;\n      prettyPath.push(field.prettyName);\n      prettyPath.push(field.toMany ? \"\\u21f6\" : \"\\u21d2\");\n    }\n    return prettyPath.slice(0, -1).join(\" \");\n  }\n\n  getFieldClass(field) {\n    if (!field.type) return \"RelatedField\";\n    if (!field.concrete) return \"CalculatedField\";\n    if (!field.canPivot) return \"AggregateField\";\n    if (!field.model) return \"FunctionField\";\n    return \"ConcreteField\";\n  }\n}\n\nexport { Query, getPartsForQuery, getRelUrlForQuery, getUrlForQuery, empty };\n","import React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  TLink,\n  SLink,\n  useData,\n  version,\n  Save,\n  Delete,\n  CopyText,\n  HasActionIcon,\n} from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery, getRelUrlForQuery } from \"./Query\";\nimport { ShowTooltip, HideTooltip } from \"./Tooltip\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookupType, onChange, value, field } = props;\n  const onChangeEvent = (e) => onChange(e.target.value);\n  const showTooltip = useContext(ShowTooltip);\n  const hideTooltip = useContext(HideTooltip);\n  const helpText = {\n    date: [\n      \"Date filter values can be a literal value e.g. '2020-12-21' or 'today' or a series of clauses applied in order from today.\",\n      \"e.g. 'day=1 month+1 tuesday+2' which means move to the 1st of this month, then move forward a month, then move forward to the second Tuesday.\",\n      \"You can use 'year', 'month' or 'day' with '+', '-', or '=' to add remove or replace the given quantity.\",\n      \"Or you can use a weekday name with '+' or '-' to get the n-th next or previous (including today) instance of that day.\",\n      \"Bear in mind that 'day=1 month+1' may produce a different result from 'month+1 day=1', for example on Jan 31st.\",\n    ],\n    datetime: [\n      \"Datetime filter values can be a literal value e.g. '2020-12-21 14:56' or 'now' or a series of clauses applied in order from now.\",\n      \"e.g. 'day=1 month+1 tuesday+2' which means move to the 1st of this month, then move forward a month, then move forward to the second Tuesday.\",\n      \"You can use 'year', 'month', 'day', 'hour', 'minute' or 'second' with '+', '-', or '=' to add remove or replace the given quantity.\",\n      \"Or you can use a weekday name with '+' or '-' to get the n-th next or previous (including today) instance of that day.\",\n      \"Bear in mind that 'day=1 month+1' may produce a different result from 'month+1 day=1', for example on Jan 31st.\",\n    ],\n  };\n\n  if (props.lookupType === \"boolean\") {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  } else if (props.lookupType === \"isnull\") {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={\"IsNull\"}>IsNull</option>\n        <option value={\"NotNull\"}>NotNull</option>\n      </select>\n    );\n  } else if (lookupType.endsWith(\"choice\")) {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {field.choices.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (lookupType === \"number\") {\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  } else if (lookupType === \"jsonfield\") {\n    const parts = value.split(/\\|(.*)/);\n    return (\n      <>\n        <input\n          value={parts[0]}\n          onChange={(e) => onChange(`${e.target.value}|${parts[1]}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n        <input\n          value={parts[1]}\n          onChange={(e) => onChange(`${parts[0]}|${e.target.value}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n      </>\n    );\n  } else {\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"text\"\n        onMouseEnter={(e) => showTooltip(e, helpText[lookupType])}\n        onMouseLeave={(e) => hideTooltip(e)}\n      />\n    );\n  }\n}\n\nfunction Filter(props) {\n  const { pathStr, index, lookup, query, value, errorMessage, parsed } = props;\n  const field = query.getField(pathStr);\n  var type = null;\n  var lookupType = null;\n  if (field !== null) {\n    type = query.getType(field);\n    if (type.lookups.hasOwnProperty(lookup))\n      lookupType = type.lookups[lookup].type;\n  }\n\n  if (lookupType === null)\n    return (\n      <tr className=\"Filter\">\n        <td>\n          {\" \"}\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          {pathStr}\n        </td>\n        <td>{lookup}</td>\n        <td>\n          {value}\n          <p className=\"Error\">{errorMessage}</p>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr className=\"Filter\">\n      <td>\n        <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n        <TLink onClick={() => query.addField(pathStr, field.defaultSort)}>\n          {query.prettyPathStr(pathStr)}\n        </TLink>{\" \"}\n      </td>\n      <td>\n        <select\n          className=\"Lookup\"\n          value={lookup}\n          onChange={(e) => query.setFilterLookup(index, e.target.value)}\n        >\n          {type.sortedLookups.map((lookupName) => (\n            <option key={lookupName} value={lookupName}>\n              {type.lookups[lookupName].prettyName}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td>=</td>\n      <td>\n        <FilterValue\n          {...{ value, field, lookupType }}\n          onChange={(val) => query.setFilterValue(index, val)}\n        />\n        {errorMessage && <p className=\"Error\">{errorMessage}</p>}\n        {parsed !== null &&\n          (lookupType === \"date\" || lookupType === \"datetime\") && (\n            <p className=\"Success\">{parsed}</p>\n          )}\n      </td>\n    </tr>\n  );\n}\n\nfunction Filters(props) {\n  const { query, filterErrors, parsedFilterValues } = props;\n  return (\n    <form className=\"Filters\">\n      <table>\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n              parsed={parsedFilterValues[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nfunction Field(props) {\n  const { query, path, modelField } = props;\n  const type = query.getType(modelField);\n  const [toggled, setToggled] = useState(false);\n  return (\n    <>\n      <tr className=\"Field\">\n        {/* filter */}\n        <td>\n          {modelField.concrete && type.defaultLookup && (\n            <SLink onClick={() => query.addFilter(path.join(\"__\"))}>\n              filter_alt\n            </SLink>\n          )}\n        </td>\n\n        {/* expand */}\n        <td>\n          {modelField.model && (\n            <SLink\n              className=\"ToggleLink\"\n              onClick={() => setToggled((toggled) => !toggled)}\n            >\n              {toggled ? \"remove\" : \"add\"}\n            </SLink>\n          )}\n        </td>\n\n        {/* name */}\n        <td className={`FieldName ${query.getFieldClass(modelField)}`}>\n          {modelField.type ? (\n            <TLink\n              onClick={() =>\n                query.addField(path.join(\"__\"), modelField.defaultSort)\n              }\n            >\n              {modelField.prettyName}\n              <HasActionIcon\n                modelField={modelField}\n                message=\"Has admin actions.\"\n              />\n            </TLink>\n          ) : (\n            modelField.prettyName + (modelField.toMany ? \" \\u21f6\" : \"\")\n          )}\n        </td>\n      </tr>\n\n      {/* sub fields */}\n      {toggled && (\n        <tr>\n          <td></td>\n          <td colSpan=\"2\">\n            <AllFields {...{ query, path }} model={modelField.model} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\nfunction AllFields(props) {\n  const { query, model, path } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table className=\"AllFields\">\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  const { query, sortedModels, model } = props;\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => query.setModel(e.target.value)}\n      value={model}\n    >\n      {sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    parsedFilterValues,\n    baseUrl,\n    overlay,\n    formatHints,\n  } = props;\n\n  let results;\n  if (query.query.fields.length)\n    results = (\n      <Results {...{ query, rows, cols, body, overlay, formatHints }} />\n    );\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <div className=\"QueryPage\">\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors, parsedFilterValues }} />\n      <p>\n        <span className={length >= query.query.limit ? \"Error\" : \"\"}>\n          Limit:{\" \"}\n          <input\n            className=\"RowLimit\"\n            type=\"number\"\n            value={query.query.limit}\n            onChange={(event) => {\n              query.setLimit(event.target.value);\n            }}\n            min=\"1\"\n          />{\" \"}\n          - Showing {length} results -{\" \"}\n        </span>\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"sql\")}>View SQL Query</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <div className=\"Scroller\">\n            <AllFields {...{ query, model }} path={[]} />\n          </div>\n        </div>\n        {results}\n        <div />\n      </div>\n    </div>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div>\n        <div className=\"SavedViewActions\">\n          <span className=\"SavedViewTitle\">Saved View</span>\n          <Link to={view.link}>Open</Link>\n        </div>\n        <form>\n          <input\n            type=\"text\"\n            value={view.name}\n            onChange={(event) => {\n              setView({ name: event.target.value });\n            }}\n            className=\"SavedViewName\"\n            placeholder=\"enter a name\"\n          />\n          <table>\n            <tbody>\n              <tr>\n                <th>Model:</th>\n                <td>{view.model}</td>\n              </tr>\n              <tr>\n                <th>Fields:</th>\n                <td>{view.fields.replace(/,/g, \"\\u200b,\")}</td>\n              </tr>\n              <tr>\n                <th>Filters:</th>\n                <td>{view.query.replace(/&/g, \"\\u200b&\")}</td>\n              </tr>\n              <tr>\n                <th>Limit:</th>\n                <td className=\"SavedViewLimit\">\n                  <input\n                    className=\"RowLimit\"\n                    type=\"number\"\n                    value={view.limit}\n                    onChange={(event) => {\n                      setView({ limit: event.target.value });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Created Time:</th>\n                <td>{view.createdTime}</td>\n              </tr>\n            </tbody>\n          </table>\n          <textarea\n            value={view.description}\n            onChange={(event) => {\n              setView({ description: event.target.value });\n            }}\n            placeholder=\"enter a description\"\n          />\n          {canMakePublic && (\n            <table>\n              <tbody>\n                <tr>\n                  <th>Is Public:</th>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={view.public}\n                      onChange={(event) => {\n                        setView({ public: event.target.checked });\n                      }}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <th>Public link:</th>\n                  <td>{view.public && <CopyText text={view.publicLink} />}</td>\n                </tr>\n                <tr>\n                  <th>Google Sheets:</th>\n                  <td>\n                    {view.public && (\n                      <CopyText text={view.googleSheetsFormula} />\n                    )}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          )}\n        </form>\n        <div className=\"SavedViewActions\">\n          <Delete apiUrl={url} redirectUrl=\"/\" />\n          <Link to=\"/\">Done</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div className=\"SavedViewList\">\n      <h1>Saved Views</h1>\n      {savedViews.map((view, index) => (\n        <div key={index}>\n          <h2>\n            <Link className=\"Link\" to={view.link}>\n              {view.name || \"<unnamed>\"}\n            </Link>\n          </h2>\n          <p>\n            on {view.model} - <Link to={`/views/${view.pk}.html`}>edit</Link>\n          </p>\n          <p>{view.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl, defaultRowLimit, allModelFields } = props;\n  return (\n    <div className=\"HomePage\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <h2>\n                <Link\n                  to={getRelUrlForQuery(\n                    {\n                      model: model,\n                      fields: [],\n                      filters: allModelFields[model].defaultFilters,\n                      limit: defaultRowLimit,\n                    },\n                    \"html\"\n                  )}\n                  className=\"Link\"\n                >\n                  {model}\n                </Link>\n              </h2>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { Tooltip } from \"./Tooltip\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nconst BOOTING = \"Booting...\";\nconst LOADING = \"Loading...\";\nconst ERROR = \"Error\";\n\nfunction QueryApp(props) {\n  const { config } = props;\n  const { model, fieldStr } = useParams();\n  const [status, setStatus] = useState(BOOTING);\n  const [query, setQuery] = useState({\n    model: \"\",\n    fields: [],\n    filters: [],\n    limit: config.defaultRowLimit,\n    ...empty,\n  });\n  const queryStr = useLocation().search;\n\n  const handleError = (e) => {\n    if (e.name !== \"AbortError\") {\n      setStatus(ERROR);\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  };\n\n  const fetchResults = (state) => {\n    setStatus(LOADING);\n    const url = getUrlForQuery(config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      setQuery((query) => ({\n        ...query,\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        formatHints: response.formatHints,\n        filterErrors: response.filterErrors,\n        parsedFilterValues: response.parsedFilterValues,\n      }));\n      setStatus(fetchInProgress ? LOADING : undefined);\n      return response;\n    });\n  };\n\n  useEffect(() => {\n    const popstate = (e) => {\n      setQuery(e.state);\n      fetchResults(e.state).catch(handleError);\n    };\n\n    const url = `${config.baseUrl}query/${model}/${\n      fieldStr || \"\"\n    }.query${queryStr}`;\n\n    doGet(url).then((response) => {\n      const reqState = {\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      setQuery(reqState);\n      setStatus(LOADING);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", popstate);\n      fetchResults(reqState).catch(handleError);\n    });\n\n    return () => {\n      window.removeEventListener(\"popstate\", popstate);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const handleQueryChange = (queryChange, reload = true) => {\n    const newState = { ...query, ...queryChange };\n\n    setQuery(newState);\n\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(config.baseUrl, newState, \"html\")\n    );\n\n    if (!reload) return;\n\n    fetchResults(newState)\n      .then((response) => {\n        const res = { ...response, ...empty };\n        const req = { ...request };\n        assert.deepStrictEqual(res, req);\n      })\n      .catch(handleError);\n  };\n\n  if (status === BOOTING) return \"\";\n  const queryObj = new Query(config, query, handleQueryChange);\n  return (\n    <QueryPage\n      overlay={status}\n      query={queryObj}\n      sortedModels={config.sortedModels}\n      baseUrl={config.baseUrl}\n      {...query}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <ContextMenu>\n        <Tooltip>\n          <Logo />\n          <Switch>\n            <Route path=\"/query/:model/:fieldStr?.html\">\n              <QueryApp config={props} />\n            </Route>\n            <Route path=\"/views/:pk.html\">\n              <EditSavedView {...{ baseUrl, canMakePublic }} />\n            </Route>\n            <Route path=\"/\">\n              <HomePage {...props} />\n            </Route>\n          </Switch>\n        </Tooltip>\n      </ContextMenu>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}