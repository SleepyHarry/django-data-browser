{"version":3,"sources":["Util.js","ContextMenu.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","useData","useState","data","setData","useEffect","updates","prev","Cookies","body","JSON","stringify","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","doPost","to","Delete","state","setState","Overlay","message","Object","prototype","hasOwnProperty","ShowContextMenu","React","createContext","ContextMenu","node","handleClick","contains","addEventListener","removeEventListener","divStyle","left","x","top","y","Provider","value","entries","filter","length","clientX","clientY","preventDefault","style","map","entry","key","fn","Spacer","spaces","Array","_","HeadCell","query","field","modelField","getField","pathStr","getType","removeField","moveField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","toggleSort","prettyPathStr","dsc","priority","asc","null","sort","DataCell","formattedValue","span","formatHint","fullRow","highCutOff","lowCutOff","toExponential","significantFigures","toLocaleString","String","showContextMenu","useContext","colSpan","onContextMenu","navigator","clipboard","writeText","addExactFilter","drillDown","dangerouslySetInnerHTML","__html","VTableHeadRow","fields","classNameFirst","i","VTableBodyRow","row","formatHints","HTableRow","col","Results","cols","rows","overlay","colFields","rowFields","resFields","rowIndex","table","empty","filterErrors","getPartsForQuery","model","f","join","filters","lookup","limit","getRelUrlForQuery","media","query_str","getUrlForQuery","baseUrl","relUrl","origin","Query","config","setQuery","this","path","split","slice","allModelFields","types","lookup_type","lookups","endsWith","choices","defaultValue","findIndex","newFields","priorities","newPriority","Math","max","push","index","_getFieldIndex","newIndex","splice","concat","newSort","newFilters","getDefaultLookupValue","values","Number","defaultFilters","defaultRowLimit","prettyPath","part","prettyName","FilterValue","onChange","onChangeEvent","option","step","parts","Filter","errorMessage","removeFilter","addField","defaultSort","setFilterLookup","sortedLookups","lookupName","replace","val","setFilterValue","Filters","Field","toggled","setToggled","AllFields","modelFields","getModelFields","sortedFields","fieldName","ModelSelector","sortedModels","setModel","Logo","QueryPage","results","setLimit","min","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","createdTime","description","checked","public","publicLink","googleSheetsFormula","SavedViewList","savedViews","HomePage","QueryApp","fieldStr","setStatus","queryStr","useLocation","search","handleError","Sentry","fetchResults","popstate","reqState","history","replaceState","queryObj","queryChange","newState","request","pushState","sortBy","req","deepStrictEqual","App","basename","id","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"oVAIMA,EAASC,EAAQ,IACnBC,GAAkB,EAClBC,OAAYC,EAEVC,EAAUC,SAASC,eAAe,mBAAmBC,YAAYC,OAEvE,SAASC,EAASC,GAAQ,IACdC,EAASD,EAATC,KACFC,EAAMC,iBAAO,MACnB,OACI,oCACI,0BAAMD,IAAKA,GAAMD,GAAa,IAC9B,kBAACG,EAAD,CACIC,UAAU,kBACVC,QAAS,SAACC,GACN,IAAMC,EAAQb,SAASc,cACvBD,EAAME,mBAAmBR,EAAIS,SAC7BC,OAAOC,eAAeC,kBACtBF,OAAOC,eAAeE,SAASP,GAC/Bb,SAASqB,YAAY,QACrBJ,OAAOC,eAAeC,kBACtBP,EAAMU,OAAOC,SATrB,wBAkBZ,SAASd,EAAMJ,GAAQ,IACXK,EAAiCL,EAAjCK,UAAWC,EAAsBN,EAAtBM,QAASa,EAAanB,EAAbmB,SAC5B,OACI,yCACQ,CAAEb,WADV,CAEIc,KAAK,SACLf,UAAW,SAAWA,GAAa,MAElCc,GAKb,SAASE,EAAMrB,GAAQ,IACXK,EAAiCL,EAAjCK,UAAWC,EAAsBN,EAAtBM,QAASa,EAAanB,EAAbmB,SAC5B,OACI,yCACQ,CAAEb,WADV,CAEIc,KAAK,SACLf,UAAW,yBAA2BA,GAAa,MAElDc,G,IAKPG,E,4MACFC,KAAO,a,wBADcC,QAIzB,SAASC,EAAQC,EAAKC,EAASC,GAC3B,OAAIrC,GACIC,GACAA,EAAUqC,OAAO,IAAIP,EAAW,YAE7B,IAAIQ,SAAQ,SAACC,EAASF,GACzBrC,EAAY,CAAEuC,UAASF,SAAQH,MAAKC,UAASC,gBAIrDrC,GAAkB,EAEXyC,MAAMN,EAAKC,GACbM,MAAK,SAACC,GAEH,IAAMC,EAAO3C,EAIb,GAHAA,OAAYC,EACZF,GAAkB,EAEd4C,EAKA,MAJAV,EAAQU,EAAKT,IAAKS,EAAKR,QAASQ,EAAKP,SAASK,MAC1C,SAACG,GAAD,OAASD,EAAKJ,QAAQK,MACtB,SAACC,GAAD,OAASF,EAAKN,OAAOQ,MAEnB,IAAIf,EAAW,eAErB,OAAOY,KAGdD,MAAK,SAACC,GAIH,OAFA7C,EAAOiD,GAAGJ,EAASK,QAAU,KAC7BlD,EAAOiD,GAAGJ,EAASK,OAAS,KACrBL,KAEVD,MAAK,SAACC,GAEH,IAAMM,EAAmBN,EAASO,QAAQC,IAAI,aAS9C,OARIF,IAAqB9C,IACrBiD,QAAQC,IACJ,gCACAlD,EACA8C,GAEJ5B,OAAOiC,SAASC,QAAO,IAEpBZ,KAEVD,MAAK,SAACC,GAAD,OAAcN,EAAQM,OAGpC,SAASa,EAAMrB,GACX,OAAOD,EAAQC,EAAK,CAAEsB,OAAQ,QAAS,SAACd,GAAD,OAAcA,EAASe,UA4ClE,SAASC,EAAQxB,GAAM,IAAD,EACMyB,qBADN,mBACXC,EADW,KACLC,EADK,KAKlB,OAHAC,qBAAU,WACNP,EAAMrB,GAAKO,MAAK,SAACC,GAAD,OAAcmB,EAAQnB,QACvC,CAACR,IACG,CACH0B,EACA,SAACG,GACGF,GAAQ,SAACG,GAAD,sBAAgBA,EAAhB,GAAyBD,MAtC7C,SAAiB7B,EAAK0B,GAClB,OAAO3B,EACHC,EACA,CACIsB,OAAQ,QACRP,QAAS,CACL,eAAgB,mBAChB,cAAegB,IAAQf,IAAI,cAE/BgB,KAAMC,KAAKC,UAAUR,KAEzB,SAAClB,GAAD,OAAcA,EAASe,UA4BnBY,CAAQnC,EAAK6B,GACRtB,MAAK,SAACC,GAAD,OACFmB,GAAQ,SAACG,GAAD,sBAAgBA,EAAhB,GAAyBtB,SAEpC4B,OAAM,SAACC,GACJ,GAAe,eAAXA,EAAExC,KAAuB,MAAMwC,OAMvD,SAASC,EAAKhE,GAAQ,IACVuB,EAAoCvB,EAApCuB,KAAM0C,EAA8BjE,EAA9BiE,OAAQb,EAAsBpD,EAAtBoD,KAAMc,EAAgBlE,EAAhBkE,YADX,EAEWf,mBAAS,QAFpB,mBAEVgB,EAFU,KAEFC,EAFE,KAGjB,GAAe,SAAXD,EACA,OACI,kBAAC/D,EAAD,CACIE,QAAS,SAACC,GACN6D,EAAU,UA1C9B,SAAgB1C,EAAK0B,GACjB,OAAO3B,EACHC,EACA,CACIsB,OAAQ,OACRP,QAAS,CACL,eAAgB,mBAChB,cAAegB,IAAQf,IAAI,cAE/BgB,KAAMC,KAAKC,UAAUR,KAEzB,SAAClB,GAAD,OAAcA,EAASe,UAgCXoB,CAAOJ,EAAQb,GAAMnB,MAAK,SAACC,GAAD,OACtBkC,EAAUlC,QAJtB,QAQUX,GAAQ,IAGrB,GAAe,WAAX4C,EAAqB,OAAO,8CAAU5C,GAAQ,IAEnD,IAAMG,EACqB,oBAAhBwC,EACDA,EAAYC,GACZD,EACV,OAAO,kBAAC,IAAD,CAAUI,GAAI5C,IAI7B,SAAS6C,EAAOvE,GAAQ,IACZuB,EAA8BvB,EAA9BuB,KAAM0C,EAAwBjE,EAAxBiE,OAAQC,EAAgBlE,EAAhBkE,YADH,EAEOf,mBAAS,UAFhB,mBAEZqB,EAFY,KAELC,EAFK,KAGnB,GAAc,WAAVD,EACA,OACI,kBAACpE,EAAD,CACIE,QAAS,SAACC,GACNkE,EAAS,aAFjB,UAKYlD,GAAQ,IAGvB,GAAc,YAAViD,EACL,OACI,kBAACpE,EAAD,CACIE,QAAS,SAACC,GAvG1B,IAAkBmB,EAwGE+C,EAAS,aAxGX/C,EAyGWuC,EAxGlBxC,EACHC,EACA,CACIsB,OAAQ,SACRP,QAAS,CAAE,cAAegB,IAAQf,IAAI,gBAE1C,SAACR,GAAD,OAAcA,MAkGeD,MAAK,SAACC,GAAD,OAAcuC,EAAS,gBAHrD,iBASH,GAAc,aAAVD,EAAsB,MAAO,WACjC,GAAc,YAAVA,EAAqB,OAAO,kBAAC,IAAD,CAAUF,GAAIJ,IAC9C,MAAM,IAAI1C,MAAJ,gCAAmCgD,IAGlD,SAASE,EAAQ1E,GACb,OAAKA,EAAM2E,QAEP,yBAAKtE,UAAU,WACX,4BAAKL,EAAM2E,UAHQ,KAaRC,OAAOC,UAAUC,eCrPxC,IAAMC,EAAkBC,IAAMC,gBAE9B,SAASC,EAAYlF,GACjB,IAAMmF,EAAOhF,mBADW,EAEEgD,qBAFF,mBAEjBqB,EAFiB,KAEVC,EAFU,KAIxB,SAASW,EAAYrB,GACboB,EAAKxE,SAAWwE,EAAKxE,QAAQ0E,SAAStB,EAAE9C,SAC5CwD,EAAS,MAGbnB,qBAAU,WAEN,OADA3D,SAAS2F,iBAAiB,YAAaF,GAChC,WACHzF,SAAS4F,oBAAoB,YAAaH,MAE/C,IAEH,IAAMI,EAAWhB,EACX,CACIiB,KAAMjB,EAAMkB,EACZC,IAAKnB,EAAMoB,GAEf,GAcN,OACI,kBAACb,EAAgBc,SAAjB,CAA0BC,MAb9B,SAAyBvF,EAAOwF,IAC5BA,EAAUA,EAAQC,QAAO,SAACN,GAAD,OAAOA,MACpBO,SACRxB,EAAS,CACLsB,QAASA,EACTL,EAAGnF,EAAM2F,QACTN,EAAGrF,EAAM4F,UAEb5F,EAAM6F,oBAMLpG,EAAMmB,SACNqD,GACG,yBAAKtE,IAAKiF,EAAM9E,UAAU,cAAcgG,MAAOb,GAC1ChB,EAAMuB,QAAQO,KAAI,SAACC,GAAD,OACf,uBAAGC,IAAKD,EAAMhF,MACV,kBAACnB,EAAD,CACIE,QAAS,WACLiG,EAAME,KACNhC,MAGH8B,EAAMhF,Y,YCjDvC,SAASmF,EAAO1G,GAAQ,IACd2G,EAAW3G,EAAX2G,OACR,OAAIA,EAAS,EACJ,YAAIC,MAAMD,IAASL,KAAI,SAACO,EAAGL,GAAJ,OAC5B,wBAAInG,UAAU,QAAQmG,IAAKA,OAGxB,KAGT,SAASM,EAAS9G,GAAQ,IAChB+G,EAA4B/G,EAA5B+G,MAAOC,EAAqBhH,EAArBgH,MAAO3G,EAAcL,EAAdK,UAChB4G,EAAaF,EAAMG,SAASF,EAAMG,SAClC/F,EAAO2F,EAAMK,QAAQH,GAC3B,OACE,uBAAQ,CAAE5G,aACR,kBAACgB,EAAD,CAAOf,QAAS,kBAAMyG,EAAMM,YAAYL,KAAxC,SACA,kBAAC3F,EAAD,CAAOf,QAAS,kBAAMyG,EAAMO,UAAUN,GAAO,KAA7C,gBACA,kBAAC3F,EAAD,CAAOf,QAAS,kBAAMyG,EAAMO,UAAUN,GAAO,KAA7C,iBACCC,EAAWM,UACV,oCACE,kBAAClG,EAAD,CAAOf,QAAS,kBAAMyG,EAAMS,YAAYR,KACrCA,EAAMS,QAAU,gBAAkB,cAIxCR,EAAWS,UAAYtG,EAAKuG,cAC3B,oCACE,kBAACtG,EAAD,CAAOf,QAAS,kBAAMyG,EAAMa,UAAUZ,EAAMG,WAA5C,cAES,IACT,kBAAC/G,EAAD,CAAOE,QAAS,kBAAMyG,EAAMc,WAAWb,KACpCD,EAAMe,cAAcd,EAAMG,SAEzB,CACEY,IAAI,SAAD,OAAMf,EAAMgB,UACfC,IAAI,SAAD,OAAMjB,EAAMgB,UACfE,KAAM,IACNlB,EAAMmB,QAKd,IAAMpB,EAAMe,cAAcd,EAAMG,UAMxC,SAASiB,EAASpI,GAAQ,IAWpBqI,EATFpB,EAQEjH,EARFiH,WACA5G,EAOEL,EAPFK,UACAiI,EAMEtI,EANFsI,KACAxC,EAKE9F,EALF8F,MACAyC,EAIEvI,EAJFuI,WACAxB,EAGE/G,EAHF+G,MACAI,EAEEnH,EAFFmH,QACAqB,EACExI,EADFwI,QAIAH,OADY5I,IAAVqG,EACe,GACE,OAAVA,EACQ,KACY,SAApBmB,EAAW7F,KACH0E,EACY,WAApBmB,EAAW7F,KAElB0E,EAAQyC,EAAWE,YACnB3C,GAASyC,EAAWE,YACnB3C,GAASA,EAAQyC,EAAWG,WAAa5C,GAASyC,EAAWG,UAE7C5C,EAAM6C,cAAcJ,EAAWK,mBAAqB,GAEpD9C,EAAM+C,oBAAepJ,EAAW8I,GAGlCO,OAAOhD,GAG1B,IAAMiD,EAAkBC,qBAAWjE,GAmBnC,OACE,wBACE1E,UAAW4G,EAAW7F,KAAO,IAAMf,GAAa,GAChD4I,QAASX,GAAQ,EACjBY,cArBJ,SAAuBnF,GACrBgF,EAAgBhF,EAAG,CACjBoF,UAAUC,WAAa,CACrB7H,KAAM,OACNkF,GAAI,kBAAM0C,UAAUC,UAAUC,UAAUhB,KAE1CpB,EAAWS,UAAY,CACrBnG,KAAM,SACNkF,GAAI,kBAAMM,EAAMuC,eAAenC,EAASrB,KAE1C0C,GAAW,CACTjH,KAAM,aACNkF,GAAI,kBAAMM,EAAMwC,UAAUf,SAWP,SAApBvB,EAAW7F,KACV,yBAAKoI,wBAAyB,CAAEC,OAAQ3D,KAExCuC,GAMR,SAASqB,EAAc1J,GAAQ,IACrB2J,EAA6C3J,EAA7C2J,OAAQ5C,EAAqC/G,EAArC+G,MAAO6C,EAA8B5J,EAA9B4J,eAAgBvJ,EAAcL,EAAdK,UACvC,OAAOsJ,EAAOrD,KAAI,SAACU,EAAO6C,GAAR,OAChB,kBAAC/C,EAAD,cACM,CAAEC,QAAOC,SADf,CAEER,IAAKQ,EAAMG,QACX9G,UAAW,qBAAcA,EAAd,MAA8BwJ,EAAI,GAAKD,SAKxD,SAASE,EAAc9J,GAAQ,IAE3B2J,EAOE3J,EAPF2J,OACA5C,EAME/G,EANF+G,MACA6C,EAKE5J,EALF4J,eACAvJ,EAIEL,EAJFK,UACA0J,EAGE/J,EAHF+J,IACAC,EAEEhK,EAFFgK,YACAxB,EACExI,EADFwI,QAEF,OAAOmB,EAAOrD,KAAI,SAACU,EAAO6C,GACxB,OAAIE,EAEA,kBAAC3B,EAAD,cACM,CAAErB,SADR,CAEEI,QAASH,EAAMG,QACfX,IAAKQ,EAAMG,QACXrB,MAAOiE,EAAI/C,EAAMG,SACjB9G,UAAS,UAAKwJ,EAAI,GAAKD,EAAd,YAAgCvJ,GACzC4G,WAAYF,EAAMG,SAASF,EAAMG,SACjCoB,WAAYyB,EAAYhD,EAAMG,SAC9BqB,QAASA,KAKX,wBACEhC,IAAKQ,EAAMG,QACX9G,UAAS,UAAKwJ,EAAI,GAAKD,EAAd,eAMnB,SAASK,EAAUjK,GAAQ,IACjB+G,EAAqD/G,EAArD+G,MAAOC,EAA8ChH,EAA9CgH,MAAO5D,EAAuCpD,EAAvCoD,KAAMkF,EAAiCtI,EAAjCsI,KAAMjI,EAA2BL,EAA3BK,UAAW2J,EAAgBhK,EAAhBgK,YAC7C,OACE,oCACE,kBAAClD,EAAa,CAAEC,QAAOC,UACtB5D,EAAKkD,KAAI,SAAC4D,EAAK1D,GAAN,OACR,kBAAC4B,EAAD,cACM,CAAE5B,MAAK8B,OAAMjI,YAAW0G,SAD9B,CAEEjB,MAAOoE,EAAIlD,EAAMG,SACjBF,WAAYF,EAAMG,SAASF,EAAMG,SACjCoB,WAAYyB,EAAYhD,EAAMG,SAC9BqB,QAAS0B,EACT/C,QAASH,EAAMG,eAOzB,SAASgD,EAAQnK,GAAQ,IACf+G,EAAkD/G,EAAlD+G,MAAOqD,EAA2CpK,EAA3CoK,KAAMC,EAAqCrK,EAArCqK,KAAM3G,EAA+B1D,EAA/B0D,KAAM4G,EAAyBtK,EAAzBsK,QAASN,EAAgBhK,EAAhBgK,YAC1C,OACE,yBAAK3J,UAAU,WACb,kBAACqE,EAAD,CAASC,QAAS2F,IAClB,yBAAKjK,UAAU,YACb,+BACE,+BAEG0G,EAAMwD,YAAYjE,KAAI,SAACU,GACtB,OACE,wBAAIR,IAAKQ,EAAMG,SACb,kBAACT,EAAD,CAAQC,OAAQI,EAAMyD,YAAYvE,OAAS,IAC3C,kBAACgE,EAAD,cACM,CAAElD,QAAOC,QAAOgD,eADtB,CAEE1B,KAAMvB,EAAM0D,YAAYxE,OACxB7C,KAAMgH,EACN/J,UAAWiK,GAAW,cAO9B,4BACE,kBAAC5D,EAAD,CAAQC,OAAQ,EAAII,EAAMyD,YAAYvE,SACtC,kBAACyD,EAAD,cACM,CAAE3C,SADR,CAEE4C,OAAQ5C,EAAMyD,YACdnK,UAAU,YAEX+J,EAAK9D,KAAI,SAACO,EAAGL,GAAJ,OACR,kBAACkD,EAAD,cACM,CAAElD,MAAKO,SADb,CAEE4C,OAAQ5C,EAAM0D,YACdb,eAAe,aACfvJ,UAAU,iBAOlB,2BAAOA,UAAWiK,GAAW,QAC1BD,EAAK/D,KAAI,SAACyD,EAAKW,GAAN,OACR,wBAAIlE,IAAKkE,GACP,kBAAChE,EAAD,CAAQC,OAAQ,EAAII,EAAMyD,YAAYvE,SACtC,kBAAC6D,EAAD,cACM,CAAE/C,QAAOgD,MAAKC,eADpB,CAEEL,OAAQ5C,EAAMyD,YACdhC,QAASuB,KAEVrG,EAAK4C,KAAI,SAACqE,EAAOnE,GAAR,OACR,kBAACsD,EAAD,cACM,CAAEtD,MAAKO,QAAOiD,eADpB,CAEEL,OAAQ5C,EAAM0D,YACdV,IAAKY,EAAMD,GACXlC,QAAO,eAAOuB,EAAP,GAAeK,EAAK5D,IAC3BoD,eAAe,2B,oBClP7BgB,EAAQ,CACZP,KAAM,CAAC,IACPD,KAAM,CAAC,IACP1G,KAAM,CAAC,CAAC,KACRuC,OAAQ,EACR4E,aAAc,GACdb,YAAa,IAGf,SAASc,EAAiB/D,GACxB,MAAO,CACLgE,MAAOhE,EAAMgE,MACbpB,OAAQ5C,EAAM4C,OACXrD,KACC,SAAC0E,GAAD,OACGA,EAAEvD,QAAU,IAAM,IACnBuD,EAAE7D,QACF,CAAEc,IAAI,IAAD,OAAM+C,EAAEhD,UAAYD,IAAI,IAAD,OAAMiD,EAAEhD,UAAYE,KAAM,IAAK8C,EAAE7C,SAEhE8C,KAAK,KACRlE,MAAOA,EAAMmE,QACV5E,KAAI,SAAC0E,GAAD,gBAAUA,EAAE7D,QAAZ,aAAwB6D,EAAEG,OAA1B,YAAoCH,EAAElF,UAC1CmF,KAAK,KACRG,MAAOrE,EAAMqE,OAIjB,SAASC,EAAkBtE,EAAOuE,GAAQ,IAAD,EACYR,EAAiB/D,GAA5DgE,EAD+B,EAC/BA,MAAOpB,EADwB,EACxBA,OAAe4B,EADS,EAChBxE,MAAkBqE,EADF,EACEA,MACzC,MAAM,SAAN,OAAgBL,EAAhB,YAAyBpB,EAAzB,YAAmC2B,EAAnC,YAA4CC,EAA5C,kBAA+DH,GAGjE,SAASI,EAAeC,EAAS1E,EAAOuE,GACtC,IAAMI,EAASL,EAAkBtE,EAAOuE,GACxC,MAAM,GAAN,OAAU1K,OAAOiC,SAAS8I,QAA1B,OAAmCF,GAAnC,OAA6CC,G,IAGzCE,E,WACJ,WAAYC,EAAQ9E,EAAO+E,GAAW,oBACpCC,KAAKF,OAASA,EACdE,KAAKhF,MAAQA,EACbgF,KAAKD,SAAWA,E,qDAGT3E,GACP,IADgB,EACV6E,EAAO7E,EAAQ8E,MAAM,MACvBlB,EAAQgB,KAAKhF,MAAMgE,MAFP,cAGIiB,EAAKE,MAAM,GAAI,IAHnB,IAGhB,2BAAuC,CAAC,IAA7BlF,EAA4B,QACrC+D,EAAQgB,KAAKF,OAAOM,eAAepB,GAAOpB,OAAO3C,GAAO+D,OAJ1C,8BAMhB,OAAOgB,KAAKF,OAAOM,eAAepB,GAAOpB,OAAOqC,EAAKE,OAAO,M,8BAGtDlF,GACN,OAAO+E,KAAKF,OAAOO,MAAMpF,EAAM5F,Q,qCAGlB2J,GACb,OAAOgB,KAAKF,OAAOM,eAAepB,K,4CAGd/D,EAAO5F,EAAM+J,GACjC,IAAMkB,EAAcjL,EAAKkL,QAAQnB,GAAQ/J,KACzC,OAAIiL,EAAYE,SAAS,UAAkBzD,OAAO9B,EAAMwF,QAAQ,IACpD1D,OAAOiD,KAAKF,OAAOO,MAAMC,GAAaI,gB,qCAGrCzF,EAAO2C,GACpB,OAAOA,EAAO+C,WAAU,SAAC1B,GAAD,OAAOA,EAAE7D,UAAYH,EAAMG,a,+BAG5CA,EAASgB,GAChB,IAAMwE,EAAYZ,KAAKhF,MAAM4C,OAAO3D,QAAO,SAACgF,GAAD,OAAOA,EAAE7D,UAAYA,KAC1DyF,EAAaD,EAChBrG,KAAI,SAAC0E,GAAD,OAAOA,EAAEhD,YACbhC,QAAO,SAACgF,GAAD,OAAa,OAANA,KACX6B,EAAcD,EAAW3G,OAAS6G,KAAKC,IAAL,MAAAD,KAAI,YAAQF,IAAc,EAAI,EACtED,EAAUK,KAAK,CACb7F,QAASA,EACTgB,KAAMA,EACNH,SAAUG,EAAO0E,EAAc,KAC/BpF,SAAS,IAEXsE,KAAKD,SAAS,CAAEnC,OAAQgD,M,kCAGd3F,GACV,IAAMC,EAAa8E,KAAK7E,SAASF,EAAMG,SACvC4E,KAAKD,SACH,CACEnC,OAAQoC,KAAKhF,MAAM4C,OAAO3D,QAAO,SAACgF,GAAD,OAAOA,EAAE7D,UAAYH,EAAMG,YAE9DF,EAAWM,Y,gCAILP,EAAOvB,GACf,IAAMwB,EAAa8E,KAAK7E,SAASF,EAAMG,SAGjCoD,EAAYwB,KAAKxB,YAAY2B,QAC7B1B,EAAYuB,KAAKvB,YAAY0B,QAC7BzB,EAAYsB,KAAKtB,YAAYyB,QAG/BvC,EAAS,KACMA,EAAf3C,EAAMS,QAAkB8C,EACnBtD,EAAWM,WAAagD,EAAUtE,OAAiBuE,EAC9CC,EAGd,IAAMwC,EAAQlB,KAAKmB,eAAelG,EAAO2C,GACnCwD,EAAWF,GAASxH,GAAQ,EAAI,GAIlC,GAAK0H,GAAYA,EAAWxD,EAAO1D,SACrC0D,EAAOyD,OAAOH,EAAO,GACrBtD,EAAOyD,OAAOD,EAAU,EAAGnG,GAC3B+E,KAAKD,SACH,CAAEnC,OAAQ,GAAG0D,OAAO7C,EAAWD,EAAWE,KAC1C,M,iCAKKzD,GACT,IAAMiG,EAAQlB,KAAKmB,eAAelG,EAAO+E,KAAKhF,MAAM4C,QAC9C2D,EAAU,CAAErF,IAAK,MAAOF,IAAK,KAAMG,KAAM,OAAQlB,EAAMmB,MACzDwE,EAAYZ,KAAKhF,MAAM4C,OAAOuC,QAE9BlF,EAAMmB,OAERwE,EAAYA,EAAUrG,KAAI,SAAC0E,GAAD,sBACrBA,EADqB,CAExBhD,SACgB,MAAdgD,EAAEhD,UAAoBgD,EAAEhD,SAAWhB,EAAMgB,SACrCgD,EAAEhD,SAAW,EACbgD,EAAEhD,eAIRsF,GAEFX,EAAYA,EAAUrG,KAAI,SAAC0E,GAAD,sBACrBA,EADqB,CAExBhD,SAAwB,MAAdgD,EAAEhD,SAAmBgD,EAAEhD,SAAW,EAAIgD,EAAEhD,eAE1CiF,GAAV,eAAwBjG,EAAxB,CAA+BmB,KAAMmF,EAAStF,SAAU,IAGxD2E,EAAUM,GAAV,eAAwBjG,EAAxB,CAA+BmB,KAAM,KAAMH,SAAU,OAGvD+D,KAAKD,SAAS,CACZnC,OAAQgD,M,kCAIA3F,GACV,IAAMiG,EAAQlB,KAAKmB,eAAelG,EAAO+E,KAAKhF,MAAM4C,QAChDgD,EAAYZ,KAAKhF,MAAM4C,OAAOuC,QAClCS,EAAUM,GAAOxF,SAAWkF,EAAUM,GAAOxF,QAC7CsE,KAAKD,SAAS,CACZnC,OAAQgD,M,gCAIFxF,GACR,IAAMH,EAAQ+E,KAAK7E,SAASC,GACtB/F,EAAO2K,KAAK3E,QAAQJ,GACpBuG,EAAaxB,KAAKhF,MAAMmE,QAAQgB,QACtCqB,EAAWP,KAAK,CACd7F,QAASA,EACTgE,OAAQ/J,EAAKuG,cACb7B,MAAOiG,KAAKyB,sBAAsBxG,EAAO5F,EAAMA,EAAKuG,iBAEtDoE,KAAKD,SAAS,CAAEZ,QAASqC,M,qCAGZpG,EAASrB,GACtB,IAAMyH,EAAaxB,KAAKhF,MAAMmE,QAAQgB,QACtCqB,EAAWP,KAAK,CACd7F,QAASA,EACTgE,OAAQ,SACRrF,MAAOgD,OAAOhD,KAEhBiG,KAAKD,SAAS,CAAEZ,QAASqC,M,gCAGjBE,GAAS,IAAD,OACVF,EAAaxB,KAAKhF,MAAMmE,QAAQmC,OACpCtB,KAAKhF,MAAM4C,OACR3D,QAAO,SAACgB,GAAD,OAAW,EAAKE,SAASF,EAAMG,SAASI,YAC/CvB,QAAO,SAACgB,GAAD,OAAWyG,EAAO3I,eAAekC,EAAMG,YAC9Cb,KAAI,SAACU,GACJ,MAAO,CACLG,QAASH,EAAMG,QACfgE,OAAQ,SACRrF,MAAOgD,OAAO2E,EAAOzG,EAAMG,eAInC4E,KAAKD,SAAS,CAAEZ,QAASqC,M,mCAGdN,GACX,IAAMM,EAAaxB,KAAKhF,MAAMmE,QAAQgB,QACtCqB,EAAWH,OAAOH,EAAO,GACzBlB,KAAKD,SAAS,CAAEZ,QAASqC,M,qCAGZN,EAAOnH,GACpB,IAAMyH,EAAaxB,KAAKhF,MAAMmE,QAAQgB,QACtCqB,EAAWN,GAAX,eAAyBM,EAAWN,GAApC,CAA4CnH,MAAOA,IACnDiG,KAAKD,SAAS,CAAEZ,QAASqC,M,sCAGXN,EAAO9B,GACrB,IAAMoC,EAAaxB,KAAKhF,MAAMmE,QAAQgB,QAChClG,EAASuH,EAAWN,GACpBjG,EAAQ+E,KAAK7E,SAASqG,EAAWN,GAAO9F,SACxC/F,EAAO2K,KAAK3E,QAAQJ,GACtB5F,EAAKkL,QAAQtG,EAAOmF,QAAQ/J,OAASA,EAAKkL,QAAQnB,GAAQ/J,OAC5D4E,EAAOF,MAAQiG,KAAKyB,sBAAsBxG,EAAO5F,EAAM+J,IAEzDnF,EAAOmF,OAASA,EAChBY,KAAKD,SAAS,CAAEZ,QAASqC,M,+BAGlBnC,GACPA,EAAQsC,OAAOtC,GACfW,KAAKD,SAAS,CAAEV,MAAOA,EAAQ,EAAIA,EAAQ,M,+BAGpCL,GACPgB,KAAKD,SAAL,aACEf,MAAOA,EACPpB,OAAQ,GACRuB,QAASa,KAAKF,OAAOM,eAAepB,GAAO4C,eAC3CvC,MAAOW,KAAKF,OAAO+B,iBAChBhD,M,qCAIQU,GACb,OAAOE,EAAeO,KAAKF,OAAOJ,QAASM,KAAKhF,MAAOuE,K,kCAIvD,OAAOS,KAAKhF,MAAM4C,OAAO3D,QAAO,SAACgF,GAAD,OAAOA,EAAEvD,a,kCAG9B,IAAD,OACV,OAAIsE,KAAKxB,YAAYtE,OACZ8F,KAAKhF,MAAM4C,OAAO3D,QACvB,SAACgF,GAAD,OAAQA,EAAEvD,SAAW,EAAKP,SAAS8D,EAAE7D,SAASI,YAGzCwE,KAAKhF,MAAM4C,S,kCAIT,IAAD,OACV,OAAIoC,KAAKxB,YAAYtE,OACZ8F,KAAKhF,MAAM4C,OAAO3D,QACvB,SAACgF,GAAD,OAAQ,EAAK9D,SAAS8D,EAAE7D,SAASI,YAG5B,K,oCAIGJ,GACZ,IADqB,EACf6E,EAAO7E,EAAQ8E,MAAM,MACrB4B,EAAa,GACf9C,EAAQgB,KAAKhF,MAAMgE,MACnB/D,EAAQ,KAJS,cAKFgF,GALE,IAKrB,2BAAyB,CAAC,IAAf8B,EAAc,QAEvB/C,GADA/D,EAAQ+E,KAAKF,OAAOM,eAAepB,GAAOpB,OAAOmE,IACnC/C,MACd8C,EAAWb,KAAKhG,EAAM+G,aARH,8BAUrB,OAAOF,EAAW5C,KAAK,gB,KCpR3B,SAAS+C,EAAYhO,GAAQ,IACnBmL,EAAmCnL,EAAnCmL,OAAQ8C,EAA2BjO,EAA3BiO,SAAUnI,EAAiB9F,EAAjB8F,MAAOkB,EAAUhH,EAAVgH,MAC3BkH,EAAgB,SAACnK,GAAD,OAAOkK,EAASlK,EAAE9C,OAAO6E,QAC/C,GAA0B,YAAtB9F,EAAMmL,OAAO/J,KACf,OACE,yCAAY,CAAE0E,SAAd,CAAuBmI,SAAUC,EAAe7N,UAAU,gBACxD,4BAAQyF,OAAO,GAAf,QACA,4BAAQA,OAAO,GAAf,UAGD,GAA0B,WAAtB9F,EAAMmL,OAAO/J,KACpB,OACE,yCAAY,CAAE0E,SAAd,CAAuBmI,SAAUC,EAAe7N,UAAU,gBACxD,4BAAQyF,MAAO,UAAf,UACA,4BAAQA,MAAO,WAAf,YAGD,GAAIqF,EAAO/J,KAAKmL,SAAS,UAC5B,OACE,yCAAY,CAAEzG,SAAd,CAAuBmI,SAAUC,EAAe7N,UAAU,gBACvD2G,EAAMwF,QAAQlG,KAAI,SAAC6H,GAAD,OACjB,4BAAQ3H,IAAK2H,EAAQrI,MAAOqI,GACzBA,OAKN,GAAoB,WAAhBhD,EAAO/J,KACd,OACE,wCACM,CAAE0E,SADR,CAEEmI,SAAUC,EACV7N,UAAU,cACVe,KAAK,SACLgN,KAAK,OAGN,GAAoB,cAAhBjD,EAAO/J,KAAsB,CACpC,IAAMiN,EAAQvI,EAAMmG,MAAM,UAC1B,OACE,oCACE,2BACEnG,MAAOuI,EAAM,GACbJ,SAAU,SAAClK,GAAD,OAAOkK,EAAS,GAAD,OAAIlK,EAAE9C,OAAO6E,MAAb,YAAsBuI,EAAM,MACrDhO,UAAU,mBACVe,KAAK,SAEP,2BACE0E,MAAOuI,EAAM,GACbJ,SAAU,SAAClK,GAAD,OAAOkK,EAAS,GAAD,OAAII,EAAM,GAAV,YAAgBtK,EAAE9C,OAAO6E,SAClDzF,UAAU,mBACVe,KAAK,UAKX,OACE,wCACM,CAAE0E,SADR,CAEEmI,SAAUC,EACV7N,UAAU,cACVe,KAAK,UAKb,SAASkN,EAAOtO,GAAQ,IACdmH,EAAuDnH,EAAvDmH,QAAS8F,EAA8CjN,EAA9CiN,MAAO9B,EAAuCnL,EAAvCmL,OAAQpE,EAA+B/G,EAA/B+G,MAAOjB,EAAwB9F,EAAxB8F,MAAOyI,EAAiBvO,EAAjBuO,aACxCvH,EAAQD,EAAMG,SAASC,GACvB/F,EAAO2F,EAAMK,QAAQJ,GAC3B,OACE,4BACE,4BACE,kBAAC3F,EAAD,CAAOf,QAAS,kBAAMyG,EAAMyH,aAAavB,KAAzC,SAA+D,IAC/D,kBAAC7M,EAAD,CAAOE,QAAS,kBAAMyG,EAAM0H,SAAStH,EAASH,EAAM0H,eACjD3H,EAAMe,cAAcX,IACd,KAEX,4BACE,4BACE9G,UAAU,SACVyF,MAAOqF,EACP8C,SAAU,SAAClK,GAAD,OAAOgD,EAAM4H,gBAAgB1B,EAAOlJ,EAAE9C,OAAO6E,SAEtD1E,EAAKwN,cAActI,KAAI,SAACuI,GAAD,OACtB,4BAAQrI,IAAKqI,EAAY/I,MAAO+I,GAC7BA,EAAWC,QAAQ,KAAM,WAKlC,iCACA,4BACE,kBAACd,EAAD,cACM,CAAElI,QAAOkB,SADf,CAEEiH,SAAU,SAACc,GAAD,OAAShI,EAAMiI,eAAe/B,EAAO8B,IAC/C5D,OAAQ/J,EAAKkL,QAAQnB,MAEtBoD,GAAgB,uBAAGlO,UAAU,SAASkO,KAM/C,SAASU,EAAQjP,GAAQ,IACf+G,EAAwB/G,EAAxB+G,MAAO8D,EAAiB7K,EAAjB6K,aACf,OACE,0BAAMxK,UAAU,WACd,2BAAOA,UAAU,QACf,+BACGL,EAAMkL,QAAQ5E,KAAI,SAACN,EAAQiH,GAAT,OACjB,kBAACqB,EAAD,cACM,CAAEvH,QAAOkG,SACTjH,EAFN,CAGEQ,IAAKyG,EACLsB,aAAc1D,EAAaoC,YASzC,SAASiC,GAAMlP,GAAQ,IACb+G,EAA4B/G,EAA5B+G,MAAOiF,EAAqBhM,EAArBgM,KAAM/E,EAAejH,EAAfiH,WACf7F,EAAO2F,EAAMK,QAAQH,GAFP,EAGU9D,oBAAS,GAHnB,mBAGbgM,EAHa,KAGJC,EAHI,KAIpB,OACE,oCACE,4BACE,4BACGnI,EAAWS,UAAYtG,EAAKuG,eAC3B,kBAACtG,EAAD,CAAOf,QAAS,kBAAMyG,EAAMa,UAAUoE,EAAKf,KAAK,SAAhD,eAKJ,4BACGhE,EAAW8D,OACV,kBAAC1J,EAAD,CACEhB,UAAU,aACVC,QAAS,kBAAM8O,GAAW,SAACD,GAAD,OAAcA,OAEvCA,EAAU,SAAW,QAI5B,4BACGlI,EAAW7F,KACV,kBAAChB,EAAD,CACEE,QAAS,kBACPyG,EAAM0H,SAASzC,EAAKf,KAAK,MAAOhE,EAAWyH,eAG5CzH,EAAW8G,YAGd9G,EAAW8G,aAIhBoB,GACC,4BACE,6BACA,wBAAIlG,QAAQ,KACV,kBAACoG,GAAD,cAAe,CAAEtI,QAAOiF,QAAxB,CAAgCjB,MAAO9D,EAAW8D,YAQ9D,SAASsE,GAAUrP,GAAQ,IACjB+G,EAAuB/G,EAAvB+G,MAAOgE,EAAgB/K,EAAhB+K,MAAOiB,EAAShM,EAATgM,KAChBsD,EAAcvI,EAAMwI,eAAexE,GACzC,OACE,+BACE,+BACGuE,EAAYE,aAAalJ,KAAI,SAACmJ,GAC7B,IAAMxI,EAAaqI,EAAY3F,OAAO8F,GACtC,OACE,kBAACP,GAAD,eACE1I,IAAKiJ,GACD,CAAE1I,QAAOE,cAFf,CAGE+E,KAAMA,EAAKqB,OAAO,CAACoC,YASjC,SAASC,GAAc1P,GAAQ,IACrB+G,EAA+B/G,EAA/B+G,MAAO4I,EAAwB3P,EAAxB2P,aAAc5E,EAAU/K,EAAV+K,MAC7B,OACE,4BACE1K,UAAU,gBACV4N,SAAU,SAAClK,GAAD,OAAOgD,EAAM6I,SAAS7L,EAAE9C,OAAO6E,QACzCA,MAAOiF,GAEN4E,EAAarJ,KAAI,SAACyE,GAAD,OAChB,4BAAQvE,IAAKuE,GAAQA,OAM7B,SAAS8E,GAAK7P,GACZ,OACE,kBAAC,IAAD,CAAMsE,GAAG,IAAIjE,UAAU,QACrB,qCACA,0BAAMA,UAAU,WAAhB,IAA4BX,IAKlC,SAASoQ,GAAU9P,GAAQ,IAgBrB+P,EAdFhJ,EAYE/G,EAZF+G,MACAsD,EAWErK,EAXFqK,KACAD,EAUEpK,EAVFoK,KACA1G,EASE1D,EATF0D,KACAuC,EAQEjG,EARFiG,OACA0J,EAOE3P,EAPF2P,aACA5E,EAME/K,EANF+K,MACAG,EAKElL,EALFkL,QACAL,EAIE7K,EAJF6K,aACAY,EAGEzL,EAHFyL,QACAnB,EAEEtK,EAFFsK,QACAN,EACEhK,EADFgK,YAUF,OALE+F,EADEhJ,EAAMyD,YAAYvE,QAAUc,EAAMwD,YAAYtE,OAE9C,kBAACkE,EAAY,CAAEpD,QAAOsD,OAAMD,OAAM1G,OAAM4G,UAASN,gBAEtC,kDAGb,oCACE,kBAAC0F,GAAkB,CAAE3I,QAAO4I,eAAc5E,UAC1C,kBAACkE,EAAY,CAAElI,QAAOmE,UAASL,iBAC/B,2BACE,0BAAMxK,UAAW4F,GAAUc,EAAMA,MAAMqE,MAAQ,QAAU,IAAzD,SACS,IACP,2BACE/K,UAAU,WACVe,KAAK,SACL0E,MAAOiB,EAAMA,MAAMqE,MACnB6C,SAAU,SAAC1N,GACTwG,EAAMiJ,SAASzP,EAAMU,OAAO6E,QAE9BmK,IAAI,MACH,IAVL,aAWahK,EAXb,aAW+B,KAE/B,uBAAGiK,KAAMnJ,EAAMoJ,eAAe,QAA9B,mBAdF,KAc8D,IAC5D,uBAAGD,KAAMnJ,EAAMoJ,eAAe,SAA9B,gBAfF,KAe4D,IAC1D,kBAACnM,EAAD,CACEzC,KAAK,OACL0C,OAAM,UAAKwH,EAAL,cACNrI,KAAM0H,EAAiB/D,EAAMA,OAC7B7C,YAAa,SAACkM,GAAD,uBAAoBA,EAAKC,GAAzB,aAGjB,yBAAKhQ,UAAU,aACb,yBAAKA,UAAU,cACb,kBAACgP,GAAD,cAAe,CAAEtI,QAAOgE,SAAxB,CAAiCiB,KAAM,OAExC+D,EACD,gCAMR,SAASO,GAActQ,GAAQ,IACrBuQ,EAA2BvQ,EAA3BuQ,cAAe9E,EAAYzL,EAAZyL,QACf4E,EAAOG,cAAPH,GACF3O,EAAG,UAAM+J,EAAN,qBAA0B4E,EAA1B,KAHmB,EAIJnN,EAAQxB,GAJJ,mBAIrB0O,EAJqB,KAIfK,EAJe,KAK5B,OAAKL,EAEH,yBAAK/P,UAAU,iBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,cACA,kBAAC,IAAD,CAAMiE,GAAI8L,EAAKM,MAAf,SAEF,8BACE,2BACEtP,KAAK,OACL0E,MAAOsK,EAAK7O,KACZ0M,SAAU,SAAC1N,GACTkQ,EAAQ,CAAElP,KAAMhB,EAAMU,OAAO6E,SAE/BzF,UAAU,gBACVsQ,YAAY,iBAEd,+BACE,+BACE,4BACE,sCACA,4BAAKP,EAAKrF,QAEZ,4BACE,uCACA,4BAAKqF,EAAKzG,OAAOmF,QAAQ,KAAM,aAEjC,4BACE,wCACA,4BAAKsB,EAAKrJ,MAAM+H,QAAQ,KAAM,aAEhC,4BACE,sCACA,wBAAIzO,UAAU,kBACZ,2BACEA,UAAU,WACVe,KAAK,SACL0E,MAAOsK,EAAKhF,MACZ6C,SAAU,SAAC1N,GACTkQ,EAAQ,CAAErF,MAAO7K,EAAMU,OAAO6E,aAKtC,4BACE,6CACA,4BAAKsK,EAAKQ,gBAIhB,8BACE9K,MAAOsK,EAAKS,YACZ5C,SAAU,SAAC1N,GACTkQ,EAAQ,CAAEI,YAAatQ,EAAMU,OAAO6E,SAEtC6K,YAAY,wBAEbJ,GACC,+BACE,+BACE,4BACE,0CACA,4BACE,2BACEnP,KAAK,WACL0P,QAASV,EAAKW,OACd9C,SAAU,SAAC1N,GACTkQ,EAAQ,CAAEM,OAAQxQ,EAAMU,OAAO6P,eAKvC,4BACE,4CACA,4BAAKV,EAAKW,QAAU,kBAAChR,EAAD,CAAUE,KAAMmQ,EAAKY,eAE3C,4BACE,8CACA,4BACGZ,EAAKW,QAAU,kBAAChR,EAAD,CAAUE,KAAMmQ,EAAKa,2BAOjD,yBAAK5Q,UAAU,oBACb,kBAACkE,EAAD,CAAQN,OAAQvC,EAAKwC,YAAY,MACjC,kBAAC,IAAD,CAAMI,GAAG,KAAT,UAxFY,GA8FpB,SAAS4M,GAAclR,GAAQ,IACrByL,EAAYzL,EAAZyL,QADoB,EAEPvI,EAAQ,GAAD,OAAIuI,EAAJ,eAArB0F,EAFqB,oBAG5B,OAAKA,EAEH,6BACE,2CACA,6BACGA,EAAW7K,KAAI,SAAC8J,EAAMnD,GAAP,OACd,yBAAKzG,IAAKyG,GACR,2BACE,kBAAC,IAAD,CAAM5M,UAAU,OAAOiE,GAAI8L,EAAKM,MAC7BN,EAAK7O,KADR,MACiB6O,EAAKrF,OACd,IAHV,IAIG,kBAAC,IAAD,CAAMzG,GAAE,iBAAY8L,EAAKC,GAAjB,UAAR,QAJH,KAMA,2BAAID,EAAKS,mBAbK,GAqB1B,SAASO,GAASpR,GAAQ,IAChB2P,EAA2D3P,EAA3D2P,aAAclE,EAA6CzL,EAA7CyL,QAASmC,EAAoC5N,EAApC4N,gBAAiBzB,EAAmBnM,EAAnBmM,eAChD,OACE,yBAAK9L,UAAU,SACb,6BACE,sCACA,6BACGsP,EAAarJ,KAAI,SAACyE,GAAD,OAChB,yBAAKvE,IAAKuE,GACR,kBAAC,IAAD,CACEzG,GAAI+G,EACF,CACEN,MAAOA,EACPpB,OAAQ,GACRuB,QAASiB,EAAepB,GAAO4C,eAC/BvC,MAAOwC,GAET,QAEFvN,UAAU,QAET0K,SAMX,kBAACmG,GAAkB,CAAEzF,aCra3B,IAAMpM,GAASC,EAAQ,IAMvB,SAAS+R,GAASrR,GAAQ,IAChB6L,EAAW7L,EAAX6L,OADe,EAEK2E,cAApBzF,EAFe,EAEfA,MAAOuG,EAFQ,EAERA,SAFQ,EAGKnO,mBAPd,cAIS,mBAGhBZ,EAHgB,KAGRgP,EAHQ,OAIGpO,mBAAS,aACjC4H,MAAO,GACPpB,OAAQ,GACRuB,QAAS,GACTE,MAAOS,EAAO+B,iBACXhD,IATkB,mBAIhB7D,EAJgB,KAIT+E,EAJS,KAWjB0F,EAAWC,cAAcC,OAEzBC,EAAc,SAAC5N,GACJ,eAAXA,EAAExC,OACJgQ,EAjBQ,SAkBR5O,QAAQC,IAAImB,GACZ6N,IAAwB7N,KAItB8N,EAAe,SAACrN,GAIpB,OAHA+M,EAzBY,cA4BLxO,EAFKyI,EAAeK,EAAOJ,QAASjH,EAAO,SAEhCvC,MAAK,SAACC,GAWtB,OAVA4J,GAAS,SAAC/E,GAAD,sBACJA,EADI,CAEPrD,KAAMxB,EAASwB,KACf0G,KAAMlI,EAASkI,KACfC,KAAMnI,EAASmI,KACfpE,OAAQ/D,EAAS+D,OACjB+D,YAAa9H,EAAS8H,YACtBa,aAAc3I,EAAS2I,kBAEzB0G,EAAUhS,EAtCA,kBAsC4BE,GAC/ByC,MAIXoB,qBAAU,WACR,IAAMwO,EAAW,SAAC/N,GAChB+H,EAAS/H,EAAES,OACXqN,EAAa9N,EAAES,OAAOV,MAAM6N,IA0B9B,OAnBA5O,EAJS,UAAM8I,EAAOJ,QAAb,iBAA6BV,EAA7B,YACPuG,GAAY,GADL,iBAEAE,IAEEvP,MAAK,SAACC,GACf,IAAM6P,EAAQ,aACZhH,MAAO7I,EAAS6I,MAChBpB,OAAQzH,EAASyH,OACjBuB,QAAShJ,EAASgJ,QAClBE,MAAOlJ,EAASkJ,OACbR,GAELkB,EAASiG,GACTR,EA9DU,cA+DV3Q,OAAOoR,QAAQC,aACbF,EACA,KACAvG,EAAeK,EAAOJ,QAASsG,EAAU,SAE3CnR,OAAO0E,iBAAiB,WAAYwM,GACpCD,EAAaE,GAAUjO,MAAM6N,MAGxB,WACL/Q,OAAO2E,oBAAoB,WAAYuM,MAGxC,IAiCH,GA9Gc,eA8GVvP,EAAoB,MAAO,GAC/B,IAAM2P,EAAW,IAAItG,EAAMC,EAAQ9E,GAhCT,SAACoL,GAAgC,IAAnBrP,IAAkB,yDAClDsP,EAAQ,eAAQrL,EAAR,GAAkBoL,GAEhCrG,EAASsG,GAET,IAAMC,EAAO,aACXtH,MAAOqH,EAASrH,MAChBpB,OAAQyI,EAASzI,OACjBuB,QAASkH,EAASlH,QAClBE,MAAOgH,EAAShH,OACbR,GAELhK,OAAOoR,QAAQM,UACbD,EACA,KACA7G,EAAeK,EAAOJ,QAAS2G,EAAU,SAGtCtP,GAEL+O,EAAaO,GACVnQ,MAAK,SAACC,GACL,IAAME,EAAG,eAAQF,EAAR,GAAqB0I,GAC9BxI,EAAI8I,QAAUqH,iBAAOnQ,EAAI8I,QAAS,CAAC,YACnC,IAAMsH,EAAG,eAAQH,GACjBG,EAAItH,QAAUqH,iBAAOC,EAAItH,QAAS,CAAC,YACnC7L,GAAOoT,gBAAgBrQ,EAAKoQ,MAE7B1O,MAAM6N,MAKX,OACE,kBAAC7B,GAAD,eACExF,QAAS/H,EACTwE,MAAOmL,EACPvC,aAAc9D,EAAO8D,aACrBlE,QAASI,EAAOJ,SACZ1E,IA6BK2L,OAxBf,SAAa1S,GAAQ,IACXyL,EAA2BzL,EAA3ByL,QAAS8E,EAAkBvQ,EAAlBuQ,cACjB,OACE,kBAAC,IAAD,CAAeoC,SAAUlH,GACvB,kBAACvG,EAAD,KACE,kBAAC2K,GAAD,MACA,yBAAK+C,GAAG,QACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5G,KAAK,iCACV,kBAACqF,GAAD,CAAUxF,OAAQ7L,KAEpB,kBAAC,IAAD,CAAOgM,KAAK,mBACV,kBAACsE,GAAkB,CAAE7E,UAAS8E,mBAEhC,kBAAC,IAAD,CAAOvE,KAAK,KACV,kBAACoF,GAAapR,SCtJtB6L,GAASlI,KAAKkP,MAChBlT,SAASC,eAAe,kBAAkBC,aAExCH,GAAUC,SAASC,eAAe,mBAAmBC,YAAYC,OAEnE+L,GAAOiH,WACPlB,IAAY,CACRmB,IAAKlH,GAAOiH,UACZE,QAAStT,GACTuT,kBAAkB,EAClBC,eAAgB,MAIxBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAQxH,KAEblM,SAASC,eAAe,W","file":"static/js/main.aca655b1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"Link \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={\"sLink material-icons \" + (className || \"\")}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nfunction is(x: any, y: any) {\n    return (\n        (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n    );\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n    if (is(objA, objB)) {\n        return true;\n    }\n\n    if (\n        typeof objA !== \"object\" ||\n        objA === null ||\n        typeof objB !== \"object\" ||\n        objB === null\n    ) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        console.log(\"different keys\", keysA, keysB);\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (\n            !hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])\n        ) {\n            console.log(\n                \"different key\",\n                keysA[i],\n                objA[keysA[i]],\n                objB[keysA[i]]\n            );\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n    shallowEqual,\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { TLink } from \"./Util\";\n\nconst ShowContextMenu = React.createContext();\n\nfunction ContextMenu(props) {\n    const node = useRef();\n    const [state, setState] = useState();\n\n    function handleClick(e) {\n        if (node.current && node.current.contains(e.target)) return;\n        setState(null);\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClick);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const divStyle = state\n        ? {\n              left: state.x,\n              top: state.y,\n          }\n        : {};\n\n    function showContextMenu(event, entries) {\n        entries = entries.filter((x) => x);\n        if (entries.length) {\n            setState({\n                entries: entries,\n                x: event.clientX,\n                y: event.clientY,\n            });\n            event.preventDefault();\n        }\n    }\n\n    return (\n        <ShowContextMenu.Provider value={showContextMenu}>\n            {props.children}\n            {state && (\n                <div ref={node} className=\"ContextMenu\" style={divStyle}>\n                    {state.entries.map((entry) => (\n                        <p key={entry.name}>\n                            <TLink\n                                onClick={() => {\n                                    entry.fn();\n                                    setState();\n                                }}\n                            >\n                                {entry.name}\n                            </TLink>\n                        </p>\n                    ))}\n                </div>\n            )}\n        </ShowContextMenu.Provider>\n    );\n}\n\nexport { ContextMenu, ShowContextMenu };\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay } from \"./Util\";\nimport { ShowContextMenu } from \"./ContextMenu\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const { query, field, className } = props;\n  const modelField = query.getField(field.pathStr);\n  const type = query.getType(modelField);\n  return (\n    <th {...{ className }}>\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      <SLink onClick={() => query.moveField(field, true)}>chevron_left</SLink>\n      <SLink onClick={() => query.moveField(field, false)}>chevron_right</SLink>\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.pathStr)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {query.prettyPathStr(field.pathStr)}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + query.prettyPathStr(field.pathStr)\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const {\n    modelField,\n    className,\n    span,\n    value,\n    formatHint,\n    query,\n    pathStr,\n    fullRow,\n  } = props;\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (value === null) {\n    formattedValue = null;\n  } else if (modelField.type === \"html\") {\n    formattedValue = value;\n  } else if (modelField.type === \"number\") {\n    if (\n      value > formatHint.highCutOff ||\n      value < -formatHint.highCutOff ||\n      (value && value < formatHint.lowCutOff && value > -formatHint.lowCutOff)\n    ) {\n      formattedValue = value.toExponential(formatHint.significantFigures - 1);\n    } else {\n      formattedValue = value.toLocaleString(undefined, formatHint);\n    }\n  } else {\n    formattedValue = String(value);\n  }\n\n  const showContextMenu = useContext(ShowContextMenu);\n\n  function onContextMenu(e) {\n    showContextMenu(e, [\n      navigator.clipboard && {\n        name: \"Copy\",\n        fn: () => navigator.clipboard.writeText(formattedValue),\n      },\n      modelField.concrete && {\n        name: \"Filter\",\n        fn: () => query.addExactFilter(pathStr, value),\n      },\n      fullRow && {\n        name: \"Drill down\",\n        fn: () => query.drillDown(fullRow),\n      },\n    ]);\n  }\n\n  return (\n    <td\n      className={modelField.type + \" \" + className || \"\"}\n      colSpan={span || 1}\n      onContextMenu={onContextMenu}\n    >\n      {modelField.type === \"html\" ? (\n        <div dangerouslySetInnerHTML={{ __html: value }} />\n      ) : (\n        formattedValue\n      )}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const {\n    fields,\n    query,\n    classNameFirst,\n    className,\n    row,\n    formatHints,\n    fullRow,\n  } = props;\n  return fields.map((field, i) => {\n    if (row)\n      return (\n        <DataCell\n          {...{ query }}\n          pathStr={field.pathStr}\n          key={field.pathStr}\n          value={row[field.pathStr]}\n          className={`${i ? \"\" : classNameFirst} ${className}`}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={fullRow}\n        />\n      );\n    else\n      return (\n        <td\n          key={field.pathStr}\n          className={`${i ? \"\" : classNameFirst} Empty`}\n        ></td>\n      );\n  });\n}\n\nfunction HTableRow(props) {\n  const { query, field, data, span, className, formatHints } = props;\n  return (\n    <>\n      <HeadCell {...{ query, field }} />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, span, className, query }}\n          value={col[field.pathStr]}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={col}\n          pathStr={field.pathStr}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay, formatHints } = props;\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* pivoted data */}\n            {query.colFields().map((field) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={query.rowFields().length - 1} />\n                  <HTableRow\n                    {...{ query, field, formatHints }}\n                    span={query.resFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* column headers */}\n            <tr>\n              <Spacer spaces={1 - query.rowFields().length} />\n              <VTableHeadRow\n                {...{ query }}\n                fields={query.rowFields()}\n                className=\"Freeze\"\n              />\n              {cols.map((_, key) => (\n                <VTableHeadRow\n                  {...{ key, query }}\n                  fields={query.resFields()}\n                  classNameFirst=\"LeftBorder\"\n                  className=\"Freeze\"\n                />\n              ))}\n            </tr>\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {rows.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                <Spacer spaces={1 - query.rowFields().length} />\n                <VTableBodyRow\n                  {...{ query, row, formatHints }}\n                  fields={query.rowFields()}\n                  fullRow={row}\n                />\n                {body.map((table, key) => (\n                  <VTableBodyRow\n                    {...{ key, query, formatHints }}\n                    fields={query.resFields()}\n                    row={table[rowIndex]}\n                    fullRow={{ ...row, ...cols[key] }}\n                    classNameFirst=\"LeftBorder\"\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n  formatHints: {},\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.pathStr +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.pathStr}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getRelUrlForQuery(query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  return `query/${model}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const relUrl = getRelUrlForQuery(query, media);\n  return `${window.location.origin}${baseUrl}${relUrl}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(pathStr) {\n    const path = pathStr.split(\"__\");\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      model = this.config.allModelFields[model].fields[field].model;\n    }\n    return this.config.allModelFields[model].fields[path.slice(-1)];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(field, type, lookup) {\n    const lookup_type = type.lookups[lookup].type;\n    if (lookup_type.endsWith(\"choice\")) return String(field.choices[0]);\n    else return String(this.config.types[lookup_type].defaultValue);\n  }\n\n  _getFieldIndex(field, fields) {\n    return fields.findIndex((f) => f.pathStr === field.pathStr);\n  }\n\n  addField(pathStr, sort) {\n    const newFields = this.query.fields.filter((f) => f.pathStr !== pathStr);\n    const priorities = newFields\n      .map((f) => f.priority)\n      .filter((f) => f !== null);\n    const newPriority = priorities.length ? Math.max(...priorities) + 1 : 0;\n    newFields.push({\n      pathStr: pathStr,\n      sort: sort,\n      priority: sort ? newPriority : null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    const modelField = this.getField(field.pathStr);\n    this.setQuery(\n      {\n        fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n      },\n      modelField.canPivot\n    );\n  }\n\n  moveField(field, left) {\n    const modelField = this.getField(field.pathStr);\n\n    // get the fields in their sections\n    const colFields = this.colFields().slice();\n    const rowFields = this.rowFields().slice();\n    const resFields = this.resFields().slice();\n\n    // pick the section our field is in\n    let fields = null;\n    if (field.pivoted) fields = colFields;\n    else if (modelField.canPivot || !colFields.length) fields = rowFields;\n    else fields = resFields;\n\n    // work out it's old and new index\n    const index = this._getFieldIndex(field, fields);\n    const newIndex = index + (left ? -1 : 1);\n\n    // if anything changed then update our section and then\n    // rebuild all the fields from the sections\n    if (0 <= newIndex && newIndex < fields.length) {\n      fields.splice(index, 1);\n      fields.splice(newIndex, 0, field);\n      this.setQuery(\n        { fields: [].concat(rowFields, colFields, resFields) },\n        false\n      );\n    }\n  }\n\n  toggleSort(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(pathStr) {\n    const field = this.getField(pathStr);\n    const type = this.getType(field);\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      pathStr: pathStr,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(field, type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  addExactFilter(pathStr, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      pathStr: pathStr,\n      lookup: \"equals\",\n      value: String(value),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  drillDown(values) {\n    const newFilters = this.query.filters.concat(\n      this.query.fields\n        .filter((field) => this.getField(field.pathStr).canPivot)\n        .filter((field) => values.hasOwnProperty(field.pathStr))\n        .map((field) => {\n          return {\n            pathStr: field.pathStr,\n            lookup: \"equals\",\n            value: String(values[field.pathStr]),\n          };\n        })\n    );\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const field = this.getField(newFilters[index].pathStr);\n    const type = this.getType(field);\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(field, type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: this.config.allModelFields[model].defaultFilters,\n      limit: this.config.defaultRowLimit,\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !f.pivoted && this.getField(f.pathStr).canPivot\n      );\n    } else {\n      return this.query.fields;\n    }\n  }\n\n  resFields() {\n    if (this.colFields().length) {\n      return this.query.fields.filter(\n        (f) => !this.getField(f.pathStr).canPivot\n      );\n    } else {\n      return [];\n    }\n  }\n\n  prettyPathStr(pathStr) {\n    const path = pathStr.split(\"__\");\n    const prettyPath = [];\n    let model = this.query.model;\n    let field = null;\n    for (const part of path) {\n      field = this.config.allModelFields[model].fields[part];\n      model = field.model;\n      prettyPath.push(field.prettyName);\n    }\n    return prettyPath.join(\" \\u21d2 \");\n  }\n}\n\nexport { Query, getPartsForQuery, getRelUrlForQuery, getUrlForQuery, empty };\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery, getRelUrlForQuery } from \"./Query\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookup, onChange, value, field } = props;\n  const onChangeEvent = (e) => onChange(e.target.value);\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (props.lookup.type === \"isnull\")\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={\"IsNull\"}>IsNull</option>\n        <option value={\"NotNull\"}>NotNull</option>\n      </select>\n    );\n  else if (lookup.type.endsWith(\"choice\"))\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {field.choices.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  else if (lookup.type === \"number\")\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  else if (lookup.type === \"jsonfield\") {\n    const parts = value.split(/\\|(.*)/);\n    return (\n      <>\n        <input\n          value={parts[0]}\n          onChange={(e) => onChange(`${e.target.value}|${parts[1]}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n        <input\n          value={parts[1]}\n          onChange={(e) => onChange(`${parts[0]}|${e.target.value}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n      </>\n    );\n  } else\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"text\"\n      />\n    );\n}\n\nfunction Filter(props) {\n  const { pathStr, index, lookup, query, value, errorMessage } = props;\n  const field = query.getField(pathStr);\n  const type = query.getType(field);\n  return (\n    <tr>\n      <td>\n        <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n        <TLink onClick={() => query.addField(pathStr, field.defaultSort)}>\n          {query.prettyPathStr(pathStr)}\n        </TLink>{\" \"}\n      </td>\n      <td>\n        <select\n          className=\"Lookup\"\n          value={lookup}\n          onChange={(e) => query.setFilterLookup(index, e.target.value)}\n        >\n          {type.sortedLookups.map((lookupName) => (\n            <option key={lookupName} value={lookupName}>\n              {lookupName.replace(/_/g, \" \")}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td>=</td>\n      <td>\n        <FilterValue\n          {...{ value, field }}\n          onChange={(val) => query.setFilterValue(index, val)}\n          lookup={type.lookups[lookup]}\n        />\n        {errorMessage && <p className=\"Error\">{errorMessage}</p>}\n      </td>\n    </tr>\n  );\n}\n\nfunction Filters(props) {\n  const { query, filterErrors } = props;\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nfunction Field(props) {\n  const { query, path, modelField } = props;\n  const type = query.getType(modelField);\n  const [toggled, setToggled] = useState(false);\n  return (\n    <>\n      <tr>\n        <td>\n          {modelField.concrete && type.defaultLookup && (\n            <SLink onClick={() => query.addFilter(path.join(\"__\"))}>\n              filter_alt\n            </SLink>\n          )}\n        </td>\n        <td>\n          {modelField.model && (\n            <SLink\n              className=\"ToggleLink\"\n              onClick={() => setToggled((toggled) => !toggled)}\n            >\n              {toggled ? \"remove\" : \"add\"}\n            </SLink>\n          )}\n        </td>\n        <td>\n          {modelField.type ? (\n            <TLink\n              onClick={() =>\n                query.addField(path.join(\"__\"), modelField.defaultSort)\n              }\n            >\n              {modelField.prettyName}\n            </TLink>\n          ) : (\n            modelField.prettyName\n          )}\n        </td>\n      </tr>\n      {toggled && (\n        <tr>\n          <td></td>\n          <td colSpan=\"2\">\n            <AllFields {...{ query, path }} model={modelField.model} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\nfunction AllFields(props) {\n  const { query, model, path } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  const { query, sortedModels, model } = props;\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => query.setModel(e.target.value)}\n      value={model}\n    >\n      {sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    baseUrl,\n    overlay,\n    formatHints,\n  } = props;\n\n  let results;\n  if (query.rowFields().length || query.colFields().length)\n    results = (\n      <Results {...{ query, rows, cols, body, overlay, formatHints }} />\n    );\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <>\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors }} />\n      <p>\n        <span className={length >= query.query.limit ? \"Error\" : \"\"}>\n          Limit:{\" \"}\n          <input\n            className=\"RowLimit\"\n            type=\"number\"\n            value={query.query.limit}\n            onChange={(event) => {\n              query.setLimit(event.target.value);\n            }}\n            min=\"1\"\n          />{\" \"}\n          - Showing {length} results -{\" \"}\n        </span>\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields {...{ query, model }} path={[]} />\n        </div>\n        {results}\n        <div />\n      </div>\n    </>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div className=\"SavedViewActions\">\n        <span className=\"SavedViewTitle\">Saved View</span>\n        <Link to={view.link}>Open</Link>\n      </div>\n      <form>\n        <input\n          type=\"text\"\n          value={view.name}\n          onChange={(event) => {\n            setView({ name: event.target.value });\n          }}\n          className=\"SavedViewName\"\n          placeholder=\"enter a name\"\n        />\n        <table>\n          <tbody>\n            <tr>\n              <th>Model:</th>\n              <td>{view.model}</td>\n            </tr>\n            <tr>\n              <th>Fields:</th>\n              <td>{view.fields.replace(/,/g, \"\\u200b,\")}</td>\n            </tr>\n            <tr>\n              <th>Filters:</th>\n              <td>{view.query.replace(/&/g, \"\\u200b&\")}</td>\n            </tr>\n            <tr>\n              <th>Limit:</th>\n              <td className=\"SavedViewLimit\">\n                <input\n                  className=\"RowLimit\"\n                  type=\"number\"\n                  value={view.limit}\n                  onChange={(event) => {\n                    setView({ limit: event.target.value });\n                  }}\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>Created Time:</th>\n              <td>{view.createdTime}</td>\n            </tr>\n          </tbody>\n        </table>\n        <textarea\n          value={view.description}\n          onChange={(event) => {\n            setView({ description: event.target.value });\n          }}\n          placeholder=\"enter a description\"\n        />\n        {canMakePublic && (\n          <table>\n            <tbody>\n              <tr>\n                <th>Is Public:</th>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={view.public}\n                    onChange={(event) => {\n                      setView({ public: event.target.checked });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Public link:</th>\n                <td>{view.public && <CopyText text={view.publicLink} />}</td>\n              </tr>\n              <tr>\n                <th>Google Sheets:</th>\n                <td>\n                  {view.public && <CopyText text={view.googleSheetsFormula} />}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        )}\n      </form>\n      <div className=\"SavedViewActions\">\n        <Delete apiUrl={url} redirectUrl=\"/\" />\n        <Link to=\"/\">Done</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div>\n      <h1>Saved Views</h1>\n      <div>\n        {savedViews.map((view, index) => (\n          <div key={index}>\n            <p>\n              <Link className=\"Link\" to={view.link}>\n                {view.name} - {view.model}\n              </Link>{\" \"}\n              (<Link to={`/views/${view.pk}.html`}>edit</Link>)\n            </p>\n            <p>{view.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl, defaultRowLimit, allModelFields } = props;\n  return (\n    <div className=\"Index\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <Link\n                to={getRelUrlForQuery(\n                  {\n                    model: model,\n                    fields: [],\n                    filters: allModelFields[model].defaultFilters,\n                    limit: defaultRowLimit,\n                  },\n                  \"html\"\n                )}\n                className=\"Link\"\n              >\n                {model}\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React, { useState, useEffect } from \"react\";\nimport { sortBy } from \"lodash\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nconst BOOTING = \"Booting...\";\nconst LOADING = \"Loading...\";\nconst ERROR = \"Error\";\n\nfunction QueryApp(props) {\n  const { config } = props;\n  const { model, fieldStr } = useParams();\n  const [status, setStatus] = useState(BOOTING);\n  const [query, setQuery] = useState({\n    model: \"\",\n    fields: [],\n    filters: [],\n    limit: config.defaultRowLimit,\n    ...empty,\n  });\n  const queryStr = useLocation().search;\n\n  const handleError = (e) => {\n    if (e.name !== \"AbortError\") {\n      setStatus(ERROR);\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  };\n\n  const fetchResults = (state) => {\n    setStatus(LOADING);\n    const url = getUrlForQuery(config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      setQuery((query) => ({\n        ...query,\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        formatHints: response.formatHints,\n        filterErrors: response.filterErrors,\n      }));\n      setStatus(fetchInProgress ? LOADING : undefined);\n      return response;\n    });\n  };\n\n  useEffect(() => {\n    const popstate = (e) => {\n      setQuery(e.state);\n      fetchResults(e.state).catch(handleError);\n    };\n\n    const url = `${config.baseUrl}query/${model}/${\n      fieldStr || \"\"\n    }.query${queryStr}`;\n\n    doGet(url).then((response) => {\n      const reqState = {\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      setQuery(reqState);\n      setStatus(LOADING);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", popstate);\n      fetchResults(reqState).catch(handleError);\n    });\n\n    return () => {\n      window.removeEventListener(\"popstate\", popstate);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const handleQueryChange = (queryChange, reload = true) => {\n    const newState = { ...query, ...queryChange };\n\n    setQuery(newState);\n\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(config.baseUrl, newState, \"html\")\n    );\n\n    if (!reload) return;\n\n    fetchResults(newState)\n      .then((response) => {\n        const res = { ...response, ...empty };\n        res.filters = sortBy(res.filters, [\"pathStr\"]);\n        const req = { ...request };\n        req.filters = sortBy(req.filters, [\"pathStr\"]);\n        assert.deepStrictEqual(res, req);\n      })\n      .catch(handleError);\n  };\n\n  if (status === BOOTING) return \"\";\n  const queryObj = new Query(config, query, handleQueryChange);\n  return (\n    <QueryPage\n      overlay={status}\n      query={queryObj}\n      sortedModels={config.sortedModels}\n      baseUrl={config.baseUrl}\n      {...query}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <ContextMenu>\n        <Logo />\n        <div id=\"body\">\n          <Switch>\n            <Route path=\"/query/:model/:fieldStr?.html\">\n              <QueryApp config={props} />\n            </Route>\n            <Route path=\"/views/:pk.html\">\n              <EditSavedView {...{ baseUrl, canMakePublic }} />\n            </Route>\n            <Route path=\"/\">\n              <HomePage {...props} />\n            </Route>\n          </Switch>\n        </div>\n      </ContextMenu>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}