{"version":3,"sources":["Util.js","ContextMenu.js","Tooltip.js","Results.js","Query.js","Components.js","App.js","index.js"],"names":["assert","require","fetchInProgress","nextFetch","undefined","version","document","getElementById","textContent","trim","CopyText","props","text","ref","useRef","TLink","className","onClick","event","range","createRange","selectNodeContents","current","window","getSelection","removeAllRanges","addRange","execCommand","target","blur","children","type","SLink","AbortError","name","Error","doFetch","url","options","process","reject","Promise","resolve","fetch","then","response","next","res","err","ok","status","response_version","headers","get","console","log","location","reload","doGet","method","json","doPost","data","Cookies","body","JSON","stringify","useData","useState","setData","useEffect","updates","prev","doPatch","catch","e","Save","apiUrl","redirectUrl","saving","setSaving","to","Delete","state","setState","Overlay","message","Object","prototype","hasOwnProperty","ShowContextMenu","React","createContext","ContextMenu","node","handleClick","contains","addEventListener","removeEventListener","divStyle","left","x","top","y","Provider","value","entries","filter","length","clientX","clientY","preventDefault","style","map","entry","key","fn","ShowTooltip","HideTooltip","Tooltip","messages","getBoundingClientRect","right","m","Spacer","spaces","Array","_","HeadCell","query","field","leftArrow","rightArrow","verticalArrows","modelField","getField","pathStr","getType","fieldClass","getFieldClass","showContextMenu","useContext","onContextMenu","actions","action","prettyName","form","createElement","push","hiddenField","appendChild","submit","syncPost","removeField","moveField","canPivot","togglePivot","pivoted","concrete","defaultLookup","addFilter","toggleSort","prettyPathStr","dsc","priority","asc","null","sort","DataCell","formattedValue","displayValue","span","formatHint","fullRow","highCutOff","lowCutOff","toExponential","significantFigures","toLocaleString","String","dangerouslySetInnerHTML","__html","colSpan","navigator","clipboard","writeText","filterForValue","addExactFilter","drillDown","VTableHeadRow","fields","classNameFirst","i","VTableBodyRow","row","formatHints","HTableRow","col","Results","cols","rows","overlay","colFields","topTitleSpace","rowFields","sideTitleSpace","hasBody","bodyFields","rowIndex","table","empty","filterErrors","parsedFilterValues","getPartsForQuery","model","f","join","filters","lookup","encodeURIComponent","limit","getRelUrlForQuery","media","query_str","getUrlForQuery","baseUrl","relUrl","origin","Query","config","setQuery","this","path","split","slice","allModelFields","types","lookup_type","lookups","endsWith","choices","defaultValue","findIndex","newFields","priorities","newPriority","Math","max","index","_getFieldIndex","newIndex","splice","concat","newSort","newFilters","getDefaultLookupValue","values","fieldValues","Set","size","Number","defaultFilters","defaultRowLimit","prettyPath","part","FilterValue","lookupType","onChange","onChangeEvent","showTooltip","hideTooltip","helpText","date","datetime","option","step","parts","onMouseEnter","onMouseLeave","Filter","errorMessage","parsed","removeFilter","addField","defaultSort","setFilterLookup","sortedLookups","lookupName","val","setFilterValue","Filters","Field","toggled","setToggled","AllFields","modelFields","getModelFields","sortedFields","fieldName","ModelSelector","sortedModels","setModel","Logo","QueryPage","results","setLimit","min","href","getUrlForMedia","view","pk","EditSavedView","canMakePublic","useParams","setView","link","placeholder","replace","createdTime","description","checked","public","publicLink","googleSheetsFormula","SavedViewList","savedViews","HomePage","QueryApp","fieldStr","setStatus","queryStr","useLocation","search","handleError","Sentry","fetchResults","popstate","reqState","history","replaceState","queryObj","queryChange","newState","request","pushState","req","deepStrictEqual","App","basename","parse","sentryDsn","dsn","release","attachStacktrace","maxValueLength","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8dd8e7f4.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\nconst assert = require(\"assert\");\nlet fetchInProgress = false;\nlet nextFetch = undefined;\n\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nfunction CopyText(props) {\n    const { text } = props;\n    const ref = useRef(null);\n    return (\n        <>\n            <span ref={ref}>{text}</span>{\" \"}\n            <TLink\n                className=\"CopyToClipboard\"\n                onClick={(event) => {\n                    const range = document.createRange();\n                    range.selectNodeContents(ref.current);\n                    window.getSelection().removeAllRanges();\n                    window.getSelection().addRange(range);\n                    document.execCommand(\"copy\");\n                    window.getSelection().removeAllRanges();\n                    event.target.blur();\n                }}\n            >\n                (copy to clipboard)\n            </TLink>\n        </>\n    );\n}\n\nfunction TLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button {...{ onClick }} type=\"button\" className={`TLink ${className}`}>\n            {children}\n        </button>\n    );\n}\n\nfunction SLink(props) {\n    const { className, onClick, children } = props;\n    return (\n        <button\n            {...{ onClick }}\n            type=\"button\"\n            className={`SLink material-icons ${className}`}\n        >\n            {children}\n        </button>\n    );\n}\n\nclass AbortError extends Error {\n    name = \"AbortError\";\n}\n\nfunction doFetch(url, options, process) {\n    if (fetchInProgress) {\n        if (nextFetch) {\n            nextFetch.reject(new AbortError(\"skipped\"));\n        }\n        return new Promise((resolve, reject) => {\n            nextFetch = { resolve, reject, url, options, process };\n        });\n    }\n\n    fetchInProgress = true;\n\n    return fetch(url, options)\n        .then((response) => {\n            // do we have a next fetch we need to trigger\n            const next = nextFetch;\n            nextFetch = undefined;\n            fetchInProgress = false;\n\n            if (next) {\n                doFetch(next.url, next.options, next.process).then(\n                    (res) => next.resolve(res),\n                    (err) => next.reject(err)\n                );\n                throw new AbortError(\"superceeded\");\n            } else {\n                return response;\n            }\n        })\n        .then((response) => {\n            // check status\n            assert.ok(response.status >= 200);\n            assert.ok(response.status < 300);\n            return response;\n        })\n        .then((response) => {\n            // check server version\n            const response_version = response.headers.get(\"x-version\");\n            if (response_version !== version) {\n                console.log(\n                    \"Version mismatch, hard reload\",\n                    version,\n                    response_version\n                );\n                window.location.reload(true);\n            }\n            return response;\n        })\n        .then((response) => process(response)); // process data\n}\n\nfunction doGet(url) {\n    return doFetch(url, { method: \"GET\" }, (response) => response.json());\n}\n\nfunction doDelete(url) {\n    return doFetch(\n        url,\n        {\n            method: \"DELETE\",\n            headers: { \"X-CSRFToken\": Cookies.get(\"csrftoken\") },\n        },\n        (response) => response\n    );\n}\n\nfunction doPatch(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction doPost(url, data) {\n    return doFetch(\n        url,\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n            },\n            body: JSON.stringify(data),\n        },\n        (response) => response.json()\n    );\n}\n\nfunction syncPost(url, data) {\n    const form = document.createElement(\"form\");\n    form.method = \"post\";\n    form.action = url;\n\n    data.push([\"csrfmiddlewaretoken\", Cookies.get(\"csrftoken\")]);\n\n    for (const [key, value] of data) {\n        const hiddenField = document.createElement(\"input\");\n        hiddenField.type = \"hidden\";\n        hiddenField.name = key;\n        hiddenField.value = value;\n\n        form.appendChild(hiddenField);\n    }\n\n    document.body.appendChild(form);\n    form.submit();\n}\n\nfunction useData(url) {\n    const [data, setData] = useState();\n    useEffect(() => {\n        doGet(url).then((response) => setData(response));\n    }, [url]);\n    return [\n        data,\n        (updates) => {\n            setData((prev) => ({ ...prev, ...updates }));\n            doPatch(url, updates)\n                .then((response) =>\n                    setData((prev) => ({ ...prev, ...response }))\n                )\n                .catch((e) => {\n                    if (e.name !== \"AbortError\") throw e;\n                });\n        },\n    ];\n}\n\nfunction Save(props) {\n    const { name, apiUrl, data, redirectUrl } = props;\n    const [saving, setSaving] = useState(\"save\");\n    if (saving === \"save\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setSaving(\"saving\");\n                    doPost(apiUrl, data).then((response) =>\n                        setSaving(response)\n                    );\n                }}\n            >\n                Save {name || \"\"}\n            </TLink>\n        );\n    else if (saving === \"saving\") return <>Saving {name || \"\"}</>;\n    else {\n        const url =\n            typeof redirectUrl === \"function\"\n                ? redirectUrl(saving)\n                : redirectUrl;\n        return <Redirect to={url} />;\n    }\n}\n\nfunction Delete(props) {\n    const { name, apiUrl, redirectUrl } = props;\n    const [state, setState] = useState(\"normal\");\n    if (state === \"normal\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"confirm\");\n                }}\n            >\n                Delete {name || \"\"}\n            </TLink>\n        );\n    else if (state === \"confirm\")\n        return (\n            <TLink\n                onClick={(event) => {\n                    setState(\"deleting\");\n                    doDelete(apiUrl).then((response) => setState(\"deleted\"));\n                }}\n            >\n                Are you sure?\n            </TLink>\n        );\n    else if (state === \"deleting\") return \"Deleting\";\n    else if (state === \"deleted\") return <Redirect to={redirectUrl} />;\n    else throw new Error(`unknown delete state: ${state}`);\n}\n\nfunction Overlay(props) {\n    if (!props.message) return null;\n    return (\n        <div className=\"Overlay\">\n            <h1>{props.message}</h1>\n        </div>\n    );\n}\n\nfunction is(x: any, y: any) {\n    return (\n        (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n    );\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n    if (is(objA, objB)) {\n        return true;\n    }\n\n    if (\n        typeof objA !== \"object\" ||\n        objA === null ||\n        typeof objB !== \"object\" ||\n        objB === null\n    ) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        console.log(\"different keys\", keysA, keysB);\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (\n            !hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])\n        ) {\n            console.log(\n                \"different key\",\n                keysA[i],\n                objA[keysA[i]],\n                objB[keysA[i]]\n            );\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport {\n    TLink,\n    SLink,\n    doPatch,\n    doGet,\n    doDelete,\n    doPost,\n    useData,\n    version,\n    Save,\n    Delete,\n    CopyText,\n    fetchInProgress,\n    Overlay,\n    shallowEqual,\n    syncPost,\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { TLink } from \"./Util\";\n\nconst ShowContextMenu = React.createContext();\n\nfunction ContextMenu(props) {\n    const node = useRef();\n    const [state, setState] = useState();\n\n    function handleClick(e) {\n        if (node.current && node.current.contains(e.target)) return;\n        setState(null);\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClick);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const divStyle = state\n        ? {\n              left: state.x,\n              top: state.y,\n          }\n        : {};\n\n    function showContextMenu(event, entries) {\n        entries = entries.filter((x) => x);\n        if (entries.length) {\n            setState({\n                entries: entries,\n                x: event.clientX,\n                y: event.clientY,\n            });\n            event.preventDefault();\n        }\n    }\n\n    return (\n        <ShowContextMenu.Provider value={showContextMenu}>\n            {props.children}\n            {state && (\n                <div ref={node} className=\"ContextMenu\" style={divStyle}>\n                    {state.entries.map((entry) => (\n                        <p key={entry.name}>\n                            <TLink\n                                onClick={() => {\n                                    entry.fn();\n                                    setState();\n                                }}\n                            >\n                                {entry.name}\n                            </TLink>\n                        </p>\n                    ))}\n                </div>\n            )}\n        </ShowContextMenu.Provider>\n    );\n}\n\nexport { ContextMenu, ShowContextMenu };\n","import React, { useState, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst ShowTooltip = React.createContext();\r\nconst HideTooltip = React.createContext();\r\n\r\nfunction Tooltip(props) {\r\n    const node = useRef();\r\n    const [state, setState] = useState();\r\n\r\n    const divStyle = state\r\n        ? {\r\n              left: state.x,\r\n              top: state.y,\r\n          }\r\n        : {};\r\n\r\n    function showTooltip(event, messages) {\r\n        if (messages)\r\n            setState({\r\n                messages: messages,\r\n                x: event.target.getBoundingClientRect().right - 10,\r\n                y: event.target.getBoundingClientRect().top - 10,\r\n            });\r\n        event.preventDefault();\r\n    }\r\n\r\n    function hideTooltip(event) {\r\n        setState(null);\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <ShowTooltip.Provider value={showTooltip}>\r\n            <HideTooltip.Provider value={hideTooltip}>\r\n                {props.children}\r\n                {state && (\r\n                    <div ref={node} className=\"Tooltip\" style={divStyle}>\r\n                        {state.messages.map((m) => (\r\n                            <p>{m}</p>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </HideTooltip.Provider>\r\n        </ShowTooltip.Provider>\r\n    );\r\n}\r\n\r\nexport { Tooltip, ShowTooltip, HideTooltip };\r\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport { TLink, SLink, Overlay, syncPost, doPost } from \"./Util\";\nimport { ShowContextMenu } from \"./ContextMenu\";\n\nfunction Spacer(props) {\n  const { spaces } = props;\n  if (spaces > 0) {\n    return [...Array(spaces)].map((_, key) => (\n      <td className=\"Empty\" key={key} />\n    ));\n  }\n  return null;\n}\n\nfunction HeadCell(props) {\n  const {\n    query,\n    field,\n    className,\n    leftArrow,\n    rightArrow,\n    verticalArrows,\n  } = props;\n  const modelField = query.getField(field.pathStr);\n  const type = query.getType(modelField);\n  const fieldClass = query.getFieldClass(modelField);\n\n  const showContextMenu = useContext(ShowContextMenu);\n\n  function onContextMenu(e) {\n    showContextMenu(\n      e,\n      modelField.actions.map((action) => {\n        return {\n          name: action.prettyName,\n          fn: () =>\n            doPost(\"\", {\n              action: action.name,\n              field: field.pathStr,\n            }).then((response) => syncPost(response.url, response.data)),\n        };\n      })\n    );\n  }\n\n  return (\n    <th\n      className={`HeadCell ContextCursor ${className} ${fieldClass}`}\n      onContextMenu={onContextMenu}\n    >\n      <SLink onClick={() => query.removeField(field)}>close</SLink>\n      {leftArrow && (\n        <SLink onClick={() => query.moveField(field, true)}>\n          {verticalArrows ? \"expand_less\" : \"chevron_left\"}\n        </SLink>\n      )}\n      {rightArrow && (\n        <SLink onClick={() => query.moveField(field, false)}>\n          {verticalArrows ? \"expand_more\" : \"chevron_right\"}\n        </SLink>\n      )}\n      {modelField.canPivot && (\n        <>\n          <SLink onClick={() => query.togglePivot(field)}>\n            {field.pivoted ? \"call_received\" : \"call_made\"}\n          </SLink>\n        </>\n      )}\n      {modelField.concrete && type.defaultLookup ? (\n        <>\n          <SLink onClick={() => query.addFilter(field.pathStr)}>\n            filter_alt\n          </SLink>{\" \"}\n          <TLink onClick={() => query.toggleSort(field)}>\n            {query.prettyPathStr(field.pathStr)}\n            {\n              {\n                dsc: `↑${field.priority}`,\n                asc: `↓${field.priority}`,\n                null: \"\",\n              }[field.sort]\n            }\n          </TLink>\n        </>\n      ) : (\n        \" \" + query.prettyPathStr(field.pathStr)\n      )}\n    </th>\n  );\n}\n\nfunction DataCell(props) {\n  const {\n    modelField,\n    className,\n    span,\n    value,\n    formatHint,\n    query,\n    pathStr,\n    fullRow,\n  } = props;\n\n  // The value we will use in copy\n  let formattedValue;\n  if (value === undefined) {\n    formattedValue = \"\";\n  } else if (value === null) {\n    formattedValue = \"null\";\n  } else if (modelField.type === \"html\") {\n    formattedValue = value;\n  } else if (modelField.type === \"number\") {\n    if (\n      value > formatHint.highCutOff ||\n      value < -formatHint.highCutOff ||\n      (value && value < formatHint.lowCutOff && value > -formatHint.lowCutOff)\n    ) {\n      formattedValue = value.toExponential(formatHint.significantFigures - 1);\n    } else {\n      formattedValue = value.toLocaleString(undefined, formatHint);\n    }\n  } else {\n    formattedValue = String(value);\n  }\n\n  // Any extra gubbins we need to render it\n  let displayValue;\n  if (value === null) {\n    displayValue = <span className=\"Null\">{formattedValue}</span>;\n  } else if (formattedValue === \"\") {\n    displayValue = \"\\xa0\"; // nbsp\n  } else if (modelField.type === \"html\") {\n    displayValue = <div dangerouslySetInnerHTML={{ __html: value }} />;\n  } else {\n    displayValue = formattedValue;\n  }\n\n  const showContextMenu = useContext(ShowContextMenu);\n  function onContextMenu(e) {\n    showContextMenu(e, [\n      navigator.clipboard && {\n        name: \"Copy\",\n        fn: () => navigator.clipboard.writeText(formattedValue),\n      },\n      modelField.concrete &&\n        query.filterForValue(pathStr, value) && {\n          name: \"Filter\",\n          fn: () => query.addExactFilter(pathStr, value),\n        },\n      fullRow && {\n        name: \"Drill down\",\n        fn: () => query.drillDown(fullRow),\n      },\n    ]);\n  }\n\n  return (\n    <td\n      className={`DataCell ContextCursor ${modelField.type} ${className}`}\n      colSpan={span || 1}\n      onContextMenu={onContextMenu}\n    >\n      {displayValue}\n    </td>\n  );\n}\n\nfunction VTableHeadRow(props) {\n  const { fields, query, classNameFirst, className } = props;\n  return fields.map((field, i) => (\n    <HeadCell\n      {...{ query, field }}\n      key={field.pathStr}\n      className={`HoriBorder ${className} ` + (i ? \"\" : classNameFirst)}\n      verticalArrows={false}\n      leftArrow={i !== 0}\n      rightArrow={i !== fields.length - 1}\n    />\n  ));\n}\n\nfunction VTableBodyRow(props) {\n  const {\n    fields,\n    query,\n    classNameFirst,\n    className,\n    row,\n    formatHints,\n    fullRow,\n  } = props;\n  return fields.map((field, i) => {\n    if (row)\n      return (\n        <DataCell\n          {...{ query }}\n          pathStr={field.pathStr}\n          key={field.pathStr}\n          value={row[field.pathStr]}\n          className={`${i ? \"\" : classNameFirst} ${className}`}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={fullRow}\n        />\n      );\n    else\n      return (\n        <td\n          key={field.pathStr}\n          className={`${i ? \"\" : classNameFirst} Empty`}\n        ></td>\n      );\n  });\n}\n\nfunction HTableRow(props) {\n  const {\n    query,\n    field,\n    data,\n    span,\n    className,\n    formatHints,\n    leftArrow,\n    rightArrow,\n  } = props;\n  return (\n    <>\n      <HeadCell\n        {...{ query, field, leftArrow, rightArrow }}\n        verticalArrows={true}\n      />\n      {data.map((col, key) => (\n        <DataCell\n          {...{ key, span, className, query }}\n          value={col[field.pathStr]}\n          modelField={query.getField(field.pathStr)}\n          formatHint={formatHints[field.pathStr]}\n          fullRow={col}\n          pathStr={field.pathStr}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction Results(props) {\n  const { query, cols, rows, body, overlay, formatHints } = props;\n  const colFields = query.colFields();\n  const topTitleSpace = query.rowFields().length - 1;\n  const sideTitleSpace = query.colFields().length\n    ? 1 - query.rowFields().length\n    : 0;\n  const hasBody = query.rowFields().length || query.bodyFields().length || null;\n\n  return (\n    <div className=\"Results\">\n      <Overlay message={overlay} />\n      <div className=\"Scroller\">\n        <table>\n          <thead>\n            {/* col headers and data aka pivots */}\n            {colFields.map((field, i) => {\n              return (\n                <tr key={field.pathStr}>\n                  <Spacer spaces={topTitleSpace} />\n                  <HTableRow\n                    {...{ query, field, formatHints }}\n                    span={query.bodyFields().length}\n                    data={cols}\n                    className={overlay && \"Fade\"}\n                    leftArrow={i !== 0}\n                    rightArrow={i !== colFields.length - 1}\n                  />\n                </tr>\n              );\n            })}\n\n            {/* body/aggregate headers */}\n            {hasBody && (\n              <tr>\n                <Spacer spaces={sideTitleSpace} />\n                <VTableHeadRow\n                  {...{ query }}\n                  fields={query.rowFields()}\n                  className=\"Freeze\"\n                />\n                {(cols.length ? cols : [null]).map((_, key) => (\n                  <VTableHeadRow\n                    {...{ key, query }}\n                    fields={query.bodyFields()}\n                    classNameFirst=\"LeftBorder\"\n                    className=\"Freeze\"\n                  />\n                ))}\n              </tr>\n            )}\n          </thead>\n\n          {/* row headers and body */}\n          <tbody className={overlay && \"Fade\"}>\n            {hasBody &&\n              rows.map(\n                (row, rowIndex) =>\n                  row && (\n                    <tr key={rowIndex}>\n                      <Spacer spaces={sideTitleSpace} />\n                      <VTableBodyRow\n                        {...{ query, row, formatHints }}\n                        fields={query.rowFields()}\n                        fullRow={row}\n                      />\n                      {body.map((table, key) => (\n                        <VTableBodyRow\n                          {...{ key, query, formatHints }}\n                          fields={query.bodyFields()}\n                          row={table[rowIndex]}\n                          fullRow={{ ...row, ...cols[key] }}\n                          classNameFirst=\"LeftBorder\"\n                        />\n                      ))}\n                    </tr>\n                  )\n              )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport { Results };\n","const empty = {\n  rows: [{}],\n  cols: [{}],\n  body: [[{}]],\n  length: 0,\n  filterErrors: [],\n  parsedFilterValues: [],\n  formatHints: {},\n};\n\nfunction getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          (f.pivoted ? \"&\" : \"\") +\n          f.pathStr +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.pathStr}__${f.lookup}=${encodeURIComponent(f.value)}`)\n      .join(\"&\"),\n    limit: query.limit,\n  };\n}\n\nfunction getRelUrlForQuery(query, media) {\n  const { model, fields, query: query_str, limit } = getPartsForQuery(query);\n  return `query/${model}/${fields}.${media}?${query_str}&limit=${limit}`;\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const relUrl = getRelUrlForQuery(query, media);\n  return `${window.location.origin}${baseUrl}${relUrl}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(pathStr) {\n    const path = pathStr.split(\"__\");\n    let model = this.query.model;\n    for (const field of path.slice(0, -1)) {\n      const modelField = this.config.allModelFields[model].fields[field];\n      if (modelField === undefined) return null;\n      model = modelField.model;\n    }\n    return this.config.allModelFields[model].fields[path.slice(-1)];\n  }\n\n  getType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookupValue(field, type, lookup) {\n    const lookup_type = type.lookups[lookup].type;\n    if (lookup_type.endsWith(\"choice\")) return String(field.choices[0]);\n    else return String(this.config.types[lookup_type].defaultValue);\n  }\n\n  _getFieldIndex(field, fields) {\n    return fields.findIndex((f) => f.pathStr === field.pathStr);\n  }\n\n  addField(pathStr, sort) {\n    const newFields = this.query.fields.filter((f) => f.pathStr !== pathStr);\n    const priorities = newFields\n      .map((f) => f.priority)\n      .filter((f) => f !== null);\n    const newPriority = priorities.length ? Math.max(...priorities) + 1 : 0;\n    newFields.push({\n      pathStr: pathStr,\n      sort: sort,\n      priority: sort ? newPriority : null,\n      pivoted: false,\n    });\n    this.setQuery({ fields: newFields });\n  }\n\n  removeField(field) {\n    const modelField = this.getField(field.pathStr);\n    this.setQuery(\n      {\n        fields: this.query.fields.filter((f) => f.pathStr !== field.pathStr),\n      },\n      modelField.canPivot\n    );\n  }\n\n  moveField(field, left) {\n    const modelField = this.getField(field.pathStr);\n\n    // get the fields in their sections\n    const colFields = this.colFields().slice();\n    const rowFields = this.rowFields().slice();\n    const bodyFields = this.bodyFields().slice();\n\n    // pick the section our field is in\n    let fields = null;\n    if (field.pivoted) fields = colFields;\n    else if (modelField.canPivot) fields = rowFields;\n    else fields = bodyFields;\n\n    // work out it's old and new index\n    const index = this._getFieldIndex(field, fields);\n    const newIndex = index + (left ? -1 : 1);\n\n    // if anything changed then update our section and then\n    // rebuild all the fields from the sections\n    if (0 <= newIndex && newIndex < fields.length) {\n      fields.splice(index, 1);\n      fields.splice(newIndex, 0, field);\n      this.setQuery(\n        { fields: [].concat(rowFields, colFields, bodyFields) },\n        false\n      );\n    }\n  }\n\n  toggleSort(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  togglePivot(field) {\n    const index = this._getFieldIndex(field, this.query.fields);\n    let newFields = this.query.fields.slice();\n    newFields[index].pivoted = !newFields[index].pivoted;\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(pathStr) {\n    const field = this.getField(pathStr);\n    const type = this.getType(field);\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      pathStr: pathStr,\n      lookup: type.defaultLookup,\n      value: this.getDefaultLookupValue(field, type, type.defaultLookup),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  filterForValue(pathStr, value) {\n    const lookups = this.getType(this.getField(pathStr)).lookups;\n    if (value === null && lookups.hasOwnProperty(\"is_null\"))\n      return {\n        pathStr: pathStr,\n        lookup: \"is_null\",\n        value: \"IsNull\",\n      };\n    else if (lookups.hasOwnProperty(\"equals\"))\n      return {\n        pathStr: pathStr,\n        lookup: \"equals\",\n        value: String(value),\n      };\n    else return null;\n  }\n\n  addExactFilter(pathStr, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters.push(this.filterForValue(pathStr, value));\n    this.setQuery({ filters: newFilters });\n  }\n\n  drillDown(values) {\n    const newFilters = this.query.filters.concat(\n      this.query.fields\n        // limit to filterable\n        .filter((field) => this.getField(field.pathStr).canPivot)\n        .filter((field) => this.getField(field.pathStr).concrete)\n        // values is the contextually filterable stuff, so overlap with above\n        .filter((field) => values.hasOwnProperty(field.pathStr))\n        // and only the filters that will actually do some filtering\n        .filter((field) => {\n          const allValues = field.pivoted ? this.query.cols : this.query.rows;\n          const fieldValues = allValues.map((row) => row[field.pathStr]);\n          const uniqueValues = new Set(fieldValues);\n          return uniqueValues.size > 1;\n        })\n        .map((field) =>\n          this.filterForValue(field.pathStr, values[field.pathStr])\n        )\n        .filter((f) => f !== null)\n    );\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    const filter = newFilters[index];\n    const field = this.getField(newFilters[index].pathStr);\n    const type = this.getType(field);\n    if (type.lookups[filter.lookup].type !== type.lookups[lookup].type) {\n      filter.value = this.getDefaultLookupValue(field, type, lookup);\n    }\n    filter.lookup = lookup;\n    this.setQuery({ filters: newFilters });\n  }\n\n  setLimit(limit) {\n    limit = Number(limit);\n    this.setQuery({ limit: limit > 0 ? limit : 1 });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: this.config.allModelFields[model].defaultFilters,\n      limit: this.config.defaultRowLimit,\n      ...empty,\n    });\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n\n  colFields() {\n    return this.query.fields.filter((f) => f.pivoted);\n  }\n\n  rowFields() {\n    return this.query.fields.filter(\n      (f) => this.getField(f.pathStr).canPivot && !f.pivoted\n    );\n  }\n\n  bodyFields() {\n    return this.query.fields.filter((f) => !this.getField(f.pathStr).canPivot);\n  }\n\n  prettyPathStr(pathStr) {\n    const path = pathStr.split(\"__\");\n    const prettyPath = [];\n    let model = this.query.model;\n    let field = null;\n    for (const part of path) {\n      field = this.config.allModelFields[model].fields[part];\n      model = field.model;\n      prettyPath.push(field.prettyName);\n    }\n    return prettyPath.join(\" \\u21d2 \");\n  }\n\n  getFieldClass(field) {\n    if (!field.type) return \"RelatedField\";\n    if (!field.concrete) return \"CalculatedField\";\n    if (!field.canPivot) return \"AggregateField\";\n    if (!field.model) return \"FunctionField\";\n    return \"ConcreteField\";\n  }\n}\n\nexport { Query, getPartsForQuery, getRelUrlForQuery, getUrlForQuery, empty };\n","import React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TLink, SLink, useData, version, Save, Delete, CopyText } from \"./Util\";\nimport { Results } from \"./Results\";\nimport { getPartsForQuery, getRelUrlForQuery } from \"./Query\";\nimport { ShowTooltip, HideTooltip } from \"./Tooltip\";\nimport \"./App.css\";\n\nfunction FilterValue(props) {\n  const { lookupType, onChange, value, field } = props;\n  const onChangeEvent = (e) => onChange(e.target.value);\n  const showTooltip = useContext(ShowTooltip);\n  const hideTooltip = useContext(HideTooltip);\n  const helpText = {\n    date: [\n      \"Date filter values can be a literal value e.g. '2020-12-21' or 'today' or a series of clauses applied in order from today.\",\n      \"e.g. 'day=1 month+1 tuesday+2' which means move to the 1st of this month, then move forward a month, then move forward to the second Tuesday.\",\n      \"You can use 'year', 'month' or 'day' with '+', '-', or '=' to add remove or replace the given quantity.\",\n      \"Or you can use a weekday name with '+' or '-' to get the n-th next or previous (including today) instance of that day.\",\n      \"Bear in mind that 'day=1 month+1' may produce a different result from 'month+1 day=1', for example on Jan 31st.\",\n    ],\n    datetime: [\n      \"Datetime filter values can be a literal value e.g. '2020-12-21 14:56' or 'now' or a series of clauses applied in order from now.\",\n      \"e.g. 'day=1 month+1 tuesday+2' which means move to the 1st of this month, then move forward a month, then move forward to the second Tuesday.\",\n      \"You can use 'year', 'month', 'day', 'hour', 'minute' or 'second' with '+', '-', or '=' to add remove or replace the given quantity.\",\n      \"Or you can use a weekday name with '+' or '-' to get the n-th next or previous (including today) instance of that day.\",\n      \"Bear in mind that 'day=1 month+1' may produce a different result from 'month+1 day=1', for example on Jan 31st.\",\n    ],\n  };\n\n  if (props.lookupType === \"boolean\") {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  } else if (props.lookupType === \"isnull\") {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        <option value={\"IsNull\"}>IsNull</option>\n        <option value={\"NotNull\"}>NotNull</option>\n      </select>\n    );\n  } else if (lookupType.endsWith(\"choice\")) {\n    return (\n      <select {...{ value }} onChange={onChangeEvent} className=\"FilterValue\">\n        {field.choices.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (lookupType === \"number\") {\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n      />\n    );\n  } else if (lookupType === \"jsonfield\") {\n    const parts = value.split(/\\|(.*)/);\n    return (\n      <>\n        <input\n          value={parts[0]}\n          onChange={(e) => onChange(`${e.target.value}|${parts[1]}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n        <input\n          value={parts[1]}\n          onChange={(e) => onChange(`${parts[0]}|${e.target.value}`)}\n          className=\"FilterValue Half\"\n          type=\"text\"\n        />\n      </>\n    );\n  } else {\n    return (\n      <input\n        {...{ value }}\n        onChange={onChangeEvent}\n        className=\"FilterValue\"\n        type=\"text\"\n        onMouseEnter={(e) => showTooltip(e, helpText[lookupType])}\n        onMouseLeave={(e) => hideTooltip(e)}\n      />\n    );\n  }\n}\n\nfunction Filter(props) {\n  const { pathStr, index, lookup, query, value, errorMessage, parsed } = props;\n  const field = query.getField(pathStr);\n  var type = null;\n  var lookupType = null;\n  if (field !== null) {\n    type = query.getType(field);\n    if (type.lookups.hasOwnProperty(lookup))\n      lookupType = type.lookups[lookup].type;\n  }\n\n  if (lookupType === null)\n    return (\n      <tr className=\"Filter\">\n        <td>\n          {\" \"}\n          <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n          {pathStr}\n        </td>\n        <td>{lookup}</td>\n        <td>\n          {value}\n          <p className=\"Error\">{errorMessage}</p>\n        </td>\n      </tr>\n    );\n\n  return (\n    <tr className=\"Filter\">\n      <td>\n        <SLink onClick={() => query.removeFilter(index)}>close</SLink>{\" \"}\n        <TLink onClick={() => query.addField(pathStr, field.defaultSort)}>\n          {query.prettyPathStr(pathStr)}\n        </TLink>{\" \"}\n      </td>\n      <td>\n        <select\n          className=\"Lookup\"\n          value={lookup}\n          onChange={(e) => query.setFilterLookup(index, e.target.value)}\n        >\n          {type.sortedLookups.map((lookupName) => (\n            <option key={lookupName} value={lookupName}>\n              {type.lookups[lookupName].prettyName}\n            </option>\n          ))}\n        </select>\n      </td>\n      <td>=</td>\n      <td>\n        <FilterValue\n          {...{ value, field, lookupType }}\n          onChange={(val) => query.setFilterValue(index, val)}\n        />\n        {errorMessage && <p className=\"Error\">{errorMessage}</p>}\n        {parsed !== null &&\n          (lookupType === \"date\" || lookupType === \"datetime\") && (\n            <p className=\"Success\">{parsed}</p>\n          )}\n      </td>\n    </tr>\n  );\n}\n\nfunction Filters(props) {\n  const { query, filterErrors, parsedFilterValues } = props;\n  return (\n    <form className=\"Filters\">\n      <table>\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              {...{ query, index }}\n              {...filter}\n              key={index}\n              errorMessage={filterErrors[index]}\n              parsed={parsedFilterValues[index]}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nfunction Field(props) {\n  const { query, path, modelField } = props;\n  const type = query.getType(modelField);\n  const [toggled, setToggled] = useState(false);\n  return (\n    <>\n      <tr className=\"Field\">\n        {/* filter */}\n        <td>\n          {modelField.concrete && type.defaultLookup && (\n            <SLink onClick={() => query.addFilter(path.join(\"__\"))}>\n              filter_alt\n            </SLink>\n          )}\n        </td>\n\n        {/* expand */}\n        <td>\n          {modelField.model && (\n            <SLink\n              className=\"ToggleLink\"\n              onClick={() => setToggled((toggled) => !toggled)}\n            >\n              {toggled ? \"remove\" : \"add\"}\n            </SLink>\n          )}\n        </td>\n\n        {/* name */}\n        <td className={`FieldName ${query.getFieldClass(modelField)}`}>\n          {modelField.type ? (\n            <TLink\n              onClick={() =>\n                query.addField(path.join(\"__\"), modelField.defaultSort)\n              }\n            >\n              {modelField.prettyName}\n            </TLink>\n          ) : (\n            modelField.prettyName\n          )}\n        </td>\n      </tr>\n\n      {/* sub fields */}\n      {toggled && (\n        <tr>\n          <td></td>\n          <td colSpan=\"2\">\n            <AllFields {...{ query, path }} model={modelField.model} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\nfunction AllFields(props) {\n  const { query, model, path } = props;\n  const modelFields = query.getModelFields(model);\n  return (\n    <table className=\"AllFields\">\n      <tbody>\n        {modelFields.sortedFields.map((fieldName) => {\n          const modelField = modelFields.fields[fieldName];\n          return (\n            <Field\n              key={fieldName}\n              {...{ query, modelField }}\n              path={path.concat([fieldName])}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  const { query, sortedModels, model } = props;\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => query.setModel(e.target.value)}\n      value={model}\n    >\n      {sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <Link to=\"/\" className=\"Logo\">\n      <span>DDB</span>\n      <span className=\"Version\">v{version}</span>\n    </Link>\n  );\n}\n\nfunction QueryPage(props) {\n  const {\n    query,\n    rows,\n    cols,\n    body,\n    length,\n    sortedModels,\n    model,\n    filters,\n    filterErrors,\n    parsedFilterValues,\n    baseUrl,\n    overlay,\n    formatHints,\n  } = props;\n\n  let results;\n  if (query.query.fields.length)\n    results = (\n      <Results {...{ query, rows, cols, body, overlay, formatHints }} />\n    );\n  else results = <h2>No fields selected</h2>;\n\n  return (\n    <div className=\"QueryPage\">\n      <ModelSelector {...{ query, sortedModels, model }} />\n      <Filters {...{ query, filters, filterErrors, parsedFilterValues }} />\n      <p>\n        <span className={length >= query.query.limit ? \"Error\" : \"\"}>\n          Limit:{\" \"}\n          <input\n            className=\"RowLimit\"\n            type=\"number\"\n            value={query.query.limit}\n            onChange={(event) => {\n              query.setLimit(event.target.value);\n            }}\n            min=\"1\"\n          />{\" \"}\n          - Showing {length} results -{\" \"}\n        </span>\n        <a href={query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <a href={query.getUrlForMedia(\"sql\")}>View SQL Query</a> -{\" \"}\n        <Save\n          name=\"View\"\n          apiUrl={`${baseUrl}api/views/`}\n          data={getPartsForQuery(query.query)}\n          redirectUrl={(view) => `/views/${view.pk}.html`}\n        />\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <div className=\"Scroller\">\n            <AllFields {...{ query, model }} path={[]} />\n          </div>\n        </div>\n        {results}\n        <div />\n      </div>\n    </div>\n  );\n}\n\nfunction EditSavedView(props) {\n  const { canMakePublic, baseUrl } = props;\n  const { pk } = useParams();\n  const url = `${baseUrl}api/views/${pk}/`;\n  const [view, setView] = useData(url);\n  if (!view) return \"\";\n  return (\n    <div className=\"EditSavedView\">\n      <div>\n        <div className=\"SavedViewActions\">\n          <span className=\"SavedViewTitle\">Saved View</span>\n          <Link to={view.link}>Open</Link>\n        </div>\n        <form>\n          <input\n            type=\"text\"\n            value={view.name}\n            onChange={(event) => {\n              setView({ name: event.target.value });\n            }}\n            className=\"SavedViewName\"\n            placeholder=\"enter a name\"\n          />\n          <table>\n            <tbody>\n              <tr>\n                <th>Model:</th>\n                <td>{view.model}</td>\n              </tr>\n              <tr>\n                <th>Fields:</th>\n                <td>{view.fields.replace(/,/g, \"\\u200b,\")}</td>\n              </tr>\n              <tr>\n                <th>Filters:</th>\n                <td>{view.query.replace(/&/g, \"\\u200b&\")}</td>\n              </tr>\n              <tr>\n                <th>Limit:</th>\n                <td className=\"SavedViewLimit\">\n                  <input\n                    className=\"RowLimit\"\n                    type=\"number\"\n                    value={view.limit}\n                    onChange={(event) => {\n                      setView({ limit: event.target.value });\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>Created Time:</th>\n                <td>{view.createdTime}</td>\n              </tr>\n            </tbody>\n          </table>\n          <textarea\n            value={view.description}\n            onChange={(event) => {\n              setView({ description: event.target.value });\n            }}\n            placeholder=\"enter a description\"\n          />\n          {canMakePublic && (\n            <table>\n              <tbody>\n                <tr>\n                  <th>Is Public:</th>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={view.public}\n                      onChange={(event) => {\n                        setView({ public: event.target.checked });\n                      }}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <th>Public link:</th>\n                  <td>{view.public && <CopyText text={view.publicLink} />}</td>\n                </tr>\n                <tr>\n                  <th>Google Sheets:</th>\n                  <td>\n                    {view.public && (\n                      <CopyText text={view.googleSheetsFormula} />\n                    )}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          )}\n        </form>\n        <div className=\"SavedViewActions\">\n          <Delete apiUrl={url} redirectUrl=\"/\" />\n          <Link to=\"/\">Done</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SavedViewList(props) {\n  const { baseUrl } = props;\n  const [savedViews] = useData(`${baseUrl}api/views/`);\n  if (!savedViews) return \"\";\n  return (\n    <div className=\"SavedViewList\">\n      <h1>Saved Views</h1>\n      {savedViews.map((view, index) => (\n        <div key={index}>\n          <h2>\n            <Link className=\"Link\" to={view.link}>\n              {view.name || \"<unnamed>\"}\n            </Link>\n          </h2>\n          <p>\n            on {view.model} - <Link to={`/views/${view.pk}.html`}>edit</Link>\n          </p>\n          <p>{view.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  const { sortedModels, baseUrl, defaultRowLimit, allModelFields } = props;\n  return (\n    <div className=\"HomePage\">\n      <div>\n        <h1>Models</h1>\n        <div>\n          {sortedModels.map((model) => (\n            <div key={model}>\n              <h2>\n                <Link\n                  to={getRelUrlForQuery(\n                    {\n                      model: model,\n                      fields: [],\n                      filters: allModelFields[model].defaultFilters,\n                      limit: defaultRowLimit,\n                    },\n                    \"html\"\n                  )}\n                  className=\"Link\"\n                >\n                  {model}\n                </Link>\n              </h2>\n            </div>\n          ))}\n        </div>\n      </div>\n      <SavedViewList {...{ baseUrl }} />\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage, Logo, EditSavedView };\n","import * as Sentry from \"@sentry/browser\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useParams,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { Tooltip } from \"./Tooltip\";\nimport { HomePage, QueryPage, Logo, EditSavedView } from \"./Components\";\nimport { Query, getUrlForQuery, empty } from \"./Query\";\nimport { doGet, fetchInProgress } from \"./Util\";\n\nconst assert = require(\"assert\");\n\nconst BOOTING = \"Booting...\";\nconst LOADING = \"Loading...\";\nconst ERROR = \"Error\";\n\nfunction QueryApp(props) {\n  const { config } = props;\n  const { model, fieldStr } = useParams();\n  const [status, setStatus] = useState(BOOTING);\n  const [query, setQuery] = useState({\n    model: \"\",\n    fields: [],\n    filters: [],\n    limit: config.defaultRowLimit,\n    ...empty,\n  });\n  const queryStr = useLocation().search;\n\n  const handleError = (e) => {\n    if (e.name !== \"AbortError\") {\n      setStatus(ERROR);\n      console.log(e);\n      Sentry.captureException(e);\n    }\n  };\n\n  const fetchResults = (state) => {\n    setStatus(LOADING);\n    const url = getUrlForQuery(config.baseUrl, state, \"json\");\n\n    return doGet(url).then((response) => {\n      setQuery((query) => ({\n        ...query,\n        body: response.body,\n        cols: response.cols,\n        rows: response.rows,\n        length: response.length,\n        formatHints: response.formatHints,\n        filterErrors: response.filterErrors,\n        parsedFilterValues: response.parsedFilterValues,\n      }));\n      setStatus(fetchInProgress ? LOADING : undefined);\n      return response;\n    });\n  };\n\n  useEffect(() => {\n    const popstate = (e) => {\n      setQuery(e.state);\n      fetchResults(e.state).catch(handleError);\n    };\n\n    const url = `${config.baseUrl}query/${model}/${\n      fieldStr || \"\"\n    }.query${queryStr}`;\n\n    doGet(url).then((response) => {\n      const reqState = {\n        model: response.model,\n        fields: response.fields,\n        filters: response.filters,\n        limit: response.limit,\n        ...empty,\n      };\n      setQuery(reqState);\n      setStatus(LOADING);\n      window.history.replaceState(\n        reqState,\n        null,\n        getUrlForQuery(config.baseUrl, reqState, \"html\")\n      );\n      window.addEventListener(\"popstate\", popstate);\n      fetchResults(reqState).catch(handleError);\n    });\n\n    return () => {\n      window.removeEventListener(\"popstate\", popstate);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const handleQueryChange = (queryChange, reload = true) => {\n    const newState = { ...query, ...queryChange };\n\n    setQuery(newState);\n\n    const request = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      limit: newState.limit,\n      ...empty,\n    };\n    window.history.pushState(\n      request,\n      null,\n      getUrlForQuery(config.baseUrl, newState, \"html\")\n    );\n\n    if (!reload) return;\n\n    fetchResults(newState)\n      .then((response) => {\n        const res = { ...response, ...empty };\n        const req = { ...request };\n        assert.deepStrictEqual(res, req);\n      })\n      .catch(handleError);\n  };\n\n  if (status === BOOTING) return \"\";\n  const queryObj = new Query(config, query, handleQueryChange);\n  return (\n    <QueryPage\n      overlay={status}\n      query={queryObj}\n      sortedModels={config.sortedModels}\n      baseUrl={config.baseUrl}\n      {...query}\n    />\n  );\n}\n\nfunction App(props) {\n  const { baseUrl, canMakePublic } = props;\n  return (\n    <BrowserRouter basename={baseUrl}>\n      <ContextMenu>\n        <Tooltip>\n          <Logo />\n          <Switch>\n            <Route path=\"/query/:model/:fieldStr?.html\">\n              <QueryApp config={props} />\n            </Route>\n            <Route path=\"/views/:pk.html\">\n              <EditSavedView {...{ baseUrl, canMakePublic }} />\n            </Route>\n            <Route path=\"/\">\n              <HomePage {...props} />\n            </Route>\n          </Switch>\n        </Tooltip>\n      </ContextMenu>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst config = JSON.parse(\n    document.getElementById(\"backend-config\").textContent\n);\nconst version = document.getElementById(\"backend-version\").textContent.trim();\n\nif (config.sentryDsn) {\n    Sentry.init({\n        dsn: config.sentryDsn,\n        release: version,\n        attachStacktrace: true,\n        maxValueLength: 10000,\n    });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...config} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}